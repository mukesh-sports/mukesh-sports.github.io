{"version":3,"sources":["Component/CoinsModule/RedeemCoins.jsx"],"names":["globalRCLIST","RedeemCoins","props","_this","Object","_Users_mukesh_sites_projects_dup_fantasysports_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_Users_mukesh_sites_projects_dup_fantasysports_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_mukesh_sites_projects_dup_fantasysports_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","callApiRedeemList","setState","ISLOAD","getRewardList","then","responseJson","response_code","WSC","listdata","data","rewards","RCLIST","sort","a","b","parseInt","redeem_coins","btnAction","value","state","isApiCalling","updatedBal","userCoinB","param","coin_reward_id","redeemRewards","CustomHeader","updateCoinBalance","showRSuccess","bal","WSManager","getBalance","setBalance","renderListItem","item","idx","react__WEBPACK_IMPORTED_MODULE_5___default","createElement","key","className","type","src","Utilities","getRewardsURL","image","alt","Fragment","getMasterData","currency_code","detail","AL","href","onClick","Images","IC_COIN_GRAY","IC_COIN","Shimmer","index","react_loading_skeleton__WEBPACK_IMPORTED_MODULE_7___default","width","height","point_balance","length","_this2","_this$state","HeaderOption","back","notification","title","hideShadow","showBal","_views_Dashboard__WEBPACK_IMPORTED_MODULE_8__","Consumer","context","react_helmet__WEBPACK_IMPORTED_MODULE_6__","titleTemplate","concat","MD","template","RWRDS","name","content","description","keywords","_components_CustomHeader__WEBPACK_IMPORTED_MODULE_11__","assign","_Map","map","Component"],"mappings":"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","file":"static/js/26.7688276b.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Helmet } from \"react-helmet\";\nimport Skeleton from 'react-loading-skeleton';\nimport { MyContext } from '../../views/Dashboard';\nimport { Utilities, _Map } from '../../Utilities/Utilities';\nimport { getRewardList, redeemRewards } from '../../WSHelper/WSCallings';\nimport CustomHeader from '../../components/CustomHeader';\nimport WSManager from \"../../WSHelper/WSManager\";\nimport MD from \"../../helper/MetaData\";\nimport Images from '../../components/images';\nimport * as WSC from \"../../WSHelper/WSConstants\";\nimport * as AL from \"../../helper/AppLabels\";\n\nvar globalRCLIST = []\n\nclass RedeemCoins extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            RCLIST: [],\n            ISLOAD: false,\n            userCoinB: (WSManager.getBalance().point_balance || 0),\n            isApiCalling: false\n        }\n    }\n\n    componentDidMount() {\n        if (globalRCLIST.length > 0) {\n            this.setState({\n                RCLIST: globalRCLIST.sort((a, b) => parseInt(a.redeem_coins) - parseInt(b.redeem_coins))\n            })\n        } else {\n            this.callApiRedeemList();\n        }\n    }\n\n    callApiRedeemList = () => {\n        let param = {}\n        this.setState({ ISLOAD: true })\n        getRewardList(param).then((responseJson) => {\n            this.setState({ ISLOAD: false })\n            if (responseJson.response_code === WSC.successCode) {\n                let listdata = responseJson.data.rewards || [];\n                this.setState({\n                    RCLIST: listdata.sort((a, b) => parseInt(a.redeem_coins) - parseInt(b.redeem_coins))\n                })\n                globalRCLIST = listdata.sort((a, b) => parseInt(a.redeem_coins) - parseInt(b.redeem_coins))\n            }\n        })\n    }\n\n    btnAction = (value) => {\n        if (!this.state.isApiCalling) {\n            let preBal = parseInt(this.state.userCoinB);\n            let updatedBal = preBal - parseInt(value.redeem_coins);\n            let param = {\n                coin_reward_id: value.coin_reward_id['$oid']\n            }\n            this.setState({\n                isApiCalling: true\n            })\n            redeemRewards(param).then((responseJson) => {\n                this.setState({\n                    isApiCalling: false\n                })\n                if (responseJson.response_code === WSC.successCode) {\n                    CustomHeader.updateCoinBalance(updatedBal);\n                    this.setState({ userCoinB: updatedBal });\n                    CustomHeader.showRSuccess(value);\n                    let bal = WSManager.getBalance();\n                    bal[\"point_balance\"] = updatedBal;\n                    WSManager.setBalance(bal);\n                }\n            })\n        }\n    }\n\n    renderListItem = (item, idx) => {\n        return (\n            <li key={idx} className={\"border \" + (parseInt(item.redeem_coins || '0') > parseInt(this.state.userCoinB) ? 'disabled' : '')}>\n                <div className=\"lock-icon\"><i className=\"icon-lock-ic\" /></div>\n                <div className=\"text-c\">\n                    {\n                        item.type === \"3\" && <div className=\"img-c\">\n                            <img src={Utilities.getRewardsURL(item.image)} alt=\"\" />\n                        </div>\n                    }\n                    <div className={\"detail-c\" + (item.type === \"3\" ? '' : ' not-gift')}>\n                        {\n                            item.type != \"3\" ?\n                                <React.Fragment>\n                                    <p className=\"list-t\"> {item.type === \"1\" ? <i className=\"icon-bonus\" /> : (Utilities.getMasterData().currency_code)}{item.value}</p>\n                                    <p className=\"list-d\">{item.type === \"3\" ? item.detail : (item.type === \"2\" ? AL.REAL_CASH : AL.BONUS_CASH)}</p>\n                                </React.Fragment>\n                                :\n                                <p className=\"list-t\">{item.detail}</p>\n                        }\n                    </div>\n                </div>\n                <div>\n                    <p className=\"list-d text-center m-b-xs\">{AL.REDEEM_W}</p>\n                    <a href className=\"list-btn\" onClick={() => this.btnAction(item)} ><img className=\"coin-img\" src={parseInt(item.redeem_coins || '0') > parseInt(this.state.userCoinB) ? Images.IC_COIN_GRAY : Images.IC_COIN} alt=\"\" />{item.redeem_coins}</a>\n                </div>\n            </li>\n        )\n    }\n\n    Shimmer = (index) => {\n        return (\n            <div key={index} className=\"contest-list border\">\n                <div className=\"shimmer-container\">\n                    <div className=\"shimmer-image\">\n                        <Skeleton width={70} height={46} />\n                    </div>\n                    <div className=\"shimmer-top-view\">\n                        <div className=\"shimmer-line m-l w-75\">\n                            <Skeleton height={9} width={'75%'} />\n                            <Skeleton height={6} width={'80%'} />\n                        </div>\n                    </div>\n                    <div className=\"m-0\">\n                        <Skeleton height={6} width={'100%'} />\n                        <div className=\"shimmer-button\">\n                            <Skeleton height={30} width={85} />\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n        )\n    }\n\n    render() {\n        const { RCLIST, ISLOAD } = this.state;\n\n        const HeaderOption = {\n            back: true,\n            notification: false,\n            title: AL.REWARDS,\n            hideShadow: true,\n            showBal: true\n        }\n        return (\n            <MyContext.Consumer>\n                {(context) => (\n                    <div className=\"web-container redeem-coins-cont\">\n                        <Helmet titleTemplate={`${MD.template} | %s`}>\n                            <title>{MD.RWRDS.title}</title>\n                            <meta name=\"description\" content={MD.RWRDS.description} />\n                            <meta name=\"keywords\" content={MD.RWRDS.keywords}></meta>\n                        </Helmet>\n                        <CustomHeader {...this.props} HeaderOption={HeaderOption} />\n                        <div className=\"top-primary\" />\n                        <ul className=\"list-type\">\n                            {\n                                _Map(RCLIST, (item, idx) => {\n                                    return this.renderListItem(item, idx)\n                                })\n                            }\n                            {\n                                RCLIST.length === 0 && ISLOAD &&\n                                [1, 1, 1, 1, 1, 1].map((item, index) => {\n                                    return this.Shimmer(index)\n                                })\n                            }\n                        </ul>\n                    </div>\n                )\n                }\n            </MyContext.Consumer>\n        )\n    }\n}\n\nexport default RedeemCoins;"],"sourceRoot":""}