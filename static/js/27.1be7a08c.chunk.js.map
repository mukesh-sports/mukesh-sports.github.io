{"version":3,"sources":["Component/CustomComponent/Particles.jsx","Component/CoinsModule/RedeemSuccess.jsx"],"names":["COLORS","TOP_OFFSET","window","innerHeight","generateWholeNumber","min","max","Math","floor","random","generateRandomColor","length","Particles","n","this","props","count","particles","types","SquiggleParticle","CircularParticle","Particle","push","react_default","a","createElement","key","className","React","PureComponent","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","circleRef","createRef","SIZE_RANGE","ROTATION_RANGE","size","apply","toConsumableArray","style","backgroundColor","width","height","borderRadius","transform","concat","left","innerWidth","top","_this2","setTimeout","node","current","ref","_this3","svgREF","fill","_this4","xmlns","viewBox","d","RedeemSuccess","context","handleOnClick","id","setState","state","clean","filter","_id","_this$props$rmData","rmData","mShow","mHide","redeemData","Dashboard","Consumer","Modal","show","onHide","dialogClassName","Body","src","Images","COIN_BAG","alt","BG_SHAP","AL","type","Utilities","getMasterData","currency_code","value","prediction_master_id","IC_COIN","amount","map","CustomComponent_Particles","Component"],"mappings":"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","file":"static/js/27.1be7a08c.chunk.js","sourcesContent":["import React, { createRef } from 'react';\nvar COLORS = ['#2ecc71', '#3498db', '#e67e22', '#e67e22', '#e74c3c'];\nvar TOP_OFFSET = window.innerHeight;\nvar LEFT_OFFSET = 300;\n\nconst generateWholeNumber = (min, max) => min + Math.floor(Math.random() * (max - min));\n\nconst generateRandomColor = () => COLORS[generateWholeNumber(0, COLORS.length)];\n\nclass Particles extends React.PureComponent {\n\n    render() {\n        let { count: n } = this.props;\n        const particles = [];\n        const types = [SquiggleParticle, CircularParticle, CircularParticle];\n\n        while (n--) {\n            const Particle = types[generateWholeNumber(0, 3)];\n            particles.push(\n                <Particle key={n} />\n            );\n        }\n\n        return (\n            <div className='particles'>\n                {particles}\n            </div>\n        );\n    }\n}\n\nexport default Particles;\n\nclass CircularParticle extends React.PureComponent {\n\n    static SIZE_RANGE = [5, 10];\n    static ROTATION_RANGE = [0, 45];\n    circleRef = createRef();\n\n    constructor(props) {\n        super(props);\n        const { SIZE_RANGE, ROTATION_RANGE } = CircularParticle;\n        const size = generateWholeNumber(...SIZE_RANGE);\n        this.style = {\n            backgroundColor: generateRandomColor(),\n            width: size,\n            height: size,\n            borderRadius: size,\n            transform: `rotateZ(${generateWholeNumber(...ROTATION_RANGE)}deg)`,\n            left: generateWholeNumber(0, window.innerWidth),\n            top: generateWholeNumber(-TOP_OFFSET, 0)\n        };\n    }\n\n    componentDidMount() {\n        const { left } = this.style;\n        const { ROTATION_RANGE } = CircularParticle;\n        setTimeout(() => {\n            const node = this.circleRef.current;\n            node.style.top = window.innerHeight + generateWholeNumber(0, TOP_OFFSET) + 'px';\n            node.style.left = left + generateWholeNumber(-LEFT_OFFSET, LEFT_OFFSET) + 'px';\n        }, 0);\n    }\n\n    render() {\n\n        return (\n            <div ref={this.circleRef} className='particle' style={this.style} />\n        );\n    }\n}\n\nclass SquiggleParticle extends React.PureComponent {\n\n    static SIZE_RANGE = [15, 45];\n    static ROTATION_RANGE = [-15, 15];\n    svgREF = createRef();\n\n    constructor(props) {\n        super(props);\n        const size = generateWholeNumber(...SquiggleParticle.SIZE_RANGE);\n        this.style = {\n            fill: generateRandomColor(),\n            width: size,\n            height: size,\n            transform: `rotateZ(${generateWholeNumber(...SquiggleParticle.ROTATION_RANGE)}deg)`,\n            left: generateWholeNumber(0, window.innerWidth),\n            top: generateWholeNumber(-TOP_OFFSET, 0)\n        };\n    }\n\n    componentDidMount() {\n        const { left } = this.style;\n        const { ROTATION_RANGE } = SquiggleParticle;\n        setTimeout(() => {\n            const node = this.svgREF.current;\n            node.style.top = window.innerHeight + generateWholeNumber(0, TOP_OFFSET) + 'px';\n            node.style.left = left + generateWholeNumber(-LEFT_OFFSET, LEFT_OFFSET) + 'px';\n            node.style.transform = `rotateZ(${generateWholeNumber(...ROTATION_RANGE)}deg)`;\n        }, 0);\n    }\n\n    render() {\n        return (\n            <svg\n                ref={this.svgREF}\n                className='particle'\n                style={this.style}\n                xmlns=\"http://www.w3.org/2000/svg\"\n                viewBox=\"0 0 512 512\">\n                <path fill={this.style.fill} d=\"M428.127,0l-12.716,10.062l12.718-10.06c8.785,11.101,19.716,24.917,19.716,51.051 s-10.932,39.951-19.716,51.053c-7.382,9.331-12.716,16.072-12.716,30.927c0,14.854,5.334,21.594,12.716,30.925   c8.784,11.101,19.716,24.917,19.716,51.05c0,26.135-10.931,39.949-19.715,51.051c-7.383,9.331-12.717,16.072-12.717,30.927   c0,14.855,5.332,21.593,12.711,30.919l-25.435,20.124c-8.781-11.097-19.708-24.909-19.708-51.042 c0-26.135,10.931-39.949,19.715-51.051c7.383-9.331,12.717-16.072,12.717-30.927c0-14.855-5.335-21.595-12.717-30.926 c-8.784-11.101-19.715-24.916-19.715-51.049s10.931-39.95,19.715-51.051c7.383-9.331,12.717-16.072,12.717-30.928 c0-14.855-5.335-21.596-12.718-30.927L428.127,0z\" />\n            </svg>\n        );\n    }\n}\n\n","import React from 'react';\nimport { Modal } from 'react-bootstrap';\nimport { MyContext } from '../../views/Dashboard';\nimport Particles from '../CustomComponent/Particles';\nimport Images from '../../components/images';\nimport * as AL from \"../../helper/AppLabels\";\nimport { Utilities } from '../../Utilities/Utilities';\n\nclass RedeemSuccess extends React.Component {\n    static id = 1;\n    constructor(props, context) {\n        super(props, context);\n        this.state = { particles: [] }\n    }\n\n    componentDidMount() {\n        this.handleOnClick()\n    }\n\n    clean(id) {\n        this.setState({\n            particles: this.state.particles.filter(_id => _id !== id)\n        });\n    }\n\n    handleOnClick = () => {\n        const id = RedeemSuccess.id;\n        RedeemSuccess.id++;\n\n        this.setState({\n            particles: [...this.state.particles, id]\n        });\n        setTimeout(() => {\n            this.clean(id);\n        }, 7000);\n    }\n\n    render() {\n\n        const { mShow, mHide, redeemData } = this.props.rmData;\n        return (\n            <MyContext.Consumer>\n                {(context) => (\n\n                    <Modal\n                        show={mShow}\n                        onHide={mHide}\n                        dialogClassName=\"redeem-success particles\"\n                        className=\"center-modal redeem\"\n                    >\n                        <Modal.Body>\n                            <img src={Images.COIN_BAG} alt=\"\" className=\"img-bag\" />\n                            <img src={Images.BG_SHAP} alt=\"\" className=\"shap-img\" />\n                            <div>\n                                <h4 className=\"title\">{AL.YAHOO}</h4>\n                                {\n                                    redeemData.type === \"2\" && <p className=\"desc\">{Utilities.getMasterData().currency_code}<span>{redeemData.value}</span> {AL.CR_REAL_CASH}</p>\n                                }\n                                {\n                                    redeemData.type === \"1\" && <p className=\"desc\"><i className=\"icon-bonus\" /><span>{redeemData.value}</span> {AL.CR_BONUS_CASH}</p>\n                                }\n                                {\n                                    redeemData.type === \"3\" && <p className=\"desc\">{AL.CR_GIFT}</p>\n                                }\n                                {\n                                    redeemData.prediction_master_id && <p className=\"desc\">{AL.COINS_WON_MSG}<img className=\"coin-img\" src={Images.IC_COIN} alt=\"\" /><span>{redeemData.amount}</span>{AL.COINS_WON_MSG1}</p>\n                                }\n                            </div>\n                        </Modal.Body>\n                        {this.state.particles.map(id => (\n                            <Particles key={id} count={Math.floor(window.innerWidth / 5)} />\n                        ))}\n                    </Modal>\n                )}\n            </MyContext.Consumer>\n        );\n    }\n}\nexport default RedeemSuccess;\n"],"sourceRoot":""}