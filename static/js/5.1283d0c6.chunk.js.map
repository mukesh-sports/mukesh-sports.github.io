{"version":3,"sources":["Component/PredictionModule/PredictionCard.jsx","Component/PredictionModule/ConfirmPrediction.jsx","Component/PredictionModule/PredictionFixture.jsx","Component/PredictionModule/SharePModal.jsx","Component/PredictionModule/PredictionParticipants.jsx","Component/PredictionModule/UpcomingPredictions.jsx","Component/PredictionModule/LivePredictions.jsx","Component/PredictionModule/CompletedPredictions.jsx","Component/PredictionModule/PredictionLearnMore.jsx","Component/PredictionModule/index.js","Component/PredictionModule/PredictionContestList.jsx","Component/PredictionModule/PredictionLobby.jsx","Component/PredictionModule/MyPredictions.jsx"],"names":["PredictionCard","props","_this","Object","_Users_mukesh_sites_projects_dup_fantasysports_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_Users_mukesh_sites_projects_dup_fantasysports_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_mukesh_sites_projects_dup_fantasysports_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","onPredictionSelect","itemIndex","idx","opt","_this$props$data","data","item","onSelectPredict","onMakePrediction","setTimeout","renderFilledBar","_this$props$data2","status","predictedPer","total_predictions","option_total_coins","total_pool","toFixed","isOptSelected","user_selected_option","prediction_option_id","userCorrect","is_correct","isCompleted","CONTEST_COMPLETED","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","Fragment","key","onClick","CONTESTS_LIST","className","style","width","animationDelay","option","AL","src","Images","IC_COIN","alt","Utilities","kFormatter","estimated_winning","react_bootstrap__WEBPACK_IMPORTED_MODULE_10__","trigger","placement","overlay","react_bootstrap__WEBPACK_IMPORTED_MODULE_11__","id","viewParticipants","_this$props$data3","prediction_master_id","mURL","getSelectedSportsForUrl","toLowerCase","btoa","isLiveCom","CONTEST_LIVE","history","push","pathname","state","isLeader","_this2","_this$props$data4","timerCallback","shareContest","game_starts_in","deadline_time","betCoin","_views_Dashboard__WEBPACK_IMPORTED_MODULE_6__","Consumer","context","season_game_uid","parseInt","is_pin","e","pinned_ic","desc","_Map","bet_coins","showCountDown","_views_CountDownTimer__WEBPACK_IMPORTED_MODULE_12__","deadlineTimeStamp","_CustomComponent__WEBPACK_IMPORTED_MODULE_7__","date","deadline_date","format","prize_pool","win_coins","Component","ConfirmPrediction","onChange","setState","bidAmount","target","value","timerCompletionCall","mHide","preData","submitPrediction","_this$props$preData","cpData","successAction","updatedBal","point_balance","param","option_predicted","isLoading","makePrediction","then","responseJson","response_code","WSC","CustomHeader","updateCoinBalance","bal","WSManager","getBalance","setBalance","showToast","message","PREDICTION_IC","clickEarnCoins","loggedIn","goToSignup","minCoin","getMasterData","min_bet_coins","document","addEventListener","_handleWKeyDown","getUserBalance","user_balance","setAllowedBonusPercantage","allowed_bonus_percantage","removeEventListener","_this3","_this$props$preData2","mShow","_this$state","coin_bal","isBtnEnbl","react_bootstrap__WEBPACK_IMPORTED_MODULE_7__","show","onHide","dialogClassName","Body","react_loading_skeleton__WEBPACK_IMPORTED_MODULE_14___default","duration","height","_views_CountDownTimer__WEBPACK_IMPORTED_MODULE_15__","_CustomComponent__WEBPACK_IMPORTED_MODULE_11__","react_bootstrap__WEBPACK_IMPORTED_MODULE_8__","controlId","floating_label_react__WEBPACK_IMPORTED_MODULE_13__","autoComplete","styles","inputStyleLeft","name","placeholder","concat","type","maxLength","href","PredictionFixture","isLive","onSelect","stopPropagation","preventDefault","_this$props","isActive","nextProps","teamFlagURL","home_flag","home","away","minuteDiffValue","_views_CountDownTimer__WEBPACK_IMPORTED_MODULE_10__","season_scheduled_date","league_name","league_abbr","away_flag","SharePModal","onCopyLink","showCopyToast","spData","shareURL","shareText","getProfile","user_name","createAndSetUrls","refCode","getUserReferralCode","url","detail","action","targetFunc","window","ReactNativeWebView","postMessage","JSON","stringify","_InitialSetup_MyProvider__WEBPACK_IMPORTED_MODULE_10__","react_bootstrap__WEBPACK_IMPORTED_MODULE_6__","react_copy_to_clipboard__WEBPACK_IMPORTED_MODULE_9__","onCopy","text","callNativeShare","react_share__WEBPACK_IMPORTED_MODULE_7__","quote","react_share__WEBPACK_IMPORTED_MODULE_8__","React","PredictionParticipants","_Users_mukesh_sites_projects_dup_fantasysports_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","_Users_mukesh_sites_projects_dup_fantasysports_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_Users_mukesh_sites_projects_dup_fantasysports_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","renderShimmer","react__WEBPACK_IMPORTED_MODULE_6___default","react_loading_skeleton__WEBPACK_IMPORTED_MODULE_12___default","renderItem","isown","user_id","user_rank","PLIST","OWNDATA","PNO","PSIZE","HMORE","ISLOAD","PMID","HOS","back","title","match","params","matchParam","pmid","atob","location","getDetail","page_no","page_size","getPredictionParticipants","ownData","own","listOther","other_list","_Users_mukesh_sites_projects_dup_fantasysports_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","length","_this4","_this$state2","_views_Dashboard__WEBPACK_IMPORTED_MODULE_7__","react_helmet__WEBPACK_IMPORTED_MODULE_13___default","titleTemplate","MetaData","template","PRDPLIST","content","description","keywords","_components_CustomHeader__WEBPACK_IMPORTED_MODULE_15__","assign","HeaderOption","react_infinite_scroll_component__WEBPACK_IMPORTED_MODULE_11__","dataLength","hasMore","next","map","_CustomComponent__WEBPACK_IMPORTED_MODULE_8__","BG_IMAGE","no_data_bg_image","CENTER_IMAGE","BRAND_LOGO_FULL","MESSAGE_1","_times","UpcomingPredictions","classCallCheck","possibleConstructorReturn","getPrototypeOf","ucList","loadingIndex","isExpanded","contest","Constants","getMyPrediction","predictions","removeFromList","react_default","getMyContestList","CountDownTimer","CustomComponent","childItem","indx","bundle_default","LivePredictions","lcList","AppSelectedSport","SportsIDs","cricket","score_data","home_team_score","home_wickets","home_overs","home_score","AppLabels","away_team_score","away_wickets","away_overs","away_score","CompletedPredictions","ccList","Dashboard","Modal","bsSize","TSHIRT_VS_IC","DOT_LINE","HELMET_IC","DOT_LINE_R","__webpack_require__","d","__webpack_exports__","PredictionContestList","UpcomingPredictions_UpcomingPredictions","LivePredictions_LivePredictions","CompletedPredictions_CompletedPredictions","PredictionModule_ConfirmPrediction","PredictionLearnMore","socket","parseHistoryStateData","disconnect","LobyyData","LData","getContestList","joinPredictionRoom","connect","emit","on","obj","_isMounted","amount","showRSuccess","addFixture","showNewPToast","deleteFixture","pause","checkIsPredictionJoin","is_joined","fArray","_filter","ContestList","pinnedArray","tmpArray","prediction","optionIndex","joinPItem","showCP","showShareM","hideShareM","hideCP","indexOf","clickLearnMore","showLM","hideLM","renderDFSCard","a_dfs_bnr","bannerImg","dfs_bnr","IS_DFS","goToDFS","getSettingURL","DFS_SHAPE_IMG","DFS_IMG","renderPrizeCard","a_prize_bnr","AllowRedeem","prize_bnr","goToRewards","PRD_PRIZE_IMG","PRIZES_CAR","Shimmer","index","react_loading_skeleton__WEBPACK_IMPORTED_MODULE_13___default","ShimmerList","ShareItem","IS_PREDICTION","SocketIOClient","getPredictionContest","event","_PredictionCard__WEBPACK_IMPORTED_MODULE_16__","bind","MESSAGE_2","___WEBPACK_IMPORTED_MODULE_9__","_SharePModal__WEBPACK_IMPORTED_MODULE_17__","ReactSlickSlider","lazy","Promise","all","Lobby","_React$Component","_Users_mukesh_sites_projects_dup_fantasysports_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","_Users_mukesh_sites_projects_dup_fantasysports_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","_Users_mukesh_sites_projects_dup_fantasysports_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","UNSAFE_componentWillMount","enableDisableBack","scrollToTop","reload","startsWith","league_id","getSportsLeagueId","selectedSport","filterArray","sports_id","setFromConfirmPopupAddFunds","lobbyContestList","updateDeviceToken","device_type","device_id","getDeviceId","_Users_mukesh_sites_projects_dup_fantasysports_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_mukesh_sites_projects_dup_fantasysports_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee","api_response_data","wrap","_context","prev","abrupt","isListLoading","limit","getLobbyPrediction","sent","match_list","OriginalContestList","filterLeagueList","selectedFixture","tmpLeagues","filter","filterLobbyResults","stop","hideFilter","showLobbyFitlers","hideFilterData","showFilter","filterObj","_isEmpty","filterFixturesLocally","setFilterArray","setFilter","setPickedGameType","DFS","gameType","sports_hub","HGLIST","game_key","lsSport","ls","get","allowed_sports","includes","replace","sport","set","setAppSelectedSport","onSelectFixture","_debounce","fxtr","renderPredictionFixtures","settings","infinite","slidesToShow","slidesToScroll","variableWidth","initialSlide","centerMode","swipeToSlide","responsive","breakpoint","react__WEBPACK_IMPORTED_MODULE_7___default","react__WEBPACK_IMPORTED_MODULE_7__","fallback","_PredictionFixture__WEBPACK_IMPORTED_MODULE_14__","___WEBPACK_IMPORTED_MODULE_12__","_Component_CustomComponent__WEBPACK_IMPORTED_MODULE_11__","react_loading_skeleton__WEBPACK_IMPORTED_MODULE_20___default","canRedirect","_Users_mukesh_sites_projects_dup_fantasysports_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_6__","_Users_mukesh_sites_projects_dup_fantasysports_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__","googleTrack","googleTrackDaily","checkOldUrl","handelNativeGoogleLogin","sendMessageToApp","flag","undefined","locale","setAppLang","UserProfile","setProfile","LoginSessionKey","setToken","isMobileApp","setIsMobileApp","token","setDeviceId","pathName","notif","notification_type","contest_unique_id","dateformaturl","parseURLDate","collection_master_id","custom_notification_type","can","blockMultiRedirection","sports","replaceState","i","leagueIds","allFixtures","filteredList","hasFilter","_InitialSetup_MyProvider__WEBPACK_IMPORTED_MODULE_8__","MyPredictions","goToLobby","onTabClick","selectedTab","my_contest_config","getMyCollectionsList","list","splice","isLoaderShow","from","search","queryString","parse","contest_url","match_status","getPredictionSeason","_this5","notification","hideShadow","_InitialSetup_MyProvider__WEBPACK_IMPORTED_MODULE_11__","hideHeader","_components_CustomHeader__WEBPACK_IMPORTED_MODULE_20__","Container","activeKey","console","log","defaultActiveKey","xs","react_bootstrap__WEBPACK_IMPORTED_MODULE_9__","eventKey","Content","animation","Pane","_index__WEBPACK_IMPORTED_MODULE_13__","_CustomComponent__WEBPACK_IMPORTED_MODULE_16__","BUTTON_TEXT","_ref","react_loading_skeleton__WEBPACK_IMPORTED_MODULE_17___default"],"mappings":"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","file":"static/js/5.1283d0c6.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { MyContext } from '../../views/Dashboard';\nimport { MomentDateComponent } from '../CustomComponent';\nimport { Utilities, _Map } from '../../Utilities/Utilities';\nimport { CONTESTS_LIST, CONTEST_COMPLETED, CONTEST_LIVE } from '../../helper/Constants';\nimport { OverlayTrigger, Tooltip } from 'react-bootstrap';\nimport CountdownTimer from '../../views/CountDownTimer';\nimport Images from '../../components/images';\nimport * as AL from \"../../helper/AppLabels\";\n\nclass PredictionCard extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n        }\n    }\n\n    onPredictionSelect = (itemIndex, idx, opt) => {\n        const { item, onSelectPredict, onMakePrediction } = this.props.data;\n        onSelectPredict(itemIndex, idx, opt);\n        setTimeout(() => {\n            onMakePrediction(item)\n        }, 50);\n    }\n\n    renderFilledBar = (opt, idx) => {\n        const { item, status, itemIndex } = this.props.data;\n        let predictedPer = item.total_predictions == 0 ? 0 : ((opt.option_total_coins / item.total_pool) * 100).toFixed(2);\n        let isOptSelected = (opt.user_selected_option == opt.prediction_option_id);\n        let userCorrect = (isOptSelected && opt.is_correct == 1);\n        let isCompleted = (status === CONTEST_COMPLETED);\n        return (\n            <React.Fragment key={idx}>\n                <div onClick={() => (status == CONTESTS_LIST && this.onPredictionSelect(itemIndex, idx, opt))} className={\n                    \"prediction-bar\" + (isOptSelected ? ' selected' : '') +\n                    ((status != CONTESTS_LIST && !isCompleted && isOptSelected) ? ' mb-1' : '') +\n                    (isCompleted ? (userCorrect ? ' success' : (isOptSelected ? ' failure' : '')) : '')\n                }>\n                    <div className=\"filled-bar\" style={{ width: predictedPer + '%', animationDelay: (0.05 * idx) + 's' }} />\n                    <p className=\"answer\">{opt.option}</p>\n                    <div className=\"corrected-ans\">\n                        {\n                            isCompleted && <React.Fragment>\n                                {opt.is_correct == 1 && !isOptSelected && <span>{AL.CORRECT_ANS}</span>}\n                                {isOptSelected && <i className={userCorrect ? \"icon-tick\" : \"icon-close\"} />}\n                            </React.Fragment>\n                        }\n                        <p>{predictedPer > 0 ? (predictedPer + '%') : ''}</p>\n                    </div>\n                </div>\n                {\n                    (status != CONTESTS_LIST && !isCompleted && isOptSelected) && <div className=\"estimate-win\">\n                        <p className=\"est-price-pool\"><img src={Images.IC_COIN} alt=\"\" /><span className=\"value\">\n                            {Utilities.kFormatter(item.estimated_winning)}</span> {AL.EST_WIN}\n                            <OverlayTrigger trigger={['hover', 'focus']} placement={'bottom'} overlay={\n                                <Tooltip id=\"tooltip\">\n                                    <strong>{AL.EST_WIN_FORMULA}</strong>\n                                </Tooltip>\n                            }>\n                                <i className=\"icon-info\" />\n                            </OverlayTrigger>\n                        </p>\n                    </div>\n                }\n            </React.Fragment>\n        )\n    }\n\n    viewParticipants = () => {\n        const { item, status } = this.props.data;\n        let prediction_master_id = item.prediction_master_id;\n        let mURL = Utilities.getSelectedSportsForUrl().toLowerCase() + \"/prediction/participants/\" + btoa(prediction_master_id);\n        let isLiveCom = ((status == CONTEST_COMPLETED) || (status == CONTEST_LIVE));\n        this.props.history.push({ pathname: '/' + mURL, state: { isLeader: isLiveCom } });\n    }\n\n    render() {\n        const { item, status, timerCallback, onMakePrediction, shareContest } = this.props.data;\n        let game_starts_in = item.deadline_time / 1000;\n        let betCoin = 0;\n        let isCompleted = (status == CONTEST_COMPLETED);\n        return (\n            <MyContext.Consumer>\n                {(context) => (\n                    <li key={item.prediction_master_id + item.season_game_uid} className={parseInt(item.is_pin) != 0 ? ' pinned':''}>\n                        {status == CONTESTS_LIST && <i onClick={(e) => shareContest(e, item)} className=\"icon-share\" />}\n                        {\n                            parseInt(item.is_pin) != 0 && <div className=\"contest-pin\">\n                                 <img src={Images.pinned_ic} alt=\"\" />\n                            </div>\n                        }\n                        <p className=\"questions\">{item.desc}</p>\n                        {\n                            _Map(item.option, (opt, idx) => {\n                                betCoin = (opt.user_selected_option == opt.prediction_option_id) ? opt.bet_coins : betCoin\n                                return this.renderFilledBar(opt, idx);\n                            })\n                        }\n                        {\n                            status == CONTESTS_LIST && <div className=\"footer-vc\">\n                                <div>\n                                    <div className=\"date-v new-fc\">\n                                        <div className=\"match-timing\">\n                                            {\n                                                Utilities.showCountDown({ game_starts_in: game_starts_in }) ?\n                                                    <span className=\"d-flex\">\n                                                        <div className=\"countdown time-line\">\n                                                            {\n                                                                game_starts_in && <CountdownTimer timerCallback={timerCallback} deadlineTimeStamp={game_starts_in} />\n                                                            }\n                                                        </div>\n                                                    {AL.REMAINING}\n                                                    </span> :\n                                                    <span> <MomentDateComponent data={{ date: item.deadline_date, format: \"D MMM - hh:mm A \" }} /></span>\n                                            }\n                                            \n                                        </div>\n                                    </div>\n                                </div>\n                                {\n                                    item.prize_pool > 0 && <p className=\"price-pool\"><span className=\"price-pool-first\">{AL.WIN}</span><img src={Images.IC_COIN} alt=\"\" />{item.prize_pool}</p>\n                                }\n                                {\n                                    item.prize_pool == 0 && <p className=\"price-pool-first\">{AL.BE_FIRST}</p>\n                                }\n\n                            </div>\n                        }\n                        {\n                            status != CONTESTS_LIST && <div className=\"footer-vc\">\n                                <div>\n                                    <p className=\"price-pool\">{AL.WIN}<img src={Images.IC_COIN} alt=\"\" />{item.prize_pool}</p>\n                                    <div className=\"date-v\">\n                                        <span onClick={this.viewParticipants} className=\"match-timing view-part\">{item.total_predictions} {AL.PREDICTED}</span>\n                                    </div>\n                                </div>\n                                <div className=\"price-container\">\n                                    {\n                                        isCompleted && item.win_coins > 0 && <div className=\"my-pre-date won\">\n                                            <p className=\"price-pool\"><img src={Images.IC_COIN} alt=\"\" />{item.win_coins || 0}</p>\n                                            <div className=\"date-v\">\n                                                <span className=\"match-timing view-part\">{AL.WON}</span>\n                                            </div>\n                                        </div>\n                                    }\n                                    <div className=\"my-pre-date\">\n                                        <p className=\"price-pool\"><img src={Images.IC_COIN} alt=\"\" />{betCoin}</p>\n                                        <div className=\"date-v\">\n                                            <span className=\"match-timing view-part\">{AL.YOUR_BET}</span>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        }\n                    </li>\n                )\n                }\n            </MyContext.Consumer>\n        )\n    }\n}\n\nexport default PredictionCard;","import React, { Component } from 'react';\nimport { MyContext } from '../../views/Dashboard';\nimport { Modal, FormGroup } from 'react-bootstrap';\nimport { inputStyleLeft } from '../../helper/input-style';\nimport { makePrediction, getUserBalance } from '../../WSHelper/WSCallings';\nimport { MomentDateComponent } from '../CustomComponent';\nimport { Utilities, _handleWKeyDown } from '../../Utilities/Utilities';\nimport FloatingLabel from 'floating-label-react';\nimport Skeleton from 'react-loading-skeleton';\nimport CountdownTimer from '../../views/CountDownTimer';\nimport WSManager from '../../WSHelper/WSManager';\nimport Images from '../../components/images';\nimport * as WSC from \"../../WSHelper/WSConstants\";\nimport * as AL from \"../../helper/AppLabels\";\nimport CustomHeader from '../../components/CustomHeader';\n\nclass ConfirmPrediction extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            bidAmount: '',\n            minCoin: parseInt(Utilities.getMasterData().min_bet_coins || 10),\n            isLoading: false,\n            point_balance: WSManager.getBalance().point_balance || 0\n        }\n    }\n\n    UNSAFE_componentWillMount() {\n        document.addEventListener(\"keydown\", _handleWKeyDown, false);\n        getUserBalance().then((responseJson) => {\n            if (responseJson.response_code === WSC.successCode) {\n                this.setState({\n                    point_balance: responseJson.data.user_balance.point_balance || 0\n                })\n                WSManager.setAllowedBonusPercantage(responseJson.data.allowed_bonus_percantage)\n                WSManager.setBalance(responseJson.data.user_balance);\n            }\n        })\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener(\"keydown\", _handleWKeyDown);\n    }\n\n    onChange = (e) => {\n        this.setState({ bidAmount: e.target.value })\n    }\n\n    timerCompletionCall = () => {\n        const { mHide } = this.props.preData;\n        mHide();\n    }\n\n    submitPrediction = () => {\n        const { mHide, cpData, successAction } = this.props.preData;\n        let preBal = parseInt(this.state.point_balance);\n        let updatedBal = preBal - parseInt(this.state.bidAmount);\n        let param = {\n            \"prediction_master_id\": cpData.prediction_master_id,\n            \"prediction_option_id\": cpData.option_predicted.prediction_option_id,\n            \"bet_coins\": parseInt(this.state.bidAmount)\n        }\n        this.setState({ isLoading: true })\n        makePrediction(param).then((responseJson) => {\n            if (responseJson.response_code === WSC.successCode) {\n                CustomHeader.updateCoinBalance(updatedBal);\n                let bal = WSManager.getBalance();\n                bal[\"point_balance\"] = updatedBal;\n                WSManager.setBalance(bal);\n                Utilities.showToast(responseJson.message, 3000, Images.PREDICTION_IC);\n                successAction(cpData);\n                this.setState({\n                    isLoading: false\n                }, () => {\n                    mHide();\n                });\n            } else {\n                this.setState({ isLoading: false })\n            }\n        })\n    }\n\n    clickEarnCoins = () => {\n        if (WSManager.loggedIn()) {\n            this.props.history.push(\"/earn-coins\")\n        } else {\n            this.goToSignup()\n        }\n    }\n\n    goToSignup = () => {\n        this.props.history.push(\"/signup\")\n    }\n\n    render() {\n\n        const { mShow, mHide, cpData } = this.props.preData;\n        const { bidAmount, minCoin, isLoading, point_balance } = this.state;\n\n        let game_starts_in = cpData.deadline_time / 1000;\n        let coin_bal = parseInt(point_balance || 0);\n        let isBtnEnbl = (bidAmount >= minCoin && bidAmount <= coin_bal);\n\n        return (\n            <MyContext.Consumer>\n                {(context) => (\n                    <Modal\n                        show={mShow}\n                        onHide={mHide}\n                        dialogClassName=\"modal-pred-confirm\"\n                        className=\"center-modal\"\n                    >\n                        <Modal.Body>\n                            <div className=\"container\">\n                                <p className=\"title-pp\">{AL.PLACE_PRE}</p>\n                                <p className=\"desc-pp\">{AL.PRE_MSG}</p>\n                                <div className=\"your-pre\">\n                                    <div className=\"shimmer-v\"><Skeleton duration={2} width={'100%'} height={'100%'} /></div>\n\n                                    <span>{AL.YOUR_PRE}</span>\n                                    <span className=\"option\">{cpData.option_predicted.option}</span>\n                                    {\n                                        <div className=\"match-timing\">\n                                            {\n                                                Utilities.showCountDown({ game_starts_in: game_starts_in })\n                                                    ?\n                                                    <div className=\"countdown time-line\">\n                                                        {\n                                                            game_starts_in && <CountdownTimer\n                                                                timerCallback={this.timerCompletionCall}\n                                                                deadlineTimeStamp={game_starts_in} />\n                                                        }\n                                                    </div>\n                                                    :\n                                                    <span>\n                                                        <MomentDateComponent data={{ date: cpData.deadline_date, format: \"D MMM - hh:mm A \" }} />\n                                                    </span>\n                                            }\n                                        </div>\n                                    }\n                                </div>\n                                <FormGroup\n                                    className='input-label-center input-transparent'\n                                    controlId=\"formBasicText\"\n                                >\n                                    <FloatingLabel\n                                        autoComplete='off'\n                                        styles={inputStyleLeft}\n                                        id='amont'\n                                        name='amont'\n                                        value={bidAmount}\n                                        placeholder={`${AL.ENTER_COINS} (${AL.MIN} ${minCoin} ${AL.coins})`}\n                                        type='text'\n                                        maxLength={5}\n                                        onChange={this.onChange}\n                                    />\n                                </FormGroup>\n                                <div className=\"available-bal\"><span>{AL.AVAIL_BAL}</span><span className=\"bal\"><img src={Images.IC_COIN} alt=\"\" />{coin_bal}</span></div>\n                                {\n                                    bidAmount > coin_bal && <span className=\"no-coins-msg\">\n                                        {AL.NO_COINS_MSG}<a href onClick={this.clickEarnCoins}>{AL.EARN_COINS.toLowerCase()}</a>\n                                    </span>\n                                }\n                            </div>\n                            <button onClick={this.submitPrediction} className={\"btn btn-m-p\" + ((isBtnEnbl && !isLoading) ? '' : ' disabled')}>{AL.MAKE_PRE}</button>\n\n                        </Modal.Body>\n                    </Modal>\n                )}\n            </MyContext.Consumer>\n        )\n    }\n}\n\nexport default ConfirmPrediction;","import React, { Component } from 'react';\nimport { MyContext } from '../../views/Dashboard';\nimport { MomentDateComponent } from '../CustomComponent';\nimport { MATCH_TYPE, AppSelectedSport } from '../../helper/Constants';\nimport { Utilities, parseURLDate } from '../../Utilities/Utilities';\nimport CountdownTimer from '../../views/CountDownTimer';\nimport Images from '../../components/images';\nimport * as AL from \"../../helper/AppLabels\";\n\nclass PredictionFixture extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            isActive: this.props.isActive || false,\n            isLive: false\n        }\n    }\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        if (nextProps.isActive != this.props.isActive) {\n            this.setState({\n                isActive: nextProps.isActive\n            })\n        }\n    }\n\n    timerCallback = () => {\n        this.setState({\n            isLive: true\n        })\n    }\n\n    onSelect = (e) => {\n        if (e) {\n            e.stopPropagation();\n            e.preventDefault();\n        }\n        const { item, onSelect } = this.props;\n        if (this.state.isActive) {\n            // onSelect('')\n        } else {\n            onSelect(item)\n        }\n\n    }\n\n    render() {\n        const { item } = this.props;\n        const { isActive, isLive } = this.state;\n        let game_starts_in = item.game_starts_in;\n        return (\n            <MyContext.Consumer>\n                {(context) => (\n                    <li onClick={this.onSelect} key={item.season_game_uid} className={\"fixture-card-wrapper prediction-card-wrapper pointer-cursor\" + (isActive ? ' active-item' : '')}>\n\n                        <div className=\"fixture-card-body display-table\">\n                            <div className=\"match-info-section\">\n                                <div className=\"section-left\">\n                                    <img src={Utilities.teamFlagURL(item.home_flag)} alt=\"\" className=\"home-team-flag\" />\n                                </div>\n                                <div className=\"section-middle\">\n                                    <div className=\"team-n-m\">\n                                        <span className=\"team-home\">{item.home}</span>\n                                        <span className=\"vs-text\">{AL.VERSES}</span>\n                                        <span className=\"team-away\">{item.away}</span>\n                                    </div>\n                                    {\n                                        (Utilities.showCountDown({ game_starts_in: game_starts_in }) && !isLive) ?\n                                            <div className=\"countdown time-line\">\n                                                {item.game_starts_in && (Utilities.minuteDiffValue({ date: item.game_starts_in }) <= 0) && <CountdownTimer timerCallback={this.timerCallback} deadlineTimeStamp={item.game_starts_in} />}\n                                            </div> :\n                                            (Utilities.minuteDiffValue({ date: game_starts_in }) < 0) && <div className=\"match-timing\">\n                                                <span> <MomentDateComponent data={{ date: item.season_scheduled_date, format: \"D MMM - hh:mm A\" }} /></span>\n                                            </div>\n                                    }\n                                    {\n                                        item.league_name &&\n                                        <div className=\"match-timing league-n\">\n                                            <div className=\"leag-name\">{item.league_name || item.league_abbr}</div>\n                                            {/* {\n                                                AppSelectedSport === '7' && <div> - {MATCH_TYPE[item.format]}</div>\n                                            } */}\n                                        </div>\n                                    }\n                                    {\n                                        (Utilities.minuteDiffValue({ date: game_starts_in }) > 0 || isLive) && <span className=\"status-live\">\n                                            <span className=\"live-indicator\" />\n                                            <span className=\"status-text\">{AL.LIVE}</span>\n                                        </span>\n                                    }\n                                </div>\n                                <div className=\"section-right\">\n                                    <img src={Utilities.teamFlagURL(item.away_flag)} alt=\"\" className=\"away-team-flag\" />\n                                </div>\n                            </div>\n                        </div>\n                    </li>\n                )}\n            </MyContext.Consumer>\n        )\n    }\n}\n\nexport default PredictionFixture;","import React from 'react';\nimport { Modal } from 'react-bootstrap';\nimport { FacebookShareButton, WhatsappShareButton, EmailShareButton } from 'react-share';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { MyContext } from '../../InitialSetup/MyProvider';\nimport { Utilities } from '../../Utilities/Utilities';\nimport WSManager from '../../WSHelper/WSManager';\nimport * as AL from \"../../helper/AppLabels\";\nimport * as WSC from \"../../WSHelper/WSConstants\";\n\nclass SharePModal extends React.Component {\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n            spData: this.props.preData.spData,\n            shareURL: '',\n            shareText: AL.Your_Friend + ' ' + WSManager.getProfile().user_name + ' ' + AL.has_referred_you_on + ' ' + WSC.AppName + \", \" + AL.please_join_and_earn_prizes_text + \" : \\n\\n\"\n        };\n    }\n\n    componentDidMount() {\n        this.createAndSetUrls();\n    }\n\n    createAndSetUrls() {\n        let season_game_uid = this.state.spData.season_game_uid;\n        let prediction_master_id = this.state.spData.prediction_master_id;\n        let mURL = WSC.baseURL + Utilities.getSelectedSportsForUrl().toLowerCase() + \"/prediction-details/\" + season_game_uid + '/' + btoa(prediction_master_id);\n        let refCode = WSManager.getUserReferralCode();\n        let shareURL = mURL + (refCode ? (\"?referral=\" + refCode) : '');\n        this.setState({ shareURL: shareURL });\n    }\n\n    onCopyLink = () => {\n        this.showCopyToast(AL.Link_has_been_copied);\n    }\n\n    showCopyToast = (message) => {\n        Utilities.showToast(message, 2000)\n    }\n\n\n    callNativeShare(type, url, detail) {\n        let data = {\n            action: 'social_sharing',\n            targetFunc: 'social_sharing',\n            type: type,\n            url: url,\n            detail: detail\n        }\n        window.ReactNativeWebView.postMessage(JSON.stringify(data));\n    }\n\n    render() {\n\n        const { mShow, mHide } = this.props.preData;\n\n        return (\n            <MyContext.Consumer>\n                {(context) => (\n                    <Modal\n                        show={mShow}\n                        onHide={mHide}\n                        dialogClassName=\"custom-modal thank-you-modal\"\n                        className=\"center-modal\"\n                    >\n\n                        <div className=\"social-linking\">\n                            <div className=\"link-heading\">{AL.INVITE_YOUR_FRIENDS_VIA}</div>\n                            <ul className=\"social-icons\">\n                                <li>\n                                    <CopyToClipboard onCopy={this.onCopyLink} text={this.state.shareURL} className=\"social-circle icon-link\">\n                                        <i className=\"icon-link\"></i>\n                                    </CopyToClipboard>\n                                    <label>{AL.INVITE_LINK}</label>\n                                </li>\n                                <li>\n                                    {window.ReactNativeWebView ?\n                                        <span className=\"social-circle icon-facebook\" onClick={() => this.callNativeShare('facebook', this.state.shareURL, this.state.shareText + this.state.shareURL + + '\\n\\n' + AL.Cheers + \",\\n\" + AL.Team + \" \" + WSC.AppName)}>\n                                            <label>{AL.INVITE_FB}</label>\n                                        </span>\n                                        :\n                                        <React.Fragment>\n                                            <FacebookShareButton className=\"social-circle icon-facebook\" url={this.state.shareURL} quote={this.state.shareText + this.state.shareURL + '\\n\\n' + AL.Cheers + \",\\n\" + AL.Team + \" \" + WSC.AppName}\n                                            />\n                                            <label>{AL.INVITE_FB}</label>\n                                        </React.Fragment>\n                                    }\n                                </li>\n                                <li>\n                                    {window.ReactNativeWebView ?\n                                        <span className=\"social-circle icon-whatsapp\" onClick={() => this.callNativeShare('whatsapp', this.state.shareURL, this.state.shareText + this.state.shareURL + '\\n\\n' + AL.Cheers + \",\\n\" + AL.Team + \" \" + WSC.AppName)}>\n                                            <label>{AL.INVITE_WHATSAPP}</label>\n                                        </span>\n                                        :\n                                        <React.Fragment>\n                                            <WhatsappShareButton className=\"social-circle icon-whatsapp\"\n                                                url={\n                                                    this.state.shareText + this.state.shareURL + '\\n\\n' + AL.Cheers + \",\\n\" + AL.Team + \" \" + WSC.AppName\n                                                } />\n                                            <label>{AL.INVITE_WHATSAPP}</label>\n                                        </React.Fragment>\n                                    }\n                                </li>\n                                \n                            </ul>\n                        </div>\n\n                    </Modal>\n\n                )}\n            </MyContext.Consumer>\n        );\n    }\n}\n\nexport default SharePModal;","import React, { Component } from 'react';\nimport { MyContext } from '../../views/Dashboard';\nimport { NoDataView } from '../CustomComponent';\nimport { getPredictionParticipants } from '../../WSHelper/WSCallings';\nimport { _times } from '../../Utilities/Utilities';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport Skeleton from 'react-loading-skeleton';\nimport Helmet from 'react-helmet';\nimport MetaData from '../../helper/MetaData';\nimport CustomHeader from '../../components/CustomHeader';\nimport Images from '../../components/images';\nimport * as WSC from \"../../WSHelper/WSConstants\";\nimport * as AL from \"../../helper/AppLabels\";\n\nclass PredictionParticipants extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            PLIST: [],\n            OWNDATA: '',\n            PNO: 1,\n            PSIZE: 20,\n            HMORE: false,\n            ISLOAD: false,\n            PMID: '',\n            isLeader: false,\n            HOS: {\n                back: true,\n                title: 'Participants',\n            }\n        }\n    }\n\n    UNSAFE_componentWillMount() {\n        if (this.props.match && this.props.match.params) {\n            const matchParam = this.props.match.params;\n            let pmid = atob(matchParam.prediction_master_id)\n            this.setState({\n                PMID: pmid,\n                isLeader: (this.props.location && this.props.location.state) ? this.props.location.state.isLeader : false\n            }, () => {\n                this.getDetail();\n            });\n        }\n    }\n\n    getDetail() {\n        const { PNO, PSIZE, PLIST, PMID, OWNDATA, isLeader } = this.state;\n        let param = {\n            \"prediction_master_id\": PMID,\n            \"page_no\": PNO,\n            \"page_size\": PSIZE,\n            \"isLeader\": isLeader\n        }\n        this.setState({ ISLOAD: true });\n        getPredictionParticipants(param).then((responseJson) => {\n            this.setState({ ISLOAD: false });\n            if (responseJson.response_code === WSC.successCode) {\n                let ownData = responseJson.data.own || '';\n                let listOther = responseJson.data.other_list || [];\n                this.setState({\n                    PLIST: [...PLIST, ...listOther],\n                    OWNDATA: PNO === 1 ? ownData : OWNDATA,\n                    HMORE: listOther.length >= (PSIZE - (ownData || OWNDATA ? 1 : 0)),\n                    PNO: PNO + 1\n                })\n            }\n        })\n    }\n\n    renderShimmer = (idx) => {\n        return (\n            <div key={idx} className=\"list-item\">\n                <span className=\"shimmer\">\n                    <Skeleton height={6} width={'90%'} />\n                    <Skeleton height={4} width={'50%'} />\n                </span>\n                <span className=\"amount\">\n                    <Skeleton height={6} width={'30%'} />\n                </span>\n                <span className=\"amount\">\n                    <Skeleton height={6} width={'40%'} />\n                </span>\n            </div>\n        )\n    }\n\n    renderItem = (item, isown, idx) => {\n        return (\n            <div key={item.user_id + idx} id={item.user_id + idx} className={\"list-item\" + (isown ? ' own-v' : '')}>\n                {this.state.isLeader && <span className=\"u-rank\">{item.user_rank}</span>}\n                <span>{item.user_name}</span>\n                <span className=\"amount\"><img src={Images.IC_COIN} alt=\"\" /><div className=\"val\">{item.bet_coins}</div></span>\n                <span className=\"amount\"><img src={Images.IC_COIN} alt=\"\" /><div className=\"val\">{(this.state.isLeader ? item.win_coins : item.estimated_winning) || 0}</div></span>\n            </div>\n        )\n    }\n\n    render() {\n        const { PLIST, HOS, ISLOAD, OWNDATA, HMORE, isLeader } = this.state;\n        return (\n            <MyContext.Consumer>\n                {(context) => (\n                    <div className={\"web-container prediction-part-v\" + (isLeader ? ' is-leaderboard' : '')}>\n                        <Helmet titleTemplate={`${MetaData.template} | %s`}>\n                            <title>{MetaData.PRDPLIST.title}</title>\n                            <meta name=\"description\" content={MetaData.PRDPLIST.description} />\n                            <meta name=\"keywords\" content={MetaData.PRDPLIST.keywords}></meta>\n                        </Helmet>\n                        <CustomHeader {...this.props} HeaderOption={HOS} />\n                        <div className=\"header-v\">\n                            {isLeader && <span className=\"u-rank\">{AL.RANK}</span>}\n                            <span>{AL.USER_NAME}</span>\n                            <span className=\"amount\">{AL.BID}</span>\n                            <span className=\"amount\">{isLeader ? AL.WINNINGS : AL.EST_WIN}</span>\n                        </div>\n                        {\n                            OWNDATA && this.renderItem(OWNDATA, true, -1)\n                        }\n                        {\n                            PLIST.length > 0 && <InfiniteScroll\n                                dataLength={PLIST.length}\n                                hasMore={!ISLOAD && HMORE}\n                                next={() => this.getDetail()}\n                            >\n                                <div className=\"list-view\">\n                                    {\n                                        PLIST.map((item, idx) => {\n                                            return this.renderItem(item, false, idx);\n                                        })\n                                    }\n                                </div>\n                            </InfiniteScroll>\n                        }\n                        {\n                            PLIST.length === 0 && !OWNDATA && !ISLOAD &&\n                            <NoDataView\n                                BG_IMAGE={Images.no_data_bg_image}\n                                CENTER_IMAGE={Images.BRAND_LOGO_FULL}\n                                MESSAGE_1={AL.NO_DATA_FOUND}\n                            />\n                        }\n                        {\n                            PLIST.length === 0 && ISLOAD &&\n                            _times(16, (idx) => {\n                                return this.renderShimmer(idx)\n                            })\n                        }\n                    </div>\n                )}\n            </MyContext.Consumer>\n        )\n    }\n}\nexport default PredictionParticipants;","import React from 'react';\nimport { MomentDateComponent } from '../CustomComponent';\nimport { Utilities, _Map } from '../../Utilities/Utilities';\nimport { getMyPrediction } from '../../WSHelper/WSCallings';\nimport Skeleton from 'react-loading-skeleton';\nimport PredictionCard from './PredictionCard';\nimport CountdownTimer from '../../views/CountDownTimer';\nimport * as Constants from \"../../helper/Constants\";\nimport * as WSC from \"../../WSHelper/WSConstants\";\n\nexport default class UpcomingPredictions extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            ucList: [],\n            loadingIndex: -1\n        };\n    };\n\n    /**\n     * @description This function is responsible to get Live Contests response\n     * @param status selected tab (Live, Upcoming, Completed)\n     */\n    getMyContestList(item, idx) {\n        if (item.isExpanded) {\n            let ucList = this.state.ucList;\n            item['isExpanded'] = false;\n            ucList[idx] = item;\n            this.setState({ ucList })\n        } else {\n            if (item.contest && item.contest.length > 0) {\n                let ucList = this.state.ucList;\n                item['isExpanded'] = true;\n                ucList[idx] = item;\n                this.setState({ ucList })\n            } else {\n                var param = {\n                    \"season_game_uid\": item.season_game_uid,\n                    \"status\": Constants.CONTEST_UPCOMING\n                }\n                this.setState({ loadingIndex: idx })\n                getMyPrediction(param).then((responseJson) => {\n                    this.setState({ loadingIndex: -1 })\n\n                    if (responseJson && responseJson.response_code == WSC.successCode) {\n                        let ucList = this.state.ucList;\n                        item['contest'] = responseJson.data.predictions || [];\n                        item['isExpanded'] = true;\n                        ucList[idx] = item;\n                        this.setState({ ucList })\n                    }\n                })\n            }\n        }\n    }\n\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        if (this.state.ucList !== nextProps.ucList) {\n            this.setState({ ucList: nextProps.ucList })\n        }\n    }\n\n\n    render() {\n        let { removeFromList } = this.props;\n\n        return (\n            <div>\n                {\n                    this.state.ucList.length > 0 &&\n                    _Map(this.state.ucList, (item, idx) => {\n                        return (\n                            <div key={idx} className={\"prediction-wrap-v contest-card upcoming-contest-card-new\" + (item.isExpanded ? ' pb0' : '')}>\n                                <div onClick={() => this.getMyContestList(item, idx)} className={\"contest-card-header pointer-cursor\" + (item.isExpanded ? ' pb15' : '')}>\n                                    <ul>\n                                        <li className=\"team-left-side\">\n                                            <div className=\"team-content-img\">\n                                                <img src={Utilities.teamFlagURL(item.home_flag)} alt=\"\" />\n                                            </div>\n                                            <div className=\"contest-details-action\">\n                                                <div className=\"contest-details-first-div\">{item.home}</div>\n                                            </div>\n                                        </li>\n                                        <li className=\"progress-middle\">\n                                            <div className=\"team-content\">\n                                                <p>\n                                                    {item.league_name}\n                                                    {/* {Constants.AppSelectedSport === '7' &&\n                                                        <React.Fragment>- {Constants.MATCH_TYPE[item.format]}</React.Fragment>\n                                                    } */}\n                                                </p>\n                                                {\n                                                    Utilities.showCountDown(item) ?\n                                                        <span>\n                                                            {item.game_starts_in && <CountdownTimer timerCallback={() => removeFromList(Constants.CONTEST_UPCOMING, idx)} deadlineTimeStamp={item.game_starts_in} />}\n                                                        </span>\n                                                        :\n                                                        <span className=\"time-line-date\"> <MomentDateComponent data={{ date: item.season_scheduled_date, format: \"D MMM - hh:mm A\" }} /> </span>\n                                                }\n\n                                            </div>\n                                        </li>\n                                        <li className=\"team-right-side\">\n\n                                            <div className=\"contest-details-action\">\n                                                <div className=\"contest-details-first-div\">{item.away}</div>\n                                            </div>\n                                            <div className=\"team-content-img\">\n                                                <img src={Utilities.teamFlagURL(item.away_flag)} alt=\"\" />\n                                            </div>\n\n                                        </li>\n                                    </ul>\n                                </div>\n                                {\n                                    item.isExpanded && <ul className=\"list-pred my-pre\">\n                                        {item.contest.map((childItem, indx) => {\n                                            return <PredictionCard\n                                                {...this.props}\n                                                key={indx}\n                                                data={{\n                                                    itemIndex: indx,\n                                                    item: childItem,\n                                                    status: Constants.CONTEST_UPCOMING\n                                                }} />;\n                                        })}\n                                    </ul>\n                                }\n                                {\n\n                                    (this.state.loadingIndex === idx) && <div className=\"contest-list m border shadow-none\">\n                                        <div className=\"shimmer-container\">\n                                            <div className=\"shimmer-top-view\">\n                                                <div className=\"shimmer-line\">\n                                                    <Skeleton height={9} />\n                                                    <Skeleton height={6} />\n                                                    <Skeleton height={4} width={100} />\n                                                </div>\n                                                <div className=\"shimmer-image\">\n                                                    <Skeleton width={30} height={30} />\n                                                </div>\n                                            </div>\n                                            <div className=\"shimmer-bottom-view\">\n                                                <div className=\"progress-bar-default w-100\">\n                                                    <Skeleton height={6} />\n                                                    <div className=\"d-flex justify-content-between\">\n                                                        <Skeleton height={4} width={60} />\n                                                        <Skeleton height={4} width={60} />\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                }\n                            </div>\n                        )\n                    })\n                }\n            </div>\n        )\n    }\n}","import React from 'react';\nimport { SportsIDs } from \"../../JsonFiles\";\nimport { _Map, Utilities } from '../../Utilities/Utilities';\nimport { AppSelectedSport, CONTEST_LIVE, MATCH_TYPE, CONTEST_UPCOMING } from '../../helper/Constants';\nimport { getMyPrediction } from '../../WSHelper/WSCallings';\nimport Skeleton from 'react-loading-skeleton';\nimport PredictionCard from './PredictionCard';\nimport * as AppLabels from \"../../helper/AppLabels\";\nimport * as WSC from \"../../WSHelper/WSConstants\";\n\n\nexport default class LivePredictions extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            lcList: [],\n            loadingIndex: -1\n        };\n    };\n\n    /**\n     * @description This function is responsible to get Live Contests response\n     * @param status selected tab (Live, Upcoming, Completed)\n     */\n    getMyContestList(item, idx) {\n        if (item.isExpanded) {\n            let lcList = this.state.lcList;\n            item['isExpanded'] = false;\n            lcList[idx] = item;\n            this.setState({ lcList })\n        } else {\n            if (item.contest && item.contest.length > 0) {\n                let lcList = this.state.lcList;\n                item['isExpanded'] = true;\n                lcList[idx] = item;\n                this.setState({ lcList })\n            } else {\n                var param = {\n                    \"season_game_uid\": item.season_game_uid,\n                    \"status\": CONTEST_LIVE\n                }\n                this.setState({ loadingIndex: idx })\n                getMyPrediction(param).then((responseJson) => {\n                    this.setState({ loadingIndex: -1 })\n\n                    if (responseJson && responseJson.response_code == WSC.successCode) {\n                        let lcList = this.state.lcList;\n                        item['contest'] = responseJson.data.predictions || [];\n                        item['isExpanded'] = true;\n                        lcList[idx] = item;\n                        this.setState({ lcList })\n                    }\n                })\n            }\n        }\n    }\n\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        if (this.state.lcList !== nextProps.lcList) {\n            this.setState({ lcList: nextProps.lcList })\n        }\n    }\n\n    render() {\n\n        return (\n            <div>\n                {\n                    this.state.lcList.length > 0 &&\n                    _Map(this.state.lcList, (item, idx) => {\n                        return (\n                            <div key={idx} className={\"prediction-wrap-v contest-card live-contest-card live-contest-card-new\" + (item.isExpanded ? ' pb0' : '')}>\n                                <div onClick={() => this.getMyContestList(item, idx)} className={\"contest-card-header pointer-cursor\" + (item.isExpanded ? ' pb15' : '')}>\n                                    <ul>\n                                        <li className=\"team-left-side\">\n                                            <div className=\"team-content-img\">\n                                                <img src={Utilities.teamFlagURL(item.home_flag)} alt=\"\" />\n                                            </div>\n                                            <div className=\"contest-details-action\">\n                                                <div className=\"contest-details-first-div\">{item.home}</div>\n                                                {\n                                                    AppSelectedSport == SportsIDs.cricket ?\n                                                        item.score_data && item.score_data[1] ?\n                                                        <div className=\"contest-details-sec-div\">\n                                                        {item.score_data[1].home_team_score}-{(item.score_data[1].home_wickets) ? item.score_data[1].home_wickets : 0}\n                                                        <span className=\"gray-color-class\"> {(item.score_data[1].home_overs) ? item.score_data[1].home_overs : 0} {item.score_data[2] ? ' & ' : ''} </span>\n                                                        {\n                                                            item.score_data[2] && <div className=\"contest-details-sec-div second-inning\">\n                                                            {item.score_data[2].home_team_score}-{(item.score_data[2].home_wickets) ? item.score_data[2].home_wickets : 0}\n                                                            <span className=\"gray-color-class\"> {(item.score_data[2].home_overs) ? item.score_data[2].home_overs : 0} </span>\n                                                            </div>\n                                                        }\n                                                        </div>\n                                                            :\n                                                            <div className=\"contest-details-sec-div\">{0}-{0}<span className=\"gray-color-class\"> 0 </span></div>\n                                                        :\n                                                        (item.score_data) ?\n                                                            <div className=\"contest-details-sec-div\">{item.score_data.home_score}</div>\n                                                            :\n                                                            <div className=\"contest-details-sec-div\">0</div>\n                                                }\n                                            </div>\n                                        </li>\n                                        <li className=\"progress-middle\">\n                                            <div className=\"progress-middle-div\">\n                                                <p>\n                                                    {item.league_name}\n                                                    {/* {\n                                                        AppSelectedSport === '7' &&\n                                                        <React.Fragment>- {MATCH_TYPE[item.format]}</React.Fragment>\n                                                    } */}\n                                                </p>\n                                                <span className=\"progress-span\">\n                                                    {AppLabels.IN_PROGRESS}\n                                                </span>\n                                            </div>\n                                        </li>\n                                        <li className=\"team-right-side\">\n                                            <div className=\"contest-details-action\">\n                                                <div className=\"contest-details-first-div\">{item.away}</div>\n                                                {\n                                                    AppSelectedSport == SportsIDs.cricket ?\n                                                        item.score_data && item.score_data[1] ?\n                                                        <div className=\"contest-details-sec-div\">\n                                                        {item.score_data[1].away_team_score}-{(item.score_data[1].away_wickets) ? item.score_data[1].away_wickets : 0}\n                                                        <span className=\"gray-color-class\"> {(item.score_data[1].away_overs) ? item.score_data[1].away_overs : 0} {item.score_data[2] ? ' & ' : ''} </span>\n                                                        {\n                                                            item.score_data[2] && <div className=\"contest-details-sec-div second-inning\">\n                                                            {item.score_data[2].away_team_score}-{(item.score_data[2].away_wickets) ? item.score_data[2].away_wickets : 0}\n                                                            <span className=\"gray-color-class\"> {(item.score_data[2].away_overs) ? item.score_data[2].away_overs : 0} </span>\n                                                            </div>\n                                                        }\n                                                        </div>\n                                                            :\n                                                            <div className=\"contest-details-sec-div\">{0}-{0}<span className=\"gray-color-class\"> 0 </span></div>\n                                                        :\n                                                        (item.score_data) ?\n                                                            <div className=\"contest-details-sec-div\">{item.score_data.away_score}</div>\n                                                            :\n                                                            <div className=\"contest-details-sec-div\">0</div>\n                                                }\n                                            </div>\n                                            <div className=\"team-content-img\">\n                                                <img src={Utilities.teamFlagURL(item.away_flag)} alt=\"\" />\n                                            </div>\n                                        </li>\n\n                                    </ul>\n                                </div>\n                                {\n                                    item.isExpanded && <ul className=\"list-pred my-pre\">\n                                        {item.contest.map((childItem, indx) => {\n                                            return <PredictionCard\n                                                {...this.props}\n                                                key={indx}\n                                                data={{\n                                                    itemIndex: indx,\n                                                    item: childItem,\n                                                    status: CONTEST_LIVE\n                                                }} />;\n                                        })}\n                                    </ul>\n                                }\n                                {\n\n                                    (this.state.loadingIndex === idx) && <div className=\"contest-list m border shadow-none\">\n                                        <div className=\"shimmer-container\">\n                                            <div className=\"shimmer-top-view\">\n                                                <div className=\"shimmer-line\">\n                                                    <Skeleton height={9} />\n                                                    <Skeleton height={6} />\n                                                    <Skeleton height={4} width={100} />\n                                                </div>\n                                                <div className=\"shimmer-image\">\n                                                    <Skeleton width={30} height={30} />\n                                                </div>\n                                            </div>\n                                            <div className=\"shimmer-bottom-view\">\n                                                <div className=\"progress-bar-default w-100\">\n                                                    <Skeleton height={6} />\n                                                    <div className=\"d-flex justify-content-between\">\n                                                        <Skeleton height={4} width={60} />\n                                                        <Skeleton height={4} width={60} />\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                }\n                            </div>\n                        )\n                    })\n                }\n            </div >\n        )\n    }\n\n}","import React from 'react';\nimport { MomentDateComponent } from '../CustomComponent';\nimport { Utilities, _Map } from '../../Utilities/Utilities';\nimport { AppSelectedSport, MATCH_TYPE } from '../../helper/Constants';\nimport { getMyPrediction } from '../../WSHelper/WSCallings';\nimport { SportsIDs } from \"../../JsonFiles\";\nimport Skeleton from 'react-loading-skeleton';\nimport PredictionCard from './PredictionCard';\nimport * as Constants from \"../../helper/Constants\";\nimport * as WSC from \"../../WSHelper/WSConstants\";\n\nexport default class CompletedPredictions extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            ccList: [],\n            loadingIndex: -1\n        };\n    };\n\n    /**\n     * @description This function is responsible to get Live Contests response\n     * @param status selected tab (Live, Upcoming, Completed)\n     */\n    getMyContestList(item, idx) {\n        if (item.isExpanded) {\n            let ccList = this.state.ccList;\n            item['isExpanded'] = false;\n            ccList[idx] = item;\n            this.setState({ ccList })\n        } else {\n            if (item.contest && item.contest.length > 0) {\n                let ccList = this.state.ccList;\n                item['isExpanded'] = true;\n                ccList[idx] = item;\n                this.setState({ ccList })\n            } else {\n                var param = {\n                    \"season_game_uid\": item.season_game_uid,\n                    \"status\": Constants.CONTEST_COMPLETED\n                }\n                this.setState({ loadingIndex: idx })\n                getMyPrediction(param).then((responseJson) => {\n                    this.setState({ loadingIndex: -1 })\n\n                    if (responseJson && responseJson.response_code == WSC.successCode) {\n                        let ccList = this.state.ccList;\n                        item['contest'] = responseJson.data.predictions || [];\n                        item['isExpanded'] = true;\n                        ccList[idx] = item;\n                        this.setState({ ccList })\n                    }\n                })\n            }\n        }\n    }\n\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        if (this.state.ccList !== nextProps.ccList) {\n            this.setState({ ccList: nextProps.ccList })\n        }\n    }\n\n    render() {\n\n        return (\n            <div>\n                {\n                    this.state.ccList.length > 0 &&\n\n                    _Map(this.state.ccList, (item, idx) => {\n\n                        return (\n                            <div key={idx} className={\"prediction-wrap-v contest-card completed-contest-card-new\" + (item.isExpanded ? ' pb0' : '')}>\n                                <div onClick={() => this.getMyContestList(item, idx)} className={\"contest-card-header pointer-cursor\" + (item.isExpanded ? ' pb15' : '')}>\n                                    <ul>\n                                        <li className=\"team-left-side\">\n\n                                            <div className=\"team-content-img\">\n                                                <img src={Utilities.teamFlagURL(item.home_flag)} alt=\"\" />\n                                            </div>\n                                            <div className=\"contest-details-action\">\n\n                                                <div className=\"contest-details-first-div\">{item.home}</div>\n                                                {\n                                                    AppSelectedSport == SportsIDs.cricket ?\n                                                        item.score_data && item.score_data[1] ?\n                                                        <div className=\"contest-details-sec-div\">\n                                                        {item.score_data[1].home_team_score}-{(item.score_data[1].home_wickets) ? item.score_data[1].home_wickets : 0}\n                                                        <span className=\"gray-color-class\"> {(item.score_data[1].home_overs) ? item.score_data[1].home_overs : 0} {item.score_data[2] ? ' & ' : ''} </span>\n                                                        {\n                                                            item.score_data[2] && <div className=\"contest-details-sec-div second-inning\">\n                                                            {item.score_data[2].home_team_score}-{(item.score_data[2].home_wickets) ? item.score_data[2].home_wickets : 0}\n                                                            <span className=\"gray-color-class\"> {(item.score_data[2].home_overs) ? item.score_data[2].home_overs : 0} </span>\n                                                            </div>\n                                                        }\n                                                        </div>\n                                                            :\n                                                            <div className=\"contest-details-sec-div\">{0}-{0}<span className=\"gray-color-class\"> 0 </span></div>\n                                                        :\n                                                        (item.score_data) ?\n                                                            <div className=\"contest-details-sec-div\">{item.score_data.home_score}</div>\n                                                            :\n                                                            <div className=\"contest-details-sec-div\">0</div>\n                                                }\n                                            </div>\n                                        </li>\n                                        <li className=\"progress-middle\">\n\n                                            <div className=\"progress-middle-div\">\n                                                <div className=\"team-content\">\n                                                    <p>\n                                                        {item.league_name}\n                                                        {/* {\n                                                            AppSelectedSport === '7' &&\n                                                            <React.Fragment>- {MATCH_TYPE[item.format]}</React.Fragment>\n                                                        } */}\n                                                    </p>\n                                                    <span className=\"time-line primary-color\"> <MomentDateComponent data={{ date: item.season_scheduled_date, format: \"D MMM - hh:mm A\" }} /> </span>\n\n                                                </div>\n                                            </div>\n                                        </li>\n                                        <li className=\"team-right-side\">\n\n                                            <div className=\"contest-details-action\">\n                                                <div className=\"contest-details-first-div\">{item.away}</div>\n                                                {\n                                                    AppSelectedSport == SportsIDs.cricket ?\n                                                        item.score_data && item.score_data[1] ?\n                                                        <div className=\"contest-details-sec-div\">\n                                                        {item.score_data[1].away_team_score}-{(item.score_data[1].away_wickets) ? item.score_data[1].away_wickets : 0}\n                                                        <span className=\"gray-color-class\"> {(item.score_data[1].away_overs) ? item.score_data[1].away_overs : 0} {item.score_data[2] ? ' & ' : ''} </span>\n                                                        {\n                                                            item.score_data[2] && <div className=\"contest-details-sec-div second-inning\">\n                                                            {item.score_data[2].away_team_score}-{(item.score_data[2].away_wickets) ? item.score_data[2].away_wickets : 0}\n                                                            <span className=\"gray-color-class\"> {(item.score_data[2].away_overs) ? item.score_data[2].away_overs : 0} </span>\n                                                            </div>\n                                                        }\n                                                        </div>\n                                                            :\n                                                            <div className=\"contest-details-sec-div\">{0}-{0}<span className=\"gray-color-class\"> 0 </span></div>\n                                                        :\n                                                        (item.score_data) ?\n                                                            <div className=\"contest-details-sec-div\">{item.score_data.away_score}</div>\n                                                            :\n                                                            <div className=\"contest-details-sec-div\">0</div>\n                                                }\n\n                                            </div>\n                                            <div className=\"team-content-img\">\n                                                <img src={Utilities.teamFlagURL(item.away_flag)} alt=\"\" />\n                                            </div>\n                                        </li>\n                                    </ul>\n                                </div>\n\n\n                                {\n                                    item.isExpanded && <ul className=\"list-pred my-pre\">\n                                        {item.contest.map((childItem, indx) => {\n                                            return <PredictionCard\n                                                {...this.props}\n                                                key={indx}\n                                                data={{\n                                                    itemIndex: indx,\n                                                    item: childItem,\n                                                    status: Constants.CONTEST_COMPLETED\n                                                }} />;\n                                        })}\n                                    </ul>\n                                }\n                                {\n\n                                    (this.state.loadingIndex === idx) && <div className=\"contest-list m border shadow-none\">\n                                        <div className=\"shimmer-container\">\n                                            <div className=\"shimmer-top-view\">\n                                                <div className=\"shimmer-line\">\n                                                    <Skeleton height={9} />\n                                                    <Skeleton height={6} />\n                                                    <Skeleton height={4} width={100} />\n                                                </div>\n                                                <div className=\"shimmer-image\">\n                                                    <Skeleton width={30} height={30} />\n                                                </div>\n                                            </div>\n                                            <div className=\"shimmer-bottom-view\">\n                                                <div className=\"progress-bar-default w-100\">\n                                                    <Skeleton height={6} />\n                                                    <div className=\"d-flex justify-content-between\">\n                                                        <Skeleton height={4} width={60} />\n                                                        <Skeleton height={4} width={60} />\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                }\n                            </div>\n                        )\n                    })\n                }\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport { MyContext } from '../../views/Dashboard';\nimport { Modal } from 'react-bootstrap';\nimport Images from '../../components/images';\nimport * as AL from \"../../helper/AppLabels\";\n\nclass ConfirmPrediction extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n        }\n    }\n    render() {\n        const { mShow, mHide } = this.props.preData;\n        return (\n            <MyContext.Consumer>\n                {(context) => (\n                    <Modal\n                        show={mShow}\n                        onHide={mHide}\n                        bsSize=\"large\"\n                        dialogClassName=\"modal-full-screen\"\n                        className=\"modal-pre-lm\">\n                        <Modal.Body>\n                            <a href onClick={mHide} className=\"modal-close\">\n                                <i className=\"icon-close\"></i>\n                            </a>\n                            <span className=\"lm-title\">{AL.PL_MORE}</span>\n                            <div className=\"img-view-c\">\n                                <img alt=\"\" src={Images.TSHIRT_VS_IC} />\n                                <div className=\"text-container\">\n                                    <p className=\"easy-p right-s\">{AL.EASY_P}</p>\n                                    <p className=\"details\">{AL.NF_SKILL}</p>\n                                </div>\n                            </div>\n                            <img src={Images.DOT_LINE} className=\"line-dashed\" alt=\"\" />\n                            <div className=\"img-view-c m-t-n\">\n                                <div className=\"text-container text-right\">\n                                    <p className=\"easy-p left-s\">{AL.LIVE_ME}</p>\n                                    <p className=\"details\">{AL.EXT_Q}</p>\n                                </div>\n                                <img alt=\"\" src={Images.HELMET_IC} />\n                            </div>\n                            <img src={Images.DOT_LINE_R} className=\"line-dashed\" alt=\"\" />\n                            <div className=\"img-view-c m-t-n\">\n                                <img alt=\"\" src={Images.PREDICTION_IC} />\n                                <div className=\"text-container\">\n                                    <p className=\"easy-p right-s\">{AL.PB_WIN}</p>\n                                    <p className=\"details\">{AL.PWIN_COIN}</p>\n                                </div>\n                            </div>\n                            <button onClick={mHide} className=\"btn btn-primary \">{AL.GOTIT}</button>\n                        </Modal.Body>\n                    </Modal>\n                )}\n            </MyContext.Consumer>\n        )\n    }\n}\n\nexport default ConfirmPrediction;","import PredictionFixture from \"./PredictionFixture\";\nimport PredictionLobby from \"./PredictionLobby\";\nimport PredictionContestList from \"./PredictionContestList\";\nimport PredictionCard from \"./PredictionCard\";\nimport MyPredictions from \"./MyPredictions\";\nimport UpcomingPredictions from \"./UpcomingPredictions\";\nimport LivePredictions from \"./LivePredictions\";\nimport CompletedPredictions from \"./CompletedPredictions\";\nimport ConfirmPrediction from \"./ConfirmPrediction\";\nimport PredictionLearnMore from \"./PredictionLearnMore\";\nimport SharePModal from \"./SharePModal\";\nimport PredictionParticipants from \"./PredictionParticipants\";\nexport {\n  PredictionFixture,\n  PredictionLobby,\n  PredictionContestList,\n  PredictionCard,\n  MyPredictions,\n  UpcomingPredictions,\n  LivePredictions,\n  CompletedPredictions,\n  ConfirmPrediction,\n  PredictionLearnMore,\n  SharePModal,\n  PredictionParticipants\n};\n","import React, { Component } from 'react';\nimport { MyContext } from '../../views/Dashboard';\nimport { _Map, _filter, Utilities } from '../../Utilities/Utilities';\nimport { NoDataView } from '../CustomComponent';\nimport { PredictionLearnMore, ConfirmPrediction } from '.';\nimport { getPredictionContest, checkIsPredictionJoin } from '../../WSHelper/WSCallings';\nimport { CONTESTS_LIST, IS_DFS, IS_PREDICTION, AllowRedeem } from '../../helper/Constants';\nimport SocketIOClient from \"socket.io-client\";\nimport Skeleton from 'react-loading-skeleton';\nimport CustomHeader from '../../components/CustomHeader';\nimport WSManager from '../../WSHelper/WSManager';\nimport PredictionCard from './PredictionCard';\nimport SharePModal from './SharePModal';\nimport Images from '../../components/images';\nimport * as WSC from \"../../WSHelper/WSConstants\";\nimport * as AL from \"../../helper/AppLabels\";\n\nvar socket = '';\n\nclass PredictionContestList extends Component {\n    constructor(props) {\n        super(props);\n        this._isMounted = false;\n        this.state = {\n            LData: this.props.data || '',\n            ContestList: [],\n            isLoading: false,\n            ShimmerList: [1, 2, 3, 4, 5, 6],\n            showCP: false,\n            showLM: false,\n            showShareM: false,\n            ShareItem: '',\n            joinPItem: ''\n        }\n    }\n\n    componentDidMount() {\n        if(IS_PREDICTION){\n            socket = SocketIOClient(WSC.nodeBaseURL);\n        }\n        this._isMounted = true;\n        this.parseHistoryStateData(this.state.LData);\n    }\n\n    componentWillUnmount() {\n        this._isMounted = false;\n        if(socket){\n            socket.disconnect();\n        }\n    }\n\n    getContestList(data) {\n        let param = {\n            \"season_game_uid\": data.season_game_uid,\n        }\n        this.setState({ isLoading: true })\n        getPredictionContest(param).then((responseJson) => {\n            this.setState({ isLoading: false })\n            if (responseJson.response_code === WSC.successCode) {\n                this.setState({\n                    ContestList: responseJson.data.predictions || []\n                });\n            }\n        })\n    }\n\n    parseHistoryStateData = (data) => {\n        socket.disconnect();\n        if (data) {\n            let { LobyyData } = data;\n            this.setState({\n                LData: LobyyData\n            }, () => {\n                this.getContestList(LobyyData)\n                this.joinPredictionRoom(LobyyData)\n            })\n        }\n    }\n\n    joinPredictionRoom = (data) => {\n        socket.connect()\n        socket.emit('JoinAddPredictionRoom', { season_game_uid: data.season_game_uid });\n        socket.emit('JoinPausePlayPredictionRoom', { season_game_uid: data.season_game_uid });\n        socket.emit('JoinDeletePredictionRoom', { season_game_uid: data.season_game_uid });\n        if (WSManager.loggedIn()) {\n            socket.emit('JoinWonPredictionRoom', { user_id: WSManager.getProfile().user_id });\n            socket.on('NotifyWonPrediction', (obj) => {\n                if (this._isMounted) {\n                    let bal = WSManager.getBalance();\n                    let preBal = parseInt(bal.point_balance || 0);\n                    let updatedBal = preBal + parseInt(obj.amount);\n                    CustomHeader.updateCoinBalance(updatedBal);\n                    bal[\"point_balance\"] = updatedBal;\n                    WSManager.setBalance(bal);\n                    CustomHeader.showRSuccess(obj);\n                }\n            })\n        }\n        socket.on('NotifyNewPrediction', (obj) => {\n            if (this._isMounted && obj.season_game_uid === data.season_game_uid) {\n                this.addFixture(obj)\n                CustomHeader.showNewPToast()\n            }\n        })\n        socket.on('NotifyDeletePrediction', (obj) => {\n            if (this._isMounted && obj.season_game_uid === data.season_game_uid) {\n                this.deleteFixture(obj)\n            }\n        })\n        socket.on('NotifyPausePlayPrediction', (obj) => {\n            if (this._isMounted && obj.season_game_uid === data.season_game_uid) {\n                if (obj.pause === 1) {\n                    this.deleteFixture(obj)\n                } else if (obj.pause === 0) {\n                    if (WSManager.loggedIn()) {\n                        let param = {\n                            \"prediction_master_id\": obj.prediction_master_id,\n                        }\n                        checkIsPredictionJoin(param).then((responseJson) => {\n                            if (responseJson.response_code === WSC.successCode) {\n                                if (responseJson.data.is_joined == 0) {\n                                    this.addFixture(obj)\n                                }\n                            }\n                        })\n                    } else {\n                        this.addFixture(obj)\n                    }\n                }\n            }\n        })\n    }\n\n    deleteFixture = (item) => {\n        let fArray = _filter(this.state.ContestList, (obj) => {\n            return item.prediction_master_id != obj.prediction_master_id\n        })\n        this.setState({\n            ContestList: fArray\n        })\n    }\n\n    addFixture = (obj) => {\n        let pinnedArray = [];\n        let tmpArray = [];\n        _Map(this.state.ContestList, (item) => {\n            if (item.is_pin == 1) {\n                pinnedArray.push(item)\n            } else {\n                tmpArray.push(item)\n            }\n        })\n        this.setState({\n            ContestList: [...pinnedArray, obj.prediction, ...tmpArray]\n        });\n    }\n\n    timerCompletionCall = (item) => {\n        this.deleteFixture(item)\n    }\n\n    onSelectPredict = (itemIndex, optionIndex, option) => {\n        let tmpArray = this.state.ContestList;\n        let item = tmpArray[itemIndex];\n        _Map(item['option'], (obj, idx) => {\n            if (idx === optionIndex) {\n                obj['user_selected_option'] = option.prediction_option_id;\n                item['option_predicted'] = option\n            } else {\n                obj['user_selected_option'] = null;\n            }\n        })\n        this.setState({\n            ContestList: tmpArray\n        })\n    }\n\n    onMakePrediction = (item) => {\n        if (WSManager.loggedIn()) {\n            this.setState({\n                joinPItem: item,\n                showCP: true\n            })\n        } else {\n            this.goToSignup()\n        }\n    }\n\n    showShareM = (data) => {\n        this.setState({\n            showShareM: true,\n        });\n    }\n\n    hideShareM = () => {\n        this.setState({\n            showShareM: false,\n        });\n    }\n\n    shareContest(event, data) {\n        if (WSManager.loggedIn()) {\n            event.stopPropagation();\n            this.setState({ showShareM: true, ShareItem: data })\n        } else {\n            this.goToSignup()\n        }\n    }\n\n    goToSignup = () => {\n        this.props.history.push(\"/signup\")\n    }\n\n    hideCP = () => {\n        let tmpArray = this.state.ContestList;\n        let itemIndex = tmpArray.indexOf(this.state.joinPItem)\n        let item = itemIndex >= 0 ? tmpArray[itemIndex] : null;\n        if (item && item.option) {\n            _Map(item['option'], (obj, idx) => {\n                if (obj.user_selected_option) {\n                    obj['user_selected_option'] = null;\n                }\n            })\n            this.setState({\n                ContestList: tmpArray,\n                showCP: false\n            })\n        } else {\n            this.setState({\n                showCP: false\n            })\n        }\n    }\n\n    clickLearnMore = () => {\n        this.setState({\n            showLM: true\n        })\n    }\n\n    hideLM = () => {\n        this.setState({\n            showLM: false\n        })\n    }\n\n    clickEarnCoins = () => {\n        if (WSManager.loggedIn()) {\n            this.props.history.push(\"/earn-coins\")\n        } else {\n            this.goToSignup()\n        }\n    }\n\n    renderDFSCard = () => {\n        if(Utilities.getMasterData().a_dfs_bnr != 1){\n            return ''\n        }\n        let bannerImg = Utilities.getMasterData().dfs_bnr;\n        if (IS_DFS) {\n            return ( bannerImg ?\n                <li onClick={this.props.goToDFS} className=\"is-card prd-card-img-only\" >\n                    <img className=\"img-shape\" src={Utilities.getSettingURL(bannerImg)} alt='' />\n                </li>\n                :\n                <li onClick={this.props.goToDFS} className=\"is-card\">\n                    <div className=\"dfs-card\" >\n                        <img className=\"img-dfs-shape\" src={Images.DFS_SHAPE_IMG} alt='' />\n                        <div className=\"dfs-c\">\n                            <img className=\"img-dfs\" src={Images.DFS_IMG} alt='' />\n                            <p>Play Daily Fantasy Sports, Win Real Cash Prizes</p>\n                        </div>\n                    </div>\n                </li>\n            )\n        }\n        return ''\n    }\n    renderPrizeCard = () => {\n        if(Utilities.getMasterData().a_prize_bnr != 1 || AllowRedeem === false){\n            return ''\n        }\n        let bannerImg = Utilities.getMasterData().prize_bnr;\n        return ( bannerImg ?\n            <li onClick={this.props.goToRewards} className=\"is-card prd-card-img-only m-b-20\" >\n                <img className=\"img-shape\" src={Utilities.getSettingURL(bannerImg)} alt='' />\n            </li>\n            :\n            <li className=\"is-card\" onClick={this.props.goToRewards}>\n                <div className=\"prd-prize-card\">\n                    <img className=\"img-prize-card\" src={Images.PRD_PRIZE_IMG} alt='' />\n                    <div className=\"dfs-c\">\n                        <img className=\"img-dfs\" src={Images.PRIZES_CAR} alt='' />\n                        <p>Play Prediction and Win Huge Rewards</p>\n                    </div>\n                </div>\n            </li>\n        )\n    }\n\n    render() {\n        const { ContestList, isLoading, ShimmerList, showCP, joinPItem, showLM, showShareM, ShareItem } = this.state;\n        return (\n            <MyContext.Consumer>\n                {(context) => (\n                    <div className=\"prediction-wrap-v\">\n                        <div className=\"p_view-container\">\n                            <div className=\"contest-action\">\n                                <button onClick={this.clickLearnMore} className=\"btn btn-rounded small\">{AL.HOW_TO_PREDICT}</button>\n                                <button onClick={this.clickEarnCoins} className=\"btn btn-rounded small\">{AL.EARN_COINS}</button>\n                            </div>\n                            {\n                                !isLoading && <ul className=\"list-pred\">\n                                    {\n                                        ContestList.map((item, index) => {\n                                            return (\n                                                <React.Fragment key={index} >\n                                                    <PredictionCard\n                                                        {...this.props}\n                                                        key={item.prediction_master_id}\n                                                        data={{\n                                                            itemIndex: index,\n                                                            item: item,\n                                                            status: CONTESTS_LIST,\n                                                            timerCallback: this.timerCompletionCall,\n                                                            onSelectPredict: this.onSelectPredict,\n                                                            onMakePrediction: this.onMakePrediction,\n                                                            shareContest: this.shareContest.bind(this)\n                                                        }} />\n                                                    {\n                                                        index === 0 && this.renderPrizeCard()\n                                                    }\n                                                    {\n                                                        index === 2 && this.renderDFSCard()\n                                                    }\n                                                </React.Fragment>\n                                            );\n                                        })\n                                    }\n                                    {\n                                        (ContestList.length < 3 && !isLoading) && this.renderDFSCard()\n                                    }\n                                </ul>\n                            }\n\n                            {\n                                ContestList.length === 0 && !isLoading &&\n                                <NoDataView\n                                    BG_IMAGE={Images.no_data_bg_image}\n                                    CENTER_IMAGE={Images.BRAND_LOGO_FULL}\n                                    MESSAGE_1={AL.NO_FIXTURES_MSG1}\n                                    MESSAGE_2={AL.NO_FIXTURES_MSG3}\n                                />\n                            }\n                            {\n                                ContestList.length === 0 && isLoading &&\n                                _Map(ShimmerList, (item, index) => {\n                                    return (\n                                        this.Shimmer(index)\n                                    )\n                                })\n                            }\n\n                        </div>\n                        {\n                            showCP && <ConfirmPrediction {...this.props} preData={{\n                                mShow: showCP,\n                                mHide: this.hideCP,\n                                cpData: joinPItem,\n                                successAction: this.timerCompletionCall\n                            }} />\n                        }\n                        {\n                            showLM && <PredictionLearnMore {...this.props} preData={{\n                                mShow: showLM,\n                                mHide: this.hideLM\n                            }} />\n                        }\n                        {\n                            showShareM &&\n                            <SharePModal\n                                {...this.props}\n                                preData={{\n                                    mShow: showShareM,\n                                    mHide: this.hideShareM,\n                                    spData: ShareItem\n                                }}\n                            />\n                        }\n                    </div>\n                )}\n            </MyContext.Consumer>\n        )\n    }\n\n    Shimmer = (index) => {\n        return (\n            <div key={index} className=\"contest-list m\">\n                <div className=\"shimmer-container\">\n                    <div className=\"shimmer-top-view\">\n                        <div className=\"shimmer-image predict\">\n                            <Skeleton width={24} height={24} />\n                        </div>\n                        <div className=\"shimmer-line predict\">\n                            <div className=\"m-v-xs\">\n                                <Skeleton height={8} width={'70%'} />\n                            </div>\n                            <Skeleton height={34} />\n                            <Skeleton height={34} />\n                        </div>\n                    </div>\n                    <div className=\"shimmer-bottom-view m-0 pt-3\">\n                        <div className=\"progress-bar-default\">\n                            <Skeleton height={8} width={'70%'} />\n                            <div className=\"d-flex justify-content-between\">\n                                <Skeleton height={4} width={110} />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nexport default PredictionContestList;","import React,{lazy, Suspense} from 'react';\nimport { MyContext } from '../../InitialSetup/MyProvider';\nimport { updateDeviceToken, getLobbyPrediction } from \"../../WSHelper/WSCallings\";\nimport { Utilities, _isEmpty, _Map, parseURLDate, _debounce,_filter } from '../../Utilities/Utilities';\nimport { NoDataView } from '../../Component/CustomComponent';\nimport { PredictionContestList } from '.';\nimport ls from 'local-storage';\nimport PredictionFixture from './PredictionFixture';\nimport Images from '../../components/images';\nimport WSManager from \"../../WSHelper/WSManager\";\nimport * as AppLabels from \"../../helper/AppLabels\";\nimport * as WSC from \"../../WSHelper/WSConstants\";\nimport * as Constants from \"../../helper/Constants\";\nimport Skeleton from 'react-loading-skeleton';\nconst ReactSlickSlider = lazy(()=>import('../CustomComponent/ReactSlickSlider'));\n\nexport class Lobby extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            OriginalContestList: [],\n            ContestList: [],\n            ShimmerList: [1, 2, 3, 4, 5, 6, 7],\n            isListLoading: false,\n            showLobbyFitlers: false,\n            league_id: \"\",\n            filterArray: [],\n            sports_id: Constants.AppSelectedSport,\n            canRedirect: true,\n            filterLeagueList: [],\n            selectedFixture: ''\n        }\n    }\n\n    /**\n     * @description - this is life cycle method of react\n     */\n\n    componentDidMount() {\n        if (this.props.location.pathname === '/lobby') {\n            let { sports_id } = this.state;\n            WSManager.setFromConfirmPopupAddFunds(false);\n            let league_id = this.getSportsLeagueId(sports_id, Constants.LOBBY_FILTER_ARRAY);\n            this.setState({ sports_id, league_id, filterArray: Constants.LOBBY_FILTER_ARRAY }, () => {\n                this.lobbyContestList();\n            })\n\n            \n            WSManager.googleTrack(WSC.GA_PROFILE_ID, 'fixture');\n            if (WSManager.loggedIn()) {\n                WSManager.googleTrackDaily(WSC.GA_PROFILE_ID, 'loggedInusers');\n            }\n            this.checkOldUrl();\n        }\n        this.handelNativeGoogleLogin()\n        if (!ls.get('isDeviceTokenUpdated') && ls.get('isDeviceTokenUpdated')) {\n\n            let token_data = {\n                action: 'push',\n                targetFunc: 'push',\n                type: 'deviceid',\n            }\n            this.sendMessageToApp(token_data)\n        }\n        setTimeout(() => {\n            let push_data = {\n                action: 'push',\n                targetFunc: 'push',\n                type: 'receive',\n            }\n            this.sendMessageToApp(push_data)\n        }, 300);\n    }\n\n    UNSAFE_componentWillMount = () => {\n        this.enableDisableBack(false)\n        Utilities.scrollToTop()\n    }\n\n    enableDisableBack(flag) {\n        if (window.ReactNativeWebView) {\n            let data = {\n                action: 'back',\n                type: flag,\n                targetFunc: 'handleLoginReceived'\n            }\n            this.sendMessageToApp(data);\n        }\n    }\n\n    componentWillUnmount() {\n        let data = {\n            action: 'back',\n            targetFunc: 'back',\n            type: false,\n        }\n        this.sendMessageToApp(data);\n    }\n\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        if (this.state.sports_id != nextProps.selectedSport) {\n            this.reload(nextProps);\n        }\n        if (this.state.showLobbyFitlers !== nextProps.showLobbyFitlers) {\n            this.setState({ showLobbyFitlers: nextProps.showLobbyFitlers })\n        }\n    }\n\n    /**\n     * @description method will be called when changing sports\n     */\n    reload = (nextProps) => {\n        if (window.location.pathname.startsWith(\"/lobby\")) {\n            let league_id = this.getSportsLeagueId(nextProps.selectedSport, this.state.filterArray);\n            this.setState({\n                ContestList: [],\n                league_id: league_id,\n                sports_id: nextProps.selectedSport,\n            }, () => {\n                WSManager.setFromConfirmPopupAddFunds(false);\n                this.lobbyContestList();                \n            })\n        }\n    }\n\n    sendMessageToApp(action) {\n        if (window.ReactNativeWebView) {\n            window.ReactNativeWebView.postMessage(JSON.stringify(action));\n        }\n    }\n\n    handelNativeGoogleLogin() {\n        window.addEventListener('message', (e) => {\n\n            if (e.data.locale != undefined) {\n                WSManager.setAppLang(e.data.locale);\n            }\n            if (e.data.UserProfile != undefined) {\n                WSManager.setProfile(e.data.UserProfile);\n            }\n            if (e.data.LoginSessionKey != '' && e.data.LoginSessionKey != undefined) {\n                WSManager.setToken(e.data.LoginSessionKey);\n            }\n            if (e.data.isMobileApp != '' && e.data.isMobileApp != undefined) {\n                WSManager.setIsMobileApp(e.data.isMobileApp);\n            }\n\n            if (e.data.action == 'push' && e.data.type == 'deviceid') {\n                if(e.data.token && e.data.token != WSC.DeviceToken.getDeviceId()){\n                    WSC.DeviceToken.setDeviceId(e.data.token);\n                    this.updateDeviceToken();\n                }\n            }\n            else if (e.data.action == 'push' && e.data.type == 'receive') {\n                let pathName = '';\n                if (e.data.notif.notification_type == '120') {\n                    pathName = 'add-funds';\n                }\n                else if (e.data.notif.notification_type == '121') {\n                    pathName = Utilities.getSelectedSportsForUrl().toLowerCase() + '/contest/' + e.data.notif.contest_unique_id\n                }\n                else if (e.data.notif.notification_type == '123') {\n                    pathName = 'refer-friend';\n                }\n                else if (e.data.notif.notification_type == '124' ||\n                    e.data.notif.notification_type == '131' ||\n                    e.data.notif.notification_type == '132' ||\n                    e.data.notif.notification_type == '300') {\n                    ls.set('selectedSports', e.data.notif.sports_id);\n                    Constants.setValue.setAppSelectedSport(e.data.notif.sports_id);\n                    let dateformaturl = parseURLDate(e.data.notif.season_scheduled_date);\n                    pathName = Utilities.getSelectedSportsForUrl().toLowerCase() + '/contest-listing/' + e.data.notif.collection_master_id + '/' + e.data.notif.home + \"-vs-\" + e.data.notif.away + \"-\" + dateformaturl + \"?sgmty=\" +  btoa(Constants.SELECTED_GAMET);\n                }\n                else if (e.data.notif.notification_type == '135') {\n                    if (e.data.notif.custom_notification_type == 1) {\n                        pathName = 'lobby';\n                    }\n                    else if (e.data.notif.custom_notification_type == 2) {\n                        pathName = 'my-wallet';\n                    }\n                    else if (e.data.notif.custom_notification_type == 3) {\n                        pathName = 'my-profile';\n                    }\n                    else if (e.data.notif.custom_notification_type == 4) {\n                        pathName = 'my-contests?contest=upcoming';\n                    }\n                    else if (e.data.notif.custom_notification_type == 5) {\n                        pathName = 'refer-friend';\n                    }\n                    else if (e.data.notif.custom_notification_type ==7) {\n                        pathName = 'add-funds';\n                    }\n                    else {\n                        pathName = 'lobby';\n                    }\n                }\n                if (pathName != '') {\n                    this.props.history.push({ pathname: pathName });\n                }\n            }\n            else if (e.data.action == 'app_dep_linking' && e.data.type == 'android') {\n                let can = ls.get('canRedirect');\n                if (can == null || can) {\n                    this.blockMultiRedirection()\n                    let pathName = e.data.pathName;\n                    if (pathName) {\n                        this.props.history.push(pathName);\n                    }\n                }\n            }\n            else if (e.data.action == 'app_dep_linking' && e.data.type == 'reset') {\n                ls.set('canRedirect', true)\n            }\n        });\n    }\n\n    blockMultiRedirection() {\n        ls.set('canRedirect', false)\n        setTimeout(() => {\n\n            ls.set('canRedirect', true)\n        }, 1000 * 5);\n    }\n\n    updateDeviceToken = () => {\n        let param = {\n            \"device_type\": WSC.deviceTypeAndroid,\n            \"device_id\": WSC.DeviceToken.getDeviceId(),\n        }\n        if(WSManager.loggedIn() && !Constants.IS_SPORTS_HUB){\n            updateDeviceToken(param).then((responseJson) => {\n            })\n        }\n    }\n\n    checkOldUrl() {\n        let url = window.location.href;\n        let sports = '#' + Utilities.getSelectedSportsForUrl();\n        if (!url.includes(sports)) {\n            url = url + sports\n        }\n        if (!url.includes('#prediction')) {\n            url = url + \"#prediction\";\n        }\n        window.history.replaceState(\"\", \"\", url);\n    }\n\n    /**\n     * @description - method to get fixtures listing from server/s3 bucket\n     */\n    lobbyContestList = async () => {\n        if (Constants.AppSelectedSport == null)\n            return;\n\n        let param = {\n            \"sports_id\": Constants.AppSelectedSport\n        }\n\n        this.setState({ isListLoading: true })\n        delete param.limit;\n        var api_response_data = await getLobbyPrediction(param);\n        if (api_response_data) {\n\n            this.setState({\n                ContestList: (api_response_data.match_list || []),\n                OriginalContestList: (api_response_data.match_list || []),\n                filterLeagueList: (api_response_data.match_list || []),\n                selectedFixture: (api_response_data.match_list || []).length > 0 ? api_response_data.match_list[0] : ''\n            }, () => {\n                let tmpLeagues = []\n                _Map(this.state.ContestList, (item) => {\n                    let obj = { league_id: item.league_id, league_name: item.league_name }\n                    if (tmpLeagues.filter(e => e.league_id === obj.league_id).length === 0) {\n                        tmpLeagues.push(obj)\n                    }\n                })\n                this.setState({ filterLeagueList: tmpLeagues }, () => {\n                    if (Constants.LOBBY_FILTER_ARRAY.length > 0) {\n                        this.filterLobbyResults({ league_id: Constants.LOBBY_FILTER_ARRAY[0].league_id })\n                    }\n                })\n            })\n        }\n        this.setState({ isListLoading: false })\n    }\n\n    getSportsLeagueId(sports_id, filterArray) {\n\n        let league_id = '';\n        for (let i = 0; i < filterArray.length; i++) {\n            if (filterArray[i].sports_id == sports_id) {\n                league_id = filterArray[i].league_id;\n            }\n        }\n        return league_id;\n    }\n\n    /** \n    @description hide lobby filters \n    */\n    hideFilter = () => {\n        this.setState({ showLobbyFitlers: false })\n        this.props.hideFilterData()\n    }\n\n    /** \n    @description show lobby filters \n    */\n    showFilter = () => {\n        this.setState({ showLobbyFitlers: true })\n    }\n\n    /** \n    @description Apply filters and load data accordingly\n    */\n    filterLobbyResults = (filterObj) => {\n        let league_id = (!_isEmpty(filterObj.league_id) && typeof filterObj.league_id != 'undefined') ? filterObj.league_id : \"\";\n        this.setState({ league_id: league_id }, function () {\n            this.filterFixturesLocally(league_id)\n        })\n\n        let filterArray = this.setFilterArray(league_id);\n        Constants.setValue.setFilter(filterArray);\n        this.setState({ league_id: league_id, showLobbyFitlers: false, filterArray: filterArray })\n        this.props.hideFilterData()\n    }\n\n    filterFixturesLocally(leagueIds) {\n        let allFixtures = this.state.OriginalContestList;\n        if (leagueIds == '') {\n            this.setState({ ContestList: allFixtures })\n        }\n        else {\n            let filteredList = [];\n            for (var i = 0; i < allFixtures.length; i++) {\n                if (leagueIds.includes(allFixtures[i].league_id)) {\n                    filteredList.push(allFixtures[i])\n                }\n\n            }\n\n            this.setState({ ContestList: filteredList })\n        }\n    }\n\n    setFilterArray(league_id) {\n        let { filterArray } = this.state;\n\n        let hasFilter = false;\n        if (filterArray.length > 0) {\n            for (let i = 0; i < filterArray.length; i++) {\n                if (filterArray[i].sports_id == this.state.sports_id) {\n                    hasFilter = true;\n                    filterArray[i].league_id = league_id;\n                }\n            }\n        }\n\n        if (!hasFilter && league_id != \"\") {\n            let filterObj = {\n                'sports_id': this.state.sports_id,\n                'league_id': league_id,\n            }\n            filterArray.push(filterObj);\n        }\n\n        return filterArray;\n    }\n\n    goToDFS = () => {\n        WSManager.setPickedGameType(Constants.GameType.DFS);\n        \n        let gameType = Utilities.getMasterData().sports_hub;\n        let HGLIST = _filter(gameType, (obj) => {\n            return obj.game_key == Constants.GameType.DFS;\n        })\n        let lsSport = ls.get('selectedSports');\n        if(HGLIST[0].allowed_sports.includes(lsSport)){\n            window.location.replace(\"/lobby#\" + Utilities.getSelectedSportsForUrl());\n        }\n        else{\n            let sport = HGLIST[0].allowed_sports[0];\n            ls.set('selectedSports', sport);\n            Constants.setValue.setAppSelectedSport(sport);\n            window.location.replace(\"/lobby#\" + Utilities.getSelectedSportsForUrl());\n        }\n    }\n\n    goToRewards = () => {\n        if (WSManager.loggedIn()) {\n            this.props.history.push('/rewards')\n        }else{\n            this.props.history.push(\"/signup\")\n        }\n    }\n    onSelectFixture = _debounce((fxtr) => {\n        this.setState({\n            selectedFixture: ''\n        }, () => {\n            this.setState({\n                selectedFixture: fxtr\n            })\n        })\n    }, 300)\n\n    renderPredictionFixtures = () => {\n        const {\n            ContestList,\n            isListLoading,\n            ShimmerList,\n            \n            selectedFixture\n        } = this.state;\n        \n\n        var settings = {\n            infinite: false,\n            slidesToShow: ContestList.length === 1 ? 2 : 3,\n            slidesToScroll: 1,\n            variableWidth: false,\n            initialSlide: 0,\n            className: \"center slick-prediction\" + (ContestList.length === 1 ? ' only-one' : ''),\n            centerMode: false,\n            swipeToSlide: true,\n            responsive: [\n                {\n                    breakpoint: 450,\n                    settings: {\n                        slidesToShow: ContestList.length === 1 ? 1.3 : 2,\n                    }\n                }\n            ],\n            \n        };\n        return (\n            <div >\n                <div className=\"bg-primary\" />\n                {\n                    ContestList.length > 0 && <Suspense fallback={<div />} ><ReactSlickSlider settings = {settings}>\n                        {\n                            ContestList.map((item, index) => {\n                                return (\n                                    <React.Fragment key={index} >\n                                        <PredictionFixture {...this.props} item={item} onSelect={this.onSelectFixture} isActive={selectedFixture == item} />\n                                    </React.Fragment>\n                                );\n                            })\n                        }\n                    </ReactSlickSlider></Suspense>\n                }\n                {\n                    selectedFixture.season_game_uid && <PredictionContestList {...this.props} goToDFS={this.goToDFS} goToRewards={this.goToRewards} data={{ LobyyData: selectedFixture }} />\n                }\n                <ul className=\"collection-list-wrapper pos-r\">\n                    {\n                        (ContestList.length === 0 && !isListLoading) &&\n                        <NoDataView\n                            BG_IMAGE={Images.no_data_bg_image}\n                            CENTER_IMAGE={Images.BRAND_LOGO_FULL}\n                            MESSAGE_1={AppLabels.NO_FIXTURES_MSG1}\n                            MESSAGE_2={AppLabels.NO_FIXTURES_MSG2}\n                        />\n                    }\n                    {\n                        (ContestList.length === 0 && isListLoading) &&\n                        ShimmerList.map((item, index) => {\n                            return (\n                                <React.Fragment key={index} >\n                                    {\n                                        index === 0 &&\n                                        <div className=\"shimmer-fixture\">\n                                            <Skeleton width={'95%'} height={72} />\n                                            <Skeleton width={'95%'} height={72} />\n                                        </div>\n                                    }\n                                    <div className=\"contest-list\">\n                                        <div className=\"shimmer-container\">\n                                            <div className=\"shimmer-top-view\">\n                                                <div className=\"shimmer-image predict\">\n                                                    <Skeleton width={24} height={24} />\n                                                </div>\n                                                <div className=\"shimmer-line predict\">\n                                                    <div className=\"m-v-xs\">\n                                                        <Skeleton height={8} width={'70%'} />\n                                                    </div>\n                                                    <Skeleton height={34} />\n                                                    <Skeleton height={34} />\n                                                </div>\n                                            </div>\n                                            <div className=\"shimmer-bottom-view m-0 pt-3\">\n                                                <div className=\"progress-bar-default\">\n                                                    <Skeleton height={8} width={'70%'} />\n                                                    <div className=\"d-flex justify-content-between\">\n                                                        <Skeleton height={4} width={110} />\n                                                    </div>\n                                                </div>\n                                                \n                                            </div>\n                                        </div>\n                                    </div>\n                                </React.Fragment>\n                            )\n                        })\n                    }\n                </ul>\n            </div>\n        )\n    }\n\n    render() {\n\n        const {\n            isListLoading\n        } = this.state\n\n\n        return (\n            <MyContext.Consumer>\n                {(context) => (\n                    <div className=\"web-container no-tab-two-height pb-2 prediction-wrap-v\">\n                        \n                        <div>\n                            { !isListLoading &&\n                                this.renderPredictionFixtures()\n                            }\n\n                        </div>\n                    </div>\n                )}\n            </MyContext.Consumer>\n        )\n    }\n}\n\nexport default Lobby\n","import React from 'react';\nimport { Tab, Row, Col, Nav, NavItem } from 'react-bootstrap';\nimport { MyContext } from '../../InitialSetup/MyProvider';\nimport { _debounce } from '../../Utilities/Utilities';\nimport { UpcomingPredictions, LivePredictions, CompletedPredictions } from './index';\nimport { my_contest_config } from '../../JsonFiles';\nimport { getPredictionSeason } from '../../WSHelper/WSCallings';\nimport { NoDataView } from '../CustomComponent';\nimport Skeleton from 'react-loading-skeleton';\nimport queryString from 'query-string';\nimport Images from '../../components/images';\nimport CustomHeader from '../../components/CustomHeader';\nimport WSManager from \"../../WSHelper/WSManager\";\nimport * as WSC from \"../../WSHelper/WSConstants\";\nimport * as AppLabels from \"../../helper/AppLabels\";\nimport * as Constants from \"../../helper/Constants\";\n\n/**\n  * @class MyContest\n  * @description My contest listing of current loggedin user for selected sports\n  * @author Vinfotech\n*/\nexport default class MyPredictions extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isLoaderShow: false,\n            selectedTab: (this.props.location && this.props.location.state) ? (this.props.location.state.from == 'notification' ? Constants.CONTEST_COMPLETED : Constants.CONTEST_UPCOMING) : Constants.CONTEST_UPCOMING,\n            lcList: [],\n            ucList: [],\n            ShimmerList: [1, 2, 3, 4, 5],\n            ccList: [],\n            sports_id: Constants.AppSelectedSport ? Constants.AppSelectedSport : ''\n        }\n    }\n\n    componentDidMount() {\n        let url = this.props.location.search;\n        let urlParams = queryString.parse(url);\n\n        let contest = urlParams.contest;\n        if (contest in my_contest_config.contest_url) {\n            let sports_id = Constants.AppSelectedSport;\n            this.setState({ selectedTab: my_contest_config.contest_url[contest], sports_id }, () => {\n                this.getMyCollectionsList(this.state.selectedTab)\n            })\n        }\n        else {\n            if (contest in my_contest_config.contest) {\n                this.props.history.replace(\"/my-contests?contest=\" + my_contest_config.contest[contest])\n            }\n            else {\n                this.props.history.replace(\"/my-contests?contest=\" + my_contest_config.contest[this.state.selectedTab])\n            }\n        }\n    }\n\n\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        if (WSManager.loggedIn() && this.props.history.location.pathname == '/my-contests') {\n\n            if (this.state.sports_id != nextProps.selectedSport) {\n                this.reload(nextProps);\n            }\n            else {\n                let url = this.props.location.search;\n                let urlParams = queryString.parse(url);\n\n                let contest = urlParams.contest;\n                if (contest in my_contest_config.contest_url) {\n                    let sports_id = Constants.AppSelectedSport;\n                    this.setState({ selectedTab: my_contest_config.contest_url[contest], sports_id }, () => {\n                        this.getMyCollectionsList(this.state.selectedTab)\n                    })\n                }\n                else {\n                    if (contest in my_contest_config.contest) {\n                        this.props.history.replace(\"/my-contests?contest=\" + my_contest_config.contest[contest])\n                    }\n                    else {\n                        this.props.history.replace(\"/my-contests?contest=\" + my_contest_config.contest[this.state.selectedTab])\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @description Call this function when you want to go fo lobby screen\n    */\n    goToLobby = () => {\n        this.props.history.push({ pathname: '/' })\n    }\n\n    /**\n     * @description Event of tab click (Live, Upcoming, Completed)\n     * @param selectedTab value of selected tab\n     */\n    onTabClick = _debounce((selectedTab) => {\n        if (this.state.selectedTab !== selectedTab) {\n            window.history.replaceState(\"\", \"\", \"/my-contests?contest=\" + my_contest_config.contest[selectedTab]);\n            this.setState({\n                selectedTab: selectedTab, ucList: [],\n                lcList: [],\n                ccList: []\n            }, () => {\n                this.getMyCollectionsList(this.state.selectedTab)\n            });\n        }\n    }, 300)\n\n    /**\n     * @description This function is responsible to get Live Contests response\n     * @param status selected tab (Live, Upcoming, Completed)\n     */\n    getMyCollectionsList(status) {\n        var param = {\n            \"sports_id\": Constants.AppSelectedSport,\n            \"match_status\": status,\n        }\n        this.setState({ isLoaderShow: true })\n        getPredictionSeason(param).then((responseJson) => {\n            this.setState({ isLoaderShow: false })\n\n            if (responseJson && responseJson.response_code == WSC.successCode) {\n                switch (this.state.selectedTab) {\n                    case Constants.CONTEST_UPCOMING:\n                        this.setState({ ucList: responseJson.data.match_list || [] })\n                        break;\n                    case Constants.CONTEST_LIVE:\n                        this.setState({ lcList: responseJson.data.match_list || [] })\n                        break;\n                    case Constants.CONTEST_COMPLETED:\n                        this.setState({ ccList: responseJson.data.match_list || [] })\n                        break;\n                    default:\n                        this.setState({ ucList: responseJson.data.match_list || [] })\n                }\n            }\n        })\n    }\n\n    /**\n     * @description This function is responsible to remove item from list\n     * @param status Selected Tab\n     * @param index index of item to remove from list\n     */\n    removeFromList = (status, index) => {\n        let list = this.state.ucList;\n        list.splice(index, 1);\n        this.setState({ ucList: list })\n    }\n\n    /**\n     * @description This function is called when sports changed from header\n     * @static A static function \n    */\n    reload = (nextProps) => {\n        if (window.location.pathname.startsWith(\"/my-contests\")) {\n            this.setState({ ccList: [], lcList: [], ucList: [], sports_id: nextProps.selectedSport }, () => {\n                this.getMyCollectionsList(this.state.selectedTab)\n            })\n        }\n    }\n\n    /**\n     * @description This function render all UI components. It is the React lifecycle methods that called after @see componentWillMount()\n     * @return UI Components\n    */\n    render() {\n        let MESSAGE_1 = this.state.selectedTab == Constants.CONTEST_UPCOMING ?\n            AppLabels.NO_UPCOMING_CONTEST1 : this.state.selectedTab == Constants.CONTEST_LIVE ?\n                AppLabels.NO_LIVE_CONTEST1 : AppLabels.NO_COMPLETED_CONTEST1\n\n        let MESSAGE_2 = this.state.selectedTab == Constants.CONTEST_UPCOMING ?\n            AppLabels.NO_UPCOMING_CONTEST2 : this.state.selectedTab == Constants.CONTEST_LIVE ?\n                AppLabels.NO_LIVE_CONTEST2 : AppLabels.NO_COMPLETED_CONTEST2\n\n        let HeaderOption = {\n            title: AppLabels.MY_CONTEST,\n            notification: true,\n            hideShadow: true,\n            back: true\n        };\n        return (\n            <MyContext.Consumer>\n                {(context) => (\n                    <div className=\"web-container my-contest-style tab-two-height web-container-fixed\">\n                        {\n                            !this.props.hideHeader &&\n                            <CustomHeader {...this.props} HeaderOption={HeaderOption} />\n                        }\n                        <div className={\"tabs-primary \" + (!this.props.hideHeader ? ' mt50' : '')}>\n                            <Tab.Container id='my-contest-tabs' activeKey={this.state.selectedTab} onSelect={() => console.log('clicked')} defaultActiveKey={this.state.selectedTab}>\n                                <Row className=\"clearfix\">\n                                    <Col className=\"top-fixed my-contest-tab circular-tab\" xs={12}>\n                                        <Nav>\n                                            <NavItem onClick={() => this.onTabClick(Constants.CONTEST_LIVE)} eventKey={Constants.CONTEST_LIVE} className=\"live-contest\"><span className=\"live-indicator\"></span> {AppLabels.LIVE} </NavItem>\n                                            <NavItem onClick={() => this.onTabClick(Constants.CONTEST_UPCOMING)} eventKey={Constants.CONTEST_UPCOMING}>{AppLabels.UPCOMING}</NavItem>\n                                            <NavItem onClick={() => this.onTabClick(Constants.CONTEST_COMPLETED)} eventKey={Constants.CONTEST_COMPLETED}>{AppLabels.COMPLETED}</NavItem>\n                                        </Nav>\n                                    </Col>\n                                    <Col className=\"top-tab-margin\" xs={12}>\n                                        <Tab.Content animation>\n                                            <Tab.Pane eventKey={Constants.CONTEST_LIVE}>\n                                                <LivePredictions {...this.props} lcList={this.state.lcList} />\n\n                                                {\n                                                    this.state.lcList.length == 0 && !this.state.isLoaderShow &&\n                                                    <NoDataView\n                                                        BG_IMAGE={Images.no_data_bg_image}\n                                                        CENTER_IMAGE={Images.BRAND_LOGO_FULL}\n                                                        MESSAGE_1={MESSAGE_1 + ' ' + MESSAGE_2}\n                                                        MESSAGE_2={''}\n                                                        BUTTON_TEXT={AppLabels.GO_TO_LOBBY}\n                                                        onClick={this.goToLobby}\n                                                    />\n                                                }\n\n                                                {\n                                                    this.state.lcList.length == 0 && this.state.isLoaderShow &&\n                                                    this.state.ShimmerList.map((item, index) => {\n                                                        return (\n                                                            <Shimmer key={index} />\n                                                        )\n                                                    })\n                                                }\n                                            </Tab.Pane>\n                                            <Tab.Pane eventKey={Constants.CONTEST_UPCOMING}>\n\n                                                <UpcomingPredictions {...this.props} ucList={this.state.ucList} removeFromList={this.removeFromList} />\n\n                                                {\n                                                    this.state.ucList.length == 0 && !this.state.isLoaderShow &&\n                                                    <NoDataView\n                                                        BG_IMAGE={Images.no_data_bg_image}\n                                                        CENTER_IMAGE={Images.BRAND_LOGO_FULL}\n                                                        MESSAGE_1={MESSAGE_1 + ' ' + MESSAGE_2}\n                                                        MESSAGE_2={''}\n                                                        BUTTON_TEXT={AppLabels.GO_TO_LOBBY}\n                                                        onClick={this.goToLobby}\n                                                    />\n                                                }\n\n                                                {\n                                                    this.state.ucList.length == 0 && this.state.isLoaderShow &&\n                                                    this.state.ShimmerList.map((item, index) => {\n                                                        return (\n                                                            <Shimmer key={index} />\n                                                        )\n                                                    })\n                                                }\n\n                                            </Tab.Pane>\n                                            <Tab.Pane eventKey={Constants.CONTEST_COMPLETED}>\n                                                <CompletedPredictions {...this.props} ccList={this.state.ccList} />\n\n                                                {\n                                                    this.state.ccList.length == 0 && !this.state.isLoaderShow &&\n                                                    <NoDataView\n                                                        BG_IMAGE={Images.no_data_bg_image}\n                                                        CENTER_IMAGE={Images.BRAND_LOGO_FULL}\n                                                        MESSAGE_1={MESSAGE_1 + ' ' + MESSAGE_2}\n                                                        MESSAGE_2={''}\n                                                        BUTTON_TEXT={AppLabels.GO_TO_LOBBY}\n                                                        onClick={this.goToLobby}\n                                                    />\n                                                }\n\n                                                {\n                                                    this.state.ccList.length == 0 && this.state.isLoaderShow &&\n                                                    this.state.ShimmerList.map((item, index) => {\n                                                        return (\n                                                            <Shimmer key={index} />\n                                                        )\n                                                    })\n                                                }\n\n                                            </Tab.Pane>\n                                        </Tab.Content>\n                                    </Col>\n                                </Row>\n                            </Tab.Container>\n                        </div>\n                    </div>\n                )}\n            </MyContext.Consumer>\n        )\n    }\n}\n\n/**\n  * @description Display shimmer effects while loading list\n  * @return UI components\n*/\nconst Shimmer = ({ idx }) => {\n    return (\n        <div key={idx} className=\"contest-list m border shadow-none\">\n            <div className=\"shimmer-container\">\n                <div className=\"shimmer-top-view\">\n                    <div className=\"shimmer-line\">\n                        <Skeleton height={9} />\n                        <Skeleton height={6} />\n                        <Skeleton height={4} width={100} />\n                    </div>\n                    <div className=\"shimmer-image\">\n                        <Skeleton width={30} height={30} />\n                    </div>\n                </div>\n                <div className=\"shimmer-bottom-view\">\n                    <div className=\"progress-bar-default w-100\">\n                        <Skeleton height={6} />\n                        <div className=\"d-flex justify-content-between\">\n                            <Skeleton height={4} width={60} />\n                            <Skeleton height={4} width={60} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}"],"sourceRoot":""}