{"version":3,"sources":["views/AppInstallNotification.jsx"],"names":["AppInstallNotification","props","_this","Object","_Users_mukesh_sites_projects_dup_fantasysports_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","this","_Users_mukesh_sites_projects_dup_fantasysports_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_Users_mukesh_sites_projects_dup_fantasysports_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","downloadIPhoneApp","app_url","window","open","getApk","fileUrl","filename","substring","lastIndexOf","save","document","createElement","href","target","download","evt","MouseEvent","view","bubbles","cancelable","dispatchEvent","URL","webkitURL","revokeObjectURL","dataLayer","push","_Users_mukesh_sites_projects_dup_fantasysports_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","event","user_id","WSManager","getCookie","user_name","Utilities","getCpSession","state","mTotalBalance","downloading","_this2","closeInstallNotification","iosAppDownload","getMasterData","app_version","ios","showIOS","isIOS","showAndroid","APP_DOWNLOAD_LINK_ANDROID","navigator","userAgent","toLowerCase","includes","isAndroid","isBrowser","react__WEBPACK_IMPORTED_MODULE_6___default","a","className","onClick","alt","src","Images","BRAND_LOGO","AppLabels","APPLE_STORE_LOGO","concat","React","Component"],"mappings":"kQAQqBA,cAEjB,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAOVQ,kBAAoB,SAACC,GAEjBC,OAAOC,KAAKF,EAAS,WAVNR,EA+CnBW,OAAS,SAACC,GACN,IAAIC,EAAWD,EAAQE,UAAUF,EAAQG,YAAY,KAAO,GAExDC,EAAOC,SAASC,cAAc,KAClCF,EAAKG,KAAOP,EACZI,EAAKI,OAAS,SAEdJ,EAAKK,SAAWR,EAChB,IAAIS,EAAM,IAAIC,WAAW,QAAS,CAC9BC,KAAQf,OACRgB,SAAW,EACXC,YAAc,IAElBV,EAAKW,cAAcL,IAClBb,OAAOmB,KAAOnB,OAAOoB,WAAWC,gBAAgBd,EAAKG,MAClDV,OAAOsB,WACPtB,OAAOsB,UAAUC,KAAjB/B,OAAAgC,EAAA,EAAAhC,CAAA,CACIiC,MAAS,eACTC,QAAWC,IAAUC,UAAU,OAC/BC,UAAaF,IAAUC,UAAU,QAC9BE,IAAUC,kBAjErBxC,EAAKyC,MAAQ,CACTC,cAAe,GACfC,aAAa,GAJF3C,wEAwEV,IAAA4C,EAAAzC,KAEDwC,EACAxC,KAAKsC,MADLE,YAGAE,EACA1C,KAAKJ,MADL8C,yBAEAC,EAAiBP,IAAUQ,gBAAgBC,aAAcT,IAAUQ,gBAAgBC,YAAYC,KAAY,GAE3GC,KAAUC,UAASL,EAAetC,SAClC4C,KAAeC,OAA+B5C,OAAO6C,UAAUC,UAAUC,cAAcC,SAAS,YACvD,gBAAtCH,UAAUC,UAAUC,eAAqCE,aAAaC,cAE7E,OACKT,GAAWE,EAAeQ,EAAAC,EAAA3C,cAAA,OAAK4C,UAAU,oBACtCF,EAAAC,EAAA3C,cAAA,KAAG6C,QAASlB,EAA0BiB,UAAU,oCAChDF,EAAAC,EAAA3C,cAAA,OAAK4C,UAAU,yBACXF,EAAAC,EAAA3C,cAAA,OAAK4C,UAAU,8BACXF,EAAAC,EAAA3C,cAAA,OAAK4C,UAAU,yBAAyBE,IAAI,GAAGC,IAAKC,IAAOC,aAC3DP,EAAAC,EAAA3C,cAAA,QAAM4C,UAAU,qCACZF,EAAAC,EAAA3C,cAAA,OAAK4C,UAAU,+BAA+BM,MAC9CR,EAAAC,EAAA3C,cAAA,OAAK4C,UAAU,+BAA+BM,QAGtDR,EAAAC,EAAA3C,cAAA,OAAK4C,UAAU,+BAEPZ,EACIU,EAAAC,EAAA3C,cAAA,KAAGC,MAAI,EAAC4C,QAAS,kBAAMnB,EAAKrC,kBAAkBuC,EAAetC,UAAUsD,UAAU,8BAC7EF,EAAAC,EAAA3C,cAAA,OAAK+C,IAAKC,IAAOG,iBAAkBL,IAAI,KACvCJ,EAAAC,EAAA3C,cAAA,QAAM4C,UAAU,wBAAwBM,OAG5ChB,GACAQ,EAAAC,EAAA3C,cAAA,QAAM4C,UAAS,8BAAAQ,OAAgC3B,EAAc,cAAgB,IAAMoB,QAASpB,EAAc,KAAO,kBAAMC,EAAKjC,OAAO0C,OAC/HO,EAAAC,EAAA3C,cAAA,KAAG4C,UAAU,sBACbF,EAAAC,EAAA3C,cAAA,QAAM4C,UAAU,oBAAoBM,UAMtD,UAnHkCG,IAAMC","file":"static/js/40.7f104089.chunk.js","sourcesContent":["import React from 'react';\nimport { isAndroid, isBrowser, isIOS } from 'react-device-detect';\nimport Images from '../components/images';\nimport * as AppLabels from \"../helper/AppLabels\";\nimport { APP_DOWNLOAD_LINK_ANDROID } from '../helper/Constants';\nimport { Utilities } from '../Utilities/Utilities';\nimport WSManager from '../WSHelper/WSManager';\n\nexport default class AppInstallNotification extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            mTotalBalance: \"\",\n            downloading: false\n        }\n    }\n\n    downloadIPhoneApp = (app_url) => {\n        // window.location = app_url;\n        window.open(app_url, \"_blank\")\n    }\n\n    // getApk = (fileUrl)=> {\n    //     console.log('APK Downloading...')\n    //     this.setState({\n    //         downloading: true\n    //     });\n    //     fetch(fileUrl)\n    //     .then(response => response.blob())\n    //     .then(blob => {\n    //         var filename = fileUrl.substring(fileUrl.lastIndexOf('/') + 1);\n    //         var _fileArr = filename.split('.');\n    //         var _camData = Utilities.getCpSession();\n    //         var _finalName = [_fileArr[0], _camData['campaign'], _camData['medium'], _camData['source'], _fileArr[1]].join('.')\n\n    //         var url = window.URL.createObjectURL(blob);\n    //         var a = document.createElement('a');\n    //         a.href = url;\n    //         a.download = _camData['source'] == '' ? filename : _finalName;\n    //         document.body.appendChild(a); // we need to append the element to the dom -> otherwise it will not work in firefox\n    //         a.click();\n    //         this.setState({\n    //             downloading: false\n    //         });\n    //         a.remove();  //afterwards we remove the element again\n    //         if (window.dataLayer) {\n    //             window.dataLayer.push({\n    //                 'event': 'download_apk',\n    //                 'user_id': WSManager.getCookie('_id'),\n    //                 'user_name': WSManager.getCookie('_nm'),\n    //                 ...Utilities.getCpSession()\n    //             })\n    //         }\n    //     });\n    // }\n\n    getApk = (fileUrl) => {\n        var filename = fileUrl.substring(fileUrl.lastIndexOf('/') + 1);\n\n        let save = document.createElement('a');\n        save.href = fileUrl;\n        save.target = '_blank';\n\n        save.download = filename;\n        var evt = new MouseEvent('click', {\n            'view': window,\n            'bubbles': true,\n            'cancelable': false\n        });\n        save.dispatchEvent(evt);\n        (window.URL || window.webkitURL).revokeObjectURL(save.href);\n        if (window.dataLayer) {\n            window.dataLayer.push({\n                'event': 'download_apk',\n                'user_id': WSManager.getCookie('_id'),\n                'user_name': WSManager.getCookie('_nm'),\n                ...Utilities.getCpSession()\n            })\n        }\n    }\n\n    render() {\n        const {\n            downloading\n        } = this.state;\n        const {\n            closeInstallNotification,\n        } = this.props;\n        let iosAppDownload = Utilities.getMasterData().app_version ? Utilities.getMasterData().app_version.ios || {} : {};\n\n        let showIOS = isIOS && iosAppDownload.app_url ? true : false\n        let showAndroid = (APP_DOWNLOAD_LINK_ANDROID && ((window.navigator.userAgent.toLowerCase().includes('android')\n            && navigator.userAgent.toLowerCase() !== 'android-app') || (isAndroid && isBrowser))) ? true : false\n\n        return (\n            (showIOS || showAndroid) ? <div className='app-install-root'>\n                <i onClick={closeInstallNotification} className='icon-close app-install-close-bt' />\n                <div className='app-install-container'>\n                    <div className='app-install-left-container'>\n                        <img className='app-install-brand-logo' alt=\"\" src={Images.BRAND_LOGO}></img>\n                        <span className='app-install-description-container'>\n                            <div className='app-install-description-one'>{AppLabels.Want_the_best_experience}</div>\n                            <div className='app-install-description-two'>{AppLabels.play_fantasy_on_our_Android_app}</div>\n                        </span>\n                    </div>\n                    <div className='app-install-right-container'>\n                        {\n                            showIOS ?\n                                <a href onClick={() => this.downloadIPhoneApp(iosAppDownload.app_url)} className='app-install-text-container'>\n                                    <img src={Images.APPLE_STORE_LOGO} alt=\"\" />\n                                    <span className='app-install-text ios'>{AppLabels.INSTALL}</span>\n                                </a>\n                                :\n                                showAndroid &&\n                                <span className={`app-install-text-container ${downloading ? 'downloading' : ''}`} onClick={downloading ? null : () => this.getApk(APP_DOWNLOAD_LINK_ANDROID)}>\n                                    <i className='icon-android-logo' />\n                                    <span className='app-install-text'>{AppLabels.INSTALL}</span>\n                                </span>\n                        }\n                    </div>\n                </div>\n            </div>\n                : ''\n        )\n    }\n}\n"],"sourceRoot":""}