{"version":3,"sources":["Component/PredictionModule/SharePrediction.jsx","Component/PredictionModule/ConfirmPrediction.jsx"],"names":["SharePrediction","props","_this","Object","_Users_mukesh_sites_projects_dup_fantasysports_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_Users_mukesh_sites_projects_dup_fantasysports_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_mukesh_sites_projects_dup_fantasysports_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","onSelectPredict","optionIndex","option","item","state","detail","_Map","obj","idx","prediction_option_id","setState","setTimeout","onMakePrediction","WSManager","loggedIn","showCP","goToSignup","hideCP","matchParam","match","params","pathName","Utilities","getSelectedSportsForUrl","toLowerCase","season_game_uid","prediction_master_id","history","push","pathname","joinContest","lineupPath","FixturedContest","LData","LobyyData","timerCallback","gotoLobby","successAction","length","goBack","renderFilledBar","opt","predictedPer","total_predictions","option_total_coins","total_pool","toFixed","isOptSelected","user_selected_option","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","key","onClick","className","style","width","animationDelay","HOS","back","fixture","title","hideShadow","setShareContestJoin","setPickedGameType","GameType","Pred","pmid","atob","getDetail","_this2","param","getPredictionDetail","then","responseJson","response_code","WSC","data","prediction","match_data","showToast","AL","_this3","_this$state","game_starts_in","deadline_time","betCoin","_views_Dashboard__WEBPACK_IMPORTED_MODULE_6__","Consumer","context","src","Images","CARD_BACK_IMG_DETAIL","alt","react_helmet__WEBPACK_IMPORTED_MODULE_10___default","titleTemplate","concat","MetaData","template","PRDSHARE","name","content","description","keywords","_components_CustomHeader__WEBPACK_IMPORTED_MODULE_14__","assign","HeaderOption","desc","bet_coins","league_name","league_abbr","prize_pool","IC_COIN","showCountDown","_views_CountDownTimer__WEBPACK_IMPORTED_MODULE_15__","deadlineTimeStamp","_CustomComponent__WEBPACK_IMPORTED_MODULE_9__","date","deadline_date","format","href","_ConfirmPrediction__WEBPACK_IMPORTED_MODULE_11__","preData","mShow","mHide","cpData","Component","ConfirmPrediction","onChange","e","bidAmount","target","value","timerCompletionCall","submitPrediction","_this$props$preData","updatedBal","parseInt","point_balance","option_predicted","isLoading","makePrediction","CustomHeader","updateCoinBalance","bal","getBalance","setBalance","message","PREDICTION_IC","clickEarnCoins","minCoin","getMasterData","min_bet_coins","document","addEventListener","_handleWKeyDown","getUserBalance","user_balance","setAllowedBonusPercantage","allowed_bonus_percantage","removeEventListener","_this$props$preData2","coin_bal","isBtnEnbl","react_bootstrap__WEBPACK_IMPORTED_MODULE_7__","show","onHide","dialogClassName","Body","react_loading_skeleton__WEBPACK_IMPORTED_MODULE_14___default","duration","height","_CustomComponent__WEBPACK_IMPORTED_MODULE_11__","react_bootstrap__WEBPACK_IMPORTED_MODULE_8__","controlId","floating_label_react__WEBPACK_IMPORTED_MODULE_13__","autoComplete","styles","inputStyleLeft","id","placeholder","type","maxLength"],"mappings":"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","file":"static/js/22.686a9a34.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { MyContext } from '../../views/Dashboard';\nimport { _Map, Utilities } from '../../Utilities/Utilities';\nimport { getPredictionDetail } from '../../WSHelper/WSCallings';\nimport { MomentDateComponent } from '../CustomComponent';\nimport Helmet from 'react-helmet';\nimport ConfirmPrediction from './ConfirmPrediction';\nimport MetaData from '../../helper/MetaData';\nimport WSManager from '../../WSHelper/WSManager';\nimport CustomHeader from '../../components/CustomHeader';\nimport CountdownTimer from '../../views/CountDownTimer';\nimport Images from '../../components/images';\nimport * as WSC from \"../../WSHelper/WSConstants\";\nimport * as AL from \"../../helper/AppLabels\";\nimport { AppSelectedSport, MATCH_TYPE,GameType } from '../../helper/Constants';\n\nclass SharePrediction extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            HOS: {\n                back: this.props.history.length > 2,\n                fixture: false,\n                title: '',\n                hideShadow: false\n            },\n            LData: '',\n            detail: '',\n            showCP: false\n        }\n    }\n\n    UNSAFE_componentWillMount() {\n        WSManager.setShareContestJoin(true);\n        WSManager.setPickedGameType(GameType.Pred);\n        if (this.props.match && this.props.match.params) {\n            const matchParam = this.props.match.params;\n            let pmid = atob(matchParam.prediction_master_id)\n            this.getDetail(matchParam.season_game_uid, pmid);\n        }\n    }\n\n    getDetail(season_game_uid, prediction_master_id) {\n        let param = {\n            \"season_game_uid\": season_game_uid,\n            \"prediction_master_id\": prediction_master_id\n        }\n        getPredictionDetail(param).then((responseJson) => {\n            if (responseJson.response_code === WSC.successCode) {\n                if (responseJson.data.prediction) {\n                    this.setState({\n                        detail: responseJson.data.prediction[0] || '',\n                        LData: responseJson.data.match_data,\n                        HOS: {\n                            back: this.props.history.length > 2,\n                            fixture: true,\n                            title: '',\n                            hideShadow: false\n                        }\n                    });\n                } else {\n\n                    Utilities.showToast(AL.P_EXP_MSG, 1000);\n                    setTimeout(() => {\n                        if (this.props.history.length > 2) {\n                            this.props.history.goBack();\n                        } else {\n                            this.gotoLobby()\n                        }\n                    }, 1000);\n                }\n            }\n        })\n    }\n\n    onSelectPredict = (optionIndex, option) => {\n        let item = this.state.detail;\n        _Map(item['option'], (obj, idx) => {\n            if (idx === optionIndex) {\n                obj['user_selected_option'] = option.prediction_option_id;\n                item['option_predicted'] = option\n            } else {\n                obj['user_selected_option'] = null;\n            }\n        })\n        this.setState({\n            detail: item\n        }, () => {\n            setTimeout(() => {\n                this.onMakePrediction()\n            }, 50);\n        })\n    }\n\n    onMakePrediction = () => {\n        if (WSManager.loggedIn()) {\n            this.setState({\n                showCP: true\n            })\n        } else {\n            this.goToSignup()\n        }\n    }\n\n    hideCP = () => {\n        this.setState({\n            showCP: false\n        })\n    }\n\n    goToSignup = () => {\n        const matchParam = this.props.match.params;\n        let pathName = '/' + Utilities.getSelectedSportsForUrl().toLowerCase() + \"/prediction-details/\" + matchParam.season_game_uid + '/' + matchParam.prediction_master_id\n        this.props.history.push({\n            pathname: '/signup', state: {\n                joinContest: true,\n                lineupPath: pathName,\n                FixturedContest: this.state.LData,\n                LobyyData: this.state.LData\n            }\n        })\n    }\n\n    timerCallback = () => {\n\n    }\n\n    gotoLobby = () => {\n        this.props.history.push(\"/lobby#\" + Utilities.getSelectedSportsForUrl())\n    }\n\n    successAction = () => {\n        setTimeout(() => {\n            if (this.props.history.length > 2) {\n                this.props.history.goBack();\n            } else {\n                this.gotoLobby()\n            }\n        }, 1500);\n    }\n\n    renderFilledBar = (opt, idx) => {\n        const { detail } = this.state;\n        let predictedPer = detail.total_predictions === 0 ? 0 : ((opt.option_total_coins / detail.total_pool) * 100).toFixed(2);\n        let isOptSelected = (opt.user_selected_option === opt.prediction_option_id);\n        return (\n            <div key={idx} onClick={() => this.onSelectPredict(idx, opt)} className={\"prediction-bar\" + (isOptSelected ? ' selected' : '')}>\n                <div className=\"filled-bar\" style={{ width: predictedPer + '%', animationDelay: (0.05 * idx) + 's' }} />\n                <p className=\"answer\">{opt.option}</p>\n                <div className=\"corrected-ans\">\n                    <p>{predictedPer > 0 ? (predictedPer + '%') : ''}</p>\n                </div>\n            </div>\n        )\n    }\n\n\n    render() {\n        const { HOS, LData, detail, showCP } = this.state;\n        let game_starts_in = detail.deadline_time / 1000;\n        let betCoin = 0;\n        return (\n            <MyContext.Consumer>\n                {(context) => (\n                    <div className=\"web-container prediction-detail-wrap\">\n                        <img className=\"bg-c-img\" src={Images.CARD_BACK_IMG_DETAIL} alt=\"\" />\n                        <Helmet titleTemplate={`${MetaData.template} | %s`}>\n                            <title>{MetaData.PRDSHARE.title}</title>\n                            <meta name=\"description\" content={MetaData.PRDSHARE.description} />\n                            <meta name=\"keywords\" content={MetaData.PRDSHARE.keywords}></meta>\n                        </Helmet>\n                        <CustomHeader {...this.props} LobyyData={LData} HeaderOption={HOS} />\n                        {\n                            detail !== '' && <div className=\"pred-detail-v\">\n                                <p className=\"questions\">{detail.desc}</p>\n                                {\n                                    _Map(detail.option, (opt, idx) => {\n                                        betCoin = (opt.user_selected_option === opt.prediction_option_id) ? opt.bet_coins : betCoin\n                                        return this.renderFilledBar(opt, idx);\n                                    })\n                                }\n                                <div className=\"footer-vc\">\n                                    <div className=\"match-timing league-n\">\n                                        <div className=\"leag-name\">{LData.league_name || LData.league_abbr}</div>\n                                        {/* {\n                                            AppSelectedSport === '7' && <div> - {MATCH_TYPE[LData.format]}</div>\n                                        } */}\n                                    </div>\n                                    <div>\n                                        {\n                                            detail.prize_pool > 0 && <p className=\"price-pool\"><span className=\"price-pool-first\">{AL.WIN}</span><img src={Images.IC_COIN} alt=\"\" />{detail.prize_pool}</p>\n                                        }\n                                        {\n                                            detail.prize_pool === 0 && <p className=\"price-pool-first\">{AL.BE_FIRST}</p>\n                                        }\n                                        <div className=\"date-v\">\n                                            <div className=\"match-timing\">\n                                                {\n                                                    Utilities.showCountDown({ game_starts_in: game_starts_in }) ?\n                                                        <span className=\"d-flex\">\n                                                            <div className=\"countdown time-line\">\n                                                                {\n                                                                    game_starts_in && <CountdownTimer timerCallback={this.timerCallback} deadlineTimeStamp={game_starts_in} />\n                                                                }\n                                                            </div>\n                                                            {AL.REMAINING}\n                                                        </span> :\n                                                        <span> <MomentDateComponent data={{ date: detail.deadline_date, format: \"D MMM - hh:mm A \" }} /></span>\n                                                }\n                                            </div>\n\n                                        </div>\n                                    </div>\n                                    <div className=\"lobby-go\">\n                                        \n                                        {this.props.history.length <= 2 && <a href onClick={this.gotoLobby}>{AL.GO_TO_LOBBY}</a>}\n                                    </div>\n                                </div>\n                            </div>\n                        }\n                        {\n                            showCP && <ConfirmPrediction {...this.props} preData={{\n                                mShow: showCP,\n                                mHide: this.hideCP,\n                                cpData: detail,\n                                successAction: this.successAction\n                            }} />\n                        }\n                    </div>\n                )}\n            </MyContext.Consumer>\n        )\n    }\n}\n\nexport default SharePrediction;\n","import React, { Component } from 'react';\nimport { MyContext } from '../../views/Dashboard';\nimport { Modal, FormGroup } from 'react-bootstrap';\nimport { inputStyleLeft } from '../../helper/input-style';\nimport { makePrediction, getUserBalance } from '../../WSHelper/WSCallings';\nimport { MomentDateComponent } from '../CustomComponent';\nimport { Utilities, _handleWKeyDown } from '../../Utilities/Utilities';\nimport FloatingLabel from 'floating-label-react';\nimport Skeleton from 'react-loading-skeleton';\nimport CountdownTimer from '../../views/CountDownTimer';\nimport WSManager from '../../WSHelper/WSManager';\nimport Images from '../../components/images';\nimport * as WSC from \"../../WSHelper/WSConstants\";\nimport * as AL from \"../../helper/AppLabels\";\nimport CustomHeader from '../../components/CustomHeader';\n\nclass ConfirmPrediction extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            bidAmount: '',\n            minCoin: parseInt(Utilities.getMasterData().min_bet_coins || 10),\n            isLoading: false,\n            point_balance: WSManager.getBalance().point_balance || 0\n        }\n    }\n\n    UNSAFE_componentWillMount() {\n        document.addEventListener(\"keydown\", _handleWKeyDown, false);\n        getUserBalance().then((responseJson) => {\n            if (responseJson.response_code === WSC.successCode) {\n                this.setState({\n                    point_balance: responseJson.data.user_balance.point_balance || 0\n                })\n                WSManager.setAllowedBonusPercantage(responseJson.data.allowed_bonus_percantage)\n                WSManager.setBalance(responseJson.data.user_balance);\n            }\n        })\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener(\"keydown\", _handleWKeyDown);\n    }\n\n    onChange = (e) => {\n        this.setState({ bidAmount: e.target.value })\n    }\n\n    timerCompletionCall = () => {\n        const { mHide } = this.props.preData;\n        mHide();\n    }\n\n    submitPrediction = () => {\n        const { mHide, cpData, successAction } = this.props.preData;\n        let preBal = parseInt(this.state.point_balance);\n        let updatedBal = preBal - parseInt(this.state.bidAmount);\n        let param = {\n            \"prediction_master_id\": cpData.prediction_master_id,\n            \"prediction_option_id\": cpData.option_predicted.prediction_option_id,\n            \"bet_coins\": parseInt(this.state.bidAmount)\n        }\n        this.setState({ isLoading: true })\n        makePrediction(param).then((responseJson) => {\n            if (responseJson.response_code === WSC.successCode) {\n                CustomHeader.updateCoinBalance(updatedBal);\n                let bal = WSManager.getBalance();\n                bal[\"point_balance\"] = updatedBal;\n                WSManager.setBalance(bal);\n                Utilities.showToast(responseJson.message, 3000, Images.PREDICTION_IC);\n                successAction(cpData);\n                this.setState({\n                    isLoading: false\n                }, () => {\n                    mHide();\n                });\n            } else {\n                this.setState({ isLoading: false })\n            }\n        })\n    }\n\n    clickEarnCoins = () => {\n        if (WSManager.loggedIn()) {\n            this.props.history.push(\"/earn-coins\")\n        } else {\n            this.goToSignup()\n        }\n    }\n\n    goToSignup = () => {\n        this.props.history.push(\"/signup\")\n    }\n\n    render() {\n\n        const { mShow, mHide, cpData } = this.props.preData;\n        const { bidAmount, minCoin, isLoading, point_balance } = this.state;\n\n        let game_starts_in = cpData.deadline_time / 1000;\n        let coin_bal = parseInt(point_balance || 0);\n        let isBtnEnbl = (bidAmount >= minCoin && bidAmount <= coin_bal);\n\n        return (\n            <MyContext.Consumer>\n                {(context) => (\n                    <Modal\n                        show={mShow}\n                        onHide={mHide}\n                        dialogClassName=\"modal-pred-confirm\"\n                        className=\"center-modal\"\n                    >\n                        <Modal.Body>\n                            <div className=\"container\">\n                                <p className=\"title-pp\">{AL.PLACE_PRE}</p>\n                                <p className=\"desc-pp\">{AL.PRE_MSG}</p>\n                                <div className=\"your-pre\">\n                                    <div className=\"shimmer-v\"><Skeleton duration={2} width={'100%'} height={'100%'} /></div>\n\n                                    <span>{AL.YOUR_PRE}</span>\n                                    <span className=\"option\">{cpData.option_predicted.option}</span>\n                                    {\n                                        <div className=\"match-timing\">\n                                            {\n                                                Utilities.showCountDown({ game_starts_in: game_starts_in })\n                                                    ?\n                                                    <div className=\"countdown time-line\">\n                                                        {\n                                                            game_starts_in && <CountdownTimer\n                                                                timerCallback={this.timerCompletionCall}\n                                                                deadlineTimeStamp={game_starts_in} />\n                                                        }\n                                                    </div>\n                                                    :\n                                                    <span>\n                                                        <MomentDateComponent data={{ date: cpData.deadline_date, format: \"D MMM - hh:mm A \" }} />\n                                                    </span>\n                                            }\n                                        </div>\n                                    }\n                                </div>\n                                <FormGroup\n                                    className='input-label-center input-transparent'\n                                    controlId=\"formBasicText\"\n                                >\n                                    <FloatingLabel\n                                        autoComplete='off'\n                                        styles={inputStyleLeft}\n                                        id='amont'\n                                        name='amont'\n                                        value={bidAmount}\n                                        placeholder={`${AL.ENTER_COINS} (${AL.MIN} ${minCoin} ${AL.coins})`}\n                                        type='text'\n                                        maxLength={5}\n                                        onChange={this.onChange}\n                                    />\n                                </FormGroup>\n                                <div className=\"available-bal\"><span>{AL.AVAIL_BAL}</span><span className=\"bal\"><img src={Images.IC_COIN} alt=\"\" />{coin_bal}</span></div>\n                                {\n                                    bidAmount > coin_bal && <span className=\"no-coins-msg\">\n                                        {AL.NO_COINS_MSG}<a href onClick={this.clickEarnCoins}>{AL.EARN_COINS.toLowerCase()}</a>\n                                    </span>\n                                }\n                            </div>\n                            <button onClick={this.submitPrediction} className={\"btn btn-m-p\" + ((isBtnEnbl && !isLoading) ? '' : ' disabled')}>{AL.MAKE_PRE}</button>\n\n                        </Modal.Body>\n                    </Modal>\n                )}\n            </MyContext.Consumer>\n        )\n    }\n}\n\nexport default ConfirmPrediction;"],"sourceRoot":""}