{"version":3,"sources":["Component/CoinsModule/EarnCoins.jsx"],"names":["globalHELIST","showToolTip","gThis","EarnCoins","props","_this","Object","_Users_mukesh_sites_projects_dup_fantasysports_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_Users_mukesh_sites_projects_dup_fantasysports_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_mukesh_sites_projects_dup_fantasysports_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","callApiEarnCoinsList","setState","ISLOAD","getEarnCoinsList","then","responseJson","getUserBal","response_code","WSC","HELIST","data","earn_coins","getUserBalance","WSManager","setAllowedBonusPercantage","allowed_bonus_percantage","setBalance","user_balance","btnAction","value","module_key","CustomHeader","showDailyStreak","history","push","pathname","setPickedGameType","GameType","Pred","Utilities","getSelectedSportsForUrl","gotoCoinTransaction","state","tab","AL","gotoRewards","renderListItem","item","isSport","is_allSport","getAppLang","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","Fragment","game_key","OpenPred","OpenPredLead","Pickem","key","className","href","onClick","src","Images","PICK_EARNCOIN","alt","PREDICT_EARNCOIN","getMasterData","a_spin","label","description","button_text","getS3URL","image_url","Shimmer","index","react_loading_skeleton__WEBPACK_IMPORTED_MODULE_7___default","height","width","PRFLD","getProfile","AllSports","sports_hub","toolTip","blinkAnim","_this2","handleAppBackManage","setTimeout","length","_this3","_this$state","userCoinBalnc","point_balance","HeaderOption","title","notification","hideShadow","filter","back","_views_Dashboard__WEBPACK_IMPORTED_MODULE_8__","Consumer","context","isFooterTab","_components_CustomHeader__WEBPACK_IMPORTED_MODULE_11__","assign","react_helmet__WEBPACK_IMPORTED_MODULE_6__","titleTemplate","concat","MD","template","ERNC","name","content","keywords","image","getThumbURL","DEFAULT_AVATAR","user_name","AllowRedeem","style","animationDelay","IC_COIN","kFormatter","_Map","idx","map","Component","updateBalance"],"mappings":"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","file":"static/js/24.ede39f0c.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Helmet } from \"react-helmet\";\nimport Skeleton from 'react-loading-skeleton';\nimport { MyContext } from '../../views/Dashboard';\nimport { Utilities, _Map, isFooterTab } from '../../Utilities/Utilities';\nimport { getEarnCoinsList, getUserBalance } from '../../WSHelper/WSCallings';\nimport CustomHeader from '../../components/CustomHeader';\nimport WSManager from \"../../WSHelper/WSManager\";\nimport MD from \"../../helper/MetaData\";\nimport Images from '../../components/images';\nimport * as WSC from \"../../WSHelper/WSConstants\";\nimport * as AL from \"../../helper/AppLabels\";\nimport { GameType, AllowRedeem } from '../../helper/Constants';\n\nvar globalHELIST = [];\nvar showToolTip = true;\nvar gThis = null;\n\nclass EarnCoins extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            PRFLD: WSManager.getProfile(),\n            AllSports: Utilities.getMasterData().sports_hub,\n            HELIST: [],\n            ISLOAD: false,\n            user_balance: '',\n            toolTip: showToolTip,\n            blinkAnim: showToolTip\n        }\n    }\n\n    componentDidMount() {\n        Utilities.handleAppBackManage('EarnCoins')\n          setTimeout(() => {\n            this.setState({ toolTip: false });\n            setTimeout(() => {\n                this.setState({ blinkAnim: false });\n            }, 7000);\n            showToolTip = false;\n        }, 4000);\n\n        if (globalHELIST.length > 0) {\n            this.setState({\n                HELIST: globalHELIST\n            })\n            this.getUserBal();\n        } else {\n            this.callApiEarnCoinsList();\n        }\n    }\n\n    componentWillUnmount() {\n        gThis = null;\n    }\n\n\n    callApiEarnCoinsList = () => {\n        let param = {}\n        this.setState({ ISLOAD: true })\n        getEarnCoinsList(param).then((responseJson) => {\n            this.getUserBal();\n            this.setState({ ISLOAD: false })\n            if (responseJson.response_code === WSC.successCode) {\n                this.setState({\n                    HELIST: responseJson.data.earn_coins || []\n                })\n                globalHELIST = (responseJson.data.earn_coins || [])\n            }\n        })\n    }\n\n    getUserBal = () => {\n        getUserBalance().then((responseJson) => {\n            if (responseJson && responseJson.response_code == WSC.successCode) {\n                WSManager.setAllowedBonusPercantage(responseJson.data.allowed_bonus_percantage)\n                WSManager.setBalance(responseJson.data.user_balance);\n                this.setState({ user_balance: responseJson.data.user_balance });\n            }\n        })\n    }\n\n    btnAction = (value) => {\n        if (value.module_key === 'daily_streak_bonus' && CustomHeader.showDailyStreak) {\n            CustomHeader.showDailyStreak();\n        } else if (value.module_key === 'refer-a-friend') {\n            this.props.history.push({ pathname: \"/refer-friend\" });\n        } else if (value.module_key === 'feedback') {\n            this.props.history.push({ pathname: \"/feedback\" });\n        } else if (value.module_key === 'prediction') {\n            WSManager.setPickedGameType(GameType.Pred);\n            this.props.history.push(\"/lobby#\" + Utilities.getSelectedSportsForUrl())\n        }\n    }\n\n    gotoCoinTransaction = () => {\n        this.props.history.push({ pathname: '/transactions', state: { tab: AL.COINS } })\n    }\n    gotoRewards = () => {\n        this.props.history.push({ pathname: '/rewards', state: { tab: AL.COINS } })\n    }\n\n    static updateBalance = () => {\n        if (gThis) {\n            gThis.getUserBal();\n        }\n    }\n\n\n    renderListItem = (item,isSport) => {\n        let is_allSport = isSport;\n        let data = (item[WSManager.getAppLang() || 'en']) || '';\n        return (\n            <React.Fragment>\n                {\n                    is_allSport ?\n                    <React.Fragment>\n                        {\n                            ( item.game_key == GameType.OpenPred || item.game_key == GameType.OpenPredLead || item.game_key == GameType.Pickem) &&\n                            <li key={item.game_key}>\n                                <div>\n                                    <p className=\"list-t\">{item[WSManager.getAppLang() + '_t']}</p>\n                                    <p className=\"list-d\">{item[WSManager.getAppLang() + '_d']}</p>\n                                    <a href className=\"list-btn\" onClick={() => this.btnAction(item)} >\n                                        {(item.game_key == GameType.Pickem || item.game_key == GameType.OpenPred || item.game_key == GameType.OpenPredLead) ? AL.PREDICT : (item.game_key == GameType.Pickem) ? AL.PICK : AL.PLAY_NOW }\n                                    </a>\n                                </div>\n                                {\n                                    (item.game_key == GameType.Pickem) ?\n                                    <img src={Images.PICK_EARNCOIN} alt=\"\" />\n                                    :\n                                    <img src={Images.PREDICT_EARNCOIN} alt=\"\" />\n                                }\n                            </li>\n                        }\n                    </React.Fragment>\n                    :\n                    (item.module_key === \"daily_streak_bonus\" && Utilities.getMasterData().a_spin == 1) ? '' : <li key={item.module_key}>\n                        <div>\n                            <p className=\"list-t\">{data.label}</p>\n                            <p className=\"list-d\">{item.module_key == 'refer-a-friend' ? AL.GET_EXCITING_REWARDS_ON_EVERY_FRIEND_SIGNUP : data.description}</p>\n                            <a href className=\"list-btn\" onClick={() => this.btnAction(item)} >{data.button_text}</a>\n                        </div>\n                        <img src={Utilities.getS3URL(item.image_url)} alt=\"\" />\n                    </li>\n                }\n            </React.Fragment>\n        )\n    }\n\n    Shimmer = (index) => {\n        return (\n            <div key={index} className=\"contest-list\">\n                <div className=\"shimmer-container\">\n                    <div className=\"shimmer-top-view\">\n                        <div className=\"shimmer-line\">\n                            <Skeleton height={9} width={'80%'} />\n                            <Skeleton height={6} width={'100%'} />\n                            <Skeleton height={6} width={100} />\n                        </div>\n                        <div className=\"shimmer-bottom-view\">\n                            <div className=\"shimmer-buttin w-25\">\n                                <Skeleton height={30} width={160} />\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"shimmer-image\">\n                        <Skeleton width={70} height={70} />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n    render() {\n        const { PRFLD, HELIST, ISLOAD, user_balance, toolTip, blinkAnim,AllSports } = this.state;\n        let userCoinBalnc = (user_balance.point_balance || 0);\n        gThis = this;\n\n        let HeaderOption = {\n            title: AL.HOW_TO_EARN,\n            notification: true,\n            hideShadow: true,\n            filter: false,\n            back: true\n        }\n\n        return (\n            <MyContext.Consumer>\n                {(context) => (\n                    <div className={\"web-container how-earn-coins \" + (isFooterTab('earn-coins') ? 'mh-100-per p-0' : '')}>\n                        {\n                            !isFooterTab('earn-coins') &&\n                            <CustomHeader {...this.props} HeaderOption={HeaderOption} />\n                        }\n                        <Helmet titleTemplate={`${MD.template} | %s`}>\n                            <title>{MD.ERNC.title}</title>\n                            <meta name=\"description\" content={MD.ERNC.description} />\n                            <meta name=\"keywords\" content={MD.ERNC.keywords}></meta>\n                        </Helmet>\n                        <div className=\"top-profile\">\n                            {\n                                (user_balance != '' && toolTip) &&\n                                <div className=\"coin-tooltip\"><div className=\"inner-text\">{AL.SEE_COIN_TRANS}</div></div>\n                            }\n                            <div className=\"profile-v\">\n                                <img src={PRFLD.image ? Utilities.getThumbURL(PRFLD.image) : Images.DEFAULT_AVATAR} alt=\"\" />\n                                <div className=\"v-username\">{PRFLD.user_name}</div>\n                            </div>\n                            {\n                                user_balance != '' && <div className=\"coins-v\">\n                                    {userCoinBalnc > 0 && AllowRedeem && <span onClick={this.gotoRewards} className=\"redeem\">{AL.REDEEM}</span>}\n                                    <div onClick={this.gotoCoinTransaction} className={\"c-balance \" + (blinkAnim ? 'show-tooltip' : '')}>\n                                        <div className=\"pulse-ring\" style={{ animationDelay: \"-2s\" }}></div>\n                                        <div className=\"pulse-ring\" style={{ animationDelay: \"-1s\" }}></div>\n                                        <div className=\"pulse-ring\" style={{ animationDelay: \"-0s\" }}></div>\n                                        <img className=\"coin-img\" src={Images.IC_COIN} alt=\"\" /><span>{Utilities.kFormatter(userCoinBalnc)}</span>\n                                    </div>\n                                </div>\n                            }\n                        </div>\n                        <ul className=\"list-type\">\n                            {\n                                _Map(HELIST, (item, idx) => {\n                                    return this.renderListItem(item)\n                                })\n                            }\n                            {\n                                HELIST.length === 0 && ISLOAD &&\n                                [1, 1, 1, 1, 1, 1].map((item, index) => {\n                                    return this.Shimmer(index)\n                                })\n                            }\n                            {\n                                _Map(AllSports, (item, idx) => {\n                                    return this.renderListItem(item,true)\n                                })\n                            }\n                        </ul>\n                    </div>\n                )\n                }\n            </MyContext.Consumer>\n        )\n    }\n}\n\nexport default EarnCoins;\n"],"sourceRoot":""}