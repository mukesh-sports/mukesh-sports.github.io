{"version":3,"sources":["Component/CoinsModule/FeedbackQA.jsx"],"names":["FeedbackQA","props","_this","Object","_Users_mukesh_sites_projects_dup_fantasysports_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_Users_mukesh_sites_projects_dup_fantasysports_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_mukesh_sites_projects_dup_fantasysports_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","callApiFBQAList","setState","ISLOAD","getFeedbackQA","then","responseJson","response_code","WSC","listdata","data","questions","FDBLIST","btnAction","value","idx","answer","length","state","isApiCalling","param","feedback_question_id","sentIndex","saveFeedback","tmpArray","onChangeText","e","target","index","id","renderListItem","item","submitted","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","key","Fragment","className","AL","src","Images","IC_COIN","alt","coins","COINS_BACK_STRIPE","question","onChange","placeholder","rows","name","href","onClick","FB_THUMB","Shimmer","react_loading_skeleton__WEBPACK_IMPORTED_MODULE_11___default","height","width","_this2","_this$state","HeaderOption","back","title","_views_Dashboard__WEBPACK_IMPORTED_MODULE_6__","Consumer","context","react_helmet__WEBPACK_IMPORTED_MODULE_7__","titleTemplate","concat","MD","template","ECFEEDBAK","content","description","keywords","_components_CustomHeader__WEBPACK_IMPORTED_MODULE_12__","assign","_Map","_CustomComponent__WEBPACK_IMPORTED_MODULE_10__","BG_IMAGE","no_data_bg_image","CENTER_IMAGE","BRAND_LOGO_FULL","MESSAGE_1","CLASS","map","Component"],"mappings":"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","file":"static/js/25.86067029.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { MyContext } from '../../views/Dashboard';\nimport { Helmet } from \"react-helmet\";\nimport { _Map } from '../../Utilities/Utilities';\nimport { getFeedbackQA, saveFeedback } from '../../WSHelper/WSCallings';\nimport { NoDataView } from '../CustomComponent';\nimport Skeleton from 'react-loading-skeleton';\nimport CustomHeader from '../../components/CustomHeader';\nimport MD from \"../../helper/MetaData\";\nimport Images from '../../components/images';\nimport * as WSC from \"../../WSHelper/WSConstants\";\nimport * as AL from \"../../helper/AppLabels\";\n\nclass FeedbackQA extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            FDBLIST: [],\n            ISLOAD: false,\n            isApiCalling: false,\n            sentIndex: -1\n        }\n    }\n\n    componentDidMount() {\n        this.callApiFBQAList();\n    }\n\n    callApiFBQAList = () => {\n        let param = {}\n        this.setState({ ISLOAD: true })\n        getFeedbackQA(param).then((responseJson) => {\n            this.setState({ ISLOAD: false })\n            if (responseJson.response_code === WSC.successCode) {\n                let listdata = responseJson.data.questions || [];\n                this.setState({\n                    FDBLIST: listdata\n                })\n            }\n        })\n    }\n\n    btnAction = (value, idx) => {\n        if (value.answer && value.answer.length > 1 && !this.state.isApiCalling) {\n            let param = {\n                feedback_question_id: value.feedback_question_id['$oid'],\n                answer: value.answer\n            }\n            this.setState({ isApiCalling: true, sentIndex: idx });\n            saveFeedback(param).then((responseJson) => {\n                if (responseJson.response_code === WSC.successCode) {\n                    let tmpArray = this.state.FDBLIST;\n                    tmpArray[idx]['submitted'] = true;\n                    this.setState({ FDBLIST: tmpArray })\n                }\n                this.setState({ isApiCalling: false });\n            })\n        }\n    }\n\n    onChangeText = (e) => {\n        let value = e.target.value;\n        let index = e.target.id;\n        let tmpArray = this.state.FDBLIST;\n        tmpArray[index]['answer'] = value;\n        this.setState({ FDBLIST: tmpArray });\n    }\n\n    renderListItem = (item, idx) => {\n        let submitted = item.submitted;\n        return (\n            <li key={idx} >\n                {\n                    !submitted && <React.Fragment>\n                        <div className=\"top-price\">\n                            <span>{AL.GET}<img src={Images.IC_COIN} alt=\"\" />{item.coins}</span>\n                            <img className=\"img-shape\" src={Images.COINS_BACK_STRIPE} alt=\"\" />\n                        </div>\n                        <p className=\"feedback-text mb30\" >{AL.FEEDBACK}</p>\n                        <div className=\"q-view\">\n                            <p className=\"question\" >{item.question}</p>\n                            <textarea onChange={this.onChangeText} placeholder=\"Enter your suggestion\" rows=\"4\" name=\"answer\" id={idx} className=\"ans-input\"></textarea>\n                            <a href className=\"send-btn\" id={\"send-btn\" + idx} onClick={() => this.btnAction(item, idx)} >\n                                <i className={\"icon-send\" + (this.state.sentIndex === idx ? ' animate' : '')} />\n                            </a>\n                        </div>\n                    </React.Fragment>\n                }\n                {\n                    submitted && <div className=\"submited-v\">\n                        <p className=\"feedback-text m-0 text-left\" >{AL.FEEDBACK}</p>\n                        <img src={Images.FB_THUMB} alt=\"\" className=\"thumb-img\" />\n                        <p className=\"coin-text\"><img src={Images.IC_COIN} alt=\"\" /> +{item.coins} {AL.COINS}</p>\n                    </div>\n                }\n                <p className={\"hint-text\" + (submitted ? \" m-0\" : '')}>{AL.FB_HINT}</p>\n            </li>\n        )\n    }\n\n    Shimmer = (index) => {\n        return (\n            <div key={index} className=\"contest-list border\">\n                <div className=\"shimmer-container\">\n                    <Skeleton height={9} width={'30%'} />\n                    <div className=\"shimmer-line m-t-20 m-b-sm\">\n                        <Skeleton height={6} width={'95%'} />\n                        <Skeleton height={6} width={'70%'} />\n                    </div>\n                    <div className=\"shimmer-image m-b\">\n                        <Skeleton width={\"100%\"} height={80} />\n                    </div>\n                    <Skeleton height={6} width={\"80%\"} />\n                </div>\n            </div >\n        )\n    }\n\n    render() {\n        const { FDBLIST, ISLOAD } = this.state;\n\n        const HeaderOption = {\n            back: true,\n            title: AL.FEEDBACK,\n        }\n\n        return (\n            <MyContext.Consumer>\n                {(context) => (\n                    <div className=\"web-container feedback-c\">\n                        <Helmet titleTemplate={`${MD.template} | %s`}>\n                            <title>{MD.ECFEEDBAK.title}</title>\n                            <meta name=\"description\" content={MD.ECFEEDBAK.description} />\n                            <meta name=\"keywords\" content={MD.ECFEEDBAK.keywords}></meta>\n                        </Helmet>\n                        <CustomHeader {...this.props} HeaderOption={HeaderOption} />\n                        <ul className=\"list-type\">\n                            {\n                                _Map(FDBLIST, (item, idx) => {\n                                    return this.renderListItem(item, idx)\n                                })\n                            }\n                            {\n                                FDBLIST.length === 0 && !ISLOAD && <NoDataView\n                                    BG_IMAGE={Images.no_data_bg_image}\n                                    CENTER_IMAGE={Images.BRAND_LOGO_FULL}\n                                    MESSAGE_1={AL.NO_DATA_AVAILABLE}\n                                    CLASS='pt40-per'\n                                />\n                            }\n                            {\n                                FDBLIST.length === 0 && ISLOAD &&\n                                [1, 1, 1, 1, 1, 1].map((item, index) => {\n                                    return this.Shimmer(index)\n                                })\n                            }\n                        </ul>\n                    </div>\n                )}\n            </MyContext.Consumer>\n        )\n    }\n}\n\nexport default FeedbackQA;"],"sourceRoot":""}