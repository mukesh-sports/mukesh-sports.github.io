{"version":3,"sources":["../node_modules/engine.io-parser/lib/browser.js","../node_modules/socket.io-client/node_modules/debug/browser.js","../node_modules/component-inherit/index.js","../node_modules/engine.io-client/node_modules/debug/browser.js","../node_modules/socket.io-parser/index.js","../node_modules/engine.io-client/lib/xmlhttprequest.js","../node_modules/engine.io-client/lib/transport.js","../node_modules/engine.io-client/node_modules/component-emitter/index.js","../node_modules/parseqs/index.js","../node_modules/parseuri/index.js","../node_modules/socket.io-parser/is-buffer.js","../node_modules/socket.io-client/lib/manager.js","../node_modules/engine.io-client/lib/transports/index.js","../node_modules/engine.io-client/lib/transports/polling.js","../node_modules/has-binary/index.js","../node_modules/yeast/index.js","../node_modules/indexof/index.js","../node_modules/socket.io-client/lib/socket.js","../node_modules/socket.io-client/node_modules/component-emitter/index.js","../node_modules/socket.io-client/lib/on.js","../node_modules/component-bind/index.js","../node_modules/socket.io-client/lib/index.js","../node_modules/socket.io-client/lib/url.js","../node_modules/socket.io-client/node_modules/debug/debug.js","../node_modules/socket.io-client/node_modules/ms/index.js","../node_modules/socket.io-parser/node_modules/debug/browser.js","../node_modules/socket.io-parser/node_modules/debug/debug.js","../node_modules/socket.io-parser/node_modules/ms/index.js","../node_modules/socket.io-parser/node_modules/json3/lib/json3.js","../node_modules/socket.io-parser/node_modules/component-emitter/index.js","../node_modules/socket.io-parser/binary.js","../node_modules/socket.io-parser/node_modules/isarray/index.js","../node_modules/engine.io-client/index.js","../node_modules/engine.io-client/lib/index.js","../node_modules/engine.io-client/lib/socket.js","../node_modules/has-cors/index.js","../node_modules/engine.io-client/lib/transports/polling-xhr.js","../node_modules/engine.io-parser/lib/keys.js","../node_modules/has-binary/node_modules/isarray/index.js","../node_modules/arraybuffer.slice/index.js","../node_modules/after/index.js","../node_modules/wtf-8/wtf-8.js","../node_modules/base64-arraybuffer/lib/base64-arraybuffer.js","../node_modules/blob/index.js","../node_modules/engine.io-client/node_modules/debug/debug.js","../node_modules/engine.io-client/node_modules/ms/index.js","../node_modules/engine.io-client/lib/transports/polling-jsonp.js","../node_modules/engine.io-client/lib/transports/websocket.js","../node_modules/parsejson/index.js","../node_modules/to-array/index.js","../node_modules/backo2/index.js"],"names":["global","base64encoder","keys","__webpack_require__","hasBinary","sliceBuffer","after","utf8","ArrayBuffer","isAndroid","navigator","test","userAgent","isPhantomJS","dontSendBlobs","exports","protocol","packets","open","close","ping","pong","message","upgrade","noop","packetslist","err","type","data","Blob","map","ary","each","done","result","Array","length","next","eachWithIndex","i","el","cb","error","msg","encodePacket","packet","supportsBinary","utf8encode","callback","undefined","buffer","encodeBase64Packet","contentArray","Uint8Array","resultBuffer","byteLength","encodeArrayBuffer","fr","FileReader","onload","readAsArrayBuffer","encodeBlobAsArrayBuffer","blob","encodeBlob","base64","encodeBase64Object","encoded","encode","String","b64data","b64","split","readAsDataURL","fromCharCode","apply","e","typed","basic","btoa","decodePacket","binaryType","utf8decode","charAt","decodeBase64Packet","substr","decode","tryDecode","Number","substring","rest","encodePayload","isBinary","encodePayloadAsBlob","encodePayloadAsArrayBuffer","doneCallback","setLengthHeader","results","join","decodePayload","decodePayloadAsBinary","n","l","chr","encodedPackets","totalLength","reduce","acc","p","len","toString","resultArray","bufferIndex","forEach","isString","ab","view","charCodeAt","lenStr","parseInt","binaryIdentifier","size","lengthAry","bufferTail","buffers","numberTooLong","tailArray","msgLength","push","total","process","load","storage","debug","Object","NODE_ENV","PUBLIC_URL","REACT_APP_NAME","REACT_APP_META_TITLE","REACT_APP_META_DESCRIPTION","REACT_APP_DOWNLOAD_LINK_ANDROID","REACT_APP_BASE_URL","REACT_APP_NODE_URL","REACT_APP_S3_URL","REACT_APP_S3_PREFIX","REACT_APP_FB_APP_ID","REACT_APP_GOOGLE_CLIENT_ID","REACT_APP_PRIMARY_COLOR","REACT_APP_GOOGLE_ANALYTICS_ID","REACT_APP_GOOGLE_PROFILE_ID","REACT_APP_ALLOW_MULTIGAME","REACT_APP_DEV_BY_VTECH","REACT_APP_STATE_TAGGING_ENABLE","REACT_APP_CAPTCHA_ENABLE","REACT_APP_CAPTCHA_SITEKEY","REACT_APP_LOBBY_SPORTS_ENABLE","REACT_APP_SERVE_LANG_LOCALLY","REACT_APP_ADSENSE_CLIENT_KEY","REACT_APP_ADSENSE_SLOT_KEY","REACT_APP_COUNTRY_NUM_CODE","REACT_APP_COUNTRY_ALPHA_CODE","REACT_APP_ONLY_ONE_COUNTRY_ENABLE","REACT_APP_PRIVATE_CONTEST_WINNING_DISABLE","REACT_APP_USER_BASE_URL","REACT_APP_FANTASY_BASE_URL","REACT_APP_REFERAL_ENABLE","REACT_APP_HIGHLIGHT_PRIVATE_CONTEST","REACT_APP_INTERNATIONAL","REACT_APP_SINGULAR_ENABLE","REACT_APP_SINGULAR_API","REACT_APP_SINGULAR_SECRET","REACT_APP_GTM_ID","REACT_APP_SINGULAR_PRODUCT","REACT_APP_COIN_ONLY_TYPE","REACT_APP_BUY_COINS_ENABLE","REACT_APP_LOBBY_WINNING_ENABLE","REACT_APP_PAYU_BIZ_ACCOUNT","REACT_APP_PUBLIC_KEY","REACT_APP_KEY_F1","REACT_APP_KEY_F2","REACT_APP_HOSTS","DEBUG","module","log","console","Function","prototype","call","arguments","formatArgs","args","useColors","this","namespace","humanize","diff","c","color","concat","slice","index","lastC","replace","match","splice","save","namespaces","removeItem","document","documentElement","style","window","firebug","exception","table","toLowerCase","RegExp","$1","chrome","local","localStorage","localstorage","colors","formatters","j","v","JSON","stringify","enable","a","b","fn","constructor","json","Emitter","binary","isBuf","Encoder","encodeAsString","obj","str","nsp","BINARY_EVENT","BINARY_ACK","attachments","id","Decoder","reconstructor","BinaryReconstructor","reconPack","ERROR","types","CONNECT","DISCONNECT","EVENT","ACK","removeBlobs","bloblessData","deconstruction","deconstructPacket","pack","unshift","encodeAsBinary","add","buf","Error","parse","tryParse","decodeString","emit","takeBinaryData","destroy","finishedReconstruction","binData","reconstructPacket","hasCORS","opts","xdomain","xscheme","enablesXDR","XMLHttpRequest","XDomainRequest","parser","Transport","path","hostname","port","secure","query","timestampParam","timestampRequests","readyState","agent","socket","pfx","key","passphrase","cert","ca","ciphers","rejectUnauthorized","forceNode","extraHeaders","localAddress","onError","desc","description","doOpen","doClose","onClose","send","write","onOpen","writable","onData","onPacket","mixin","on","addEventListener","event","_callbacks","once","off","removeListener","removeAllListeners","removeEventListener","callbacks","listeners","hasListeners","hasOwnProperty","encodeURIComponent","qs","qry","pairs","pair","decodeURIComponent","re","parts","src","indexOf","m","exec","uri","source","host","authority","ipv6uri","Buffer","isBuffer","eio","Socket","bind","Backoff","has","Manager","nsps","subs","reconnection","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","min","max","jitter","timeout","connecting","lastPing","encoding","packetBuffer","encoder","decoder","autoConnect","emitAll","updateSocketIds","engine","_reconnection","_reconnectionAttempts","_reconnectionDelay","setMin","_randomizationFactor","setJitter","_reconnectionDelayMax","setMax","_timeout","maybeReconnectOnOpen","reconnecting","attempts","reconnect","connect","self","skipReconnect","openSub","onopen","errorSub","cleanup","timer","setTimeout","clearTimeout","onping","Date","onpong","ondata","ondecoded","onerror","onConnecting","options","processPacketQueue","shift","subsLength","disconnect","reset","onclose","reason","delay","duration","onreconnect","attempt","XHR","JSONP","websocket","polling","xd","xs","jsonp","location","isSSL","forceJSONP","parseqs","inherit","yeast","Polling","hasXHR2","responseType","forceBase64","name","poll","pause","onPause","doPoll","callbackfn","doWrite","schema","sid","isArray","_hasBinary","File","toJSON","prev","alphabet","seed","num","Math","floor","now","decoded","arr","toArray","hasBin","events","connect_error","connect_timeout","reconnect_attempt","reconnect_failed","reconnect_error","io","ids","acks","receiveBuffer","sendBuffer","connected","disconnected","subEvents","ev","parserType","compress","flags","pop","onpacket","onconnect","onevent","onack","ondisconnect","ack","sent","emitBuffered","url","lookup","cache","managers","parsed","sameNamespace","forceNew","multiplex","encodeQueryString","parseuri","loc","href","coerce","val","stack","disable","skips","names","enabled","prevTime","prevColor","disabled","curr","ms","format","formatter","s","h","d","y","plural","ceil","parseFloat","isNaN","long","round","fmtShort","r","logFn","short","__WEBPACK_AMD_DEFINE_RESULT__","isLoader","objectTypes","function","object","freeExports","nodeType","root","freeGlobal","runInContext","context","SyntaxError","TypeError","nativeJSON","_isProperty","_forEach","undef","objectProto","getClass","isExtended","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","isSupported","value","serialized","stringifySupported","parseSupported","charIndexBuggy","Months","getDay","year","month","property","members","__proto__","original","parent","Properties","valueOf","isFunction","isConstructor","hasProperty","Escapes","92","34","8","12","10","13","9","toPaddedString","width","quote","useCharIndex","symbols","charCode","filter","whitespace","properties","className","serialize","indentation","date","time","hours","minutes","seconds","milliseconds","element","prefix","Index","Source","Unescapes","47","98","116","110","102","114","abort","lex","begin","position","isSigned","update","walk","get","hasMembers","previousJSON","isRestored","JSON3","noConflict","packetData","_deconstructPacket","placeholder","_placeholder","newData","_reconstructPacket","pendingBlobs","_removeBlobs","curKey","containingObject","fileReader","transports","parsejson","writeBuffer","prevBufferLen","policyPort","rememberUpgrade","onlyBinaryUpgrades","perMessageDeflate","threshold","upgrades","pingInterval","pingTimeout","pingIntervalTimer","pingTimeoutTimer","priorWebsocketSuccess","createTransport","o","clone","EIO","transport","setTransport","onDrain","probe","failed","onTransportOpen","upgradeLosesBinary","upgrading","flush","freezeTransport","onTransportClose","onupgrade","to","onHandshake","setPing","code","filterUpgrades","onHeartbeat","sendPacket","waitForUpgrade","cleanupAndClose","filteredUpgrades","empty","requestTimeout","Request","method","async","create","unloadHandler","requests","request","req","sendXhr","pollXhr","xhr","setDisableHeaderCheck","setRequestHeader","withCredentials","hasXDR","onLoad","responseText","onreadystatechange","status","requestsCount","onSuccess","fromError","contentType","getResponseHeader","response","ui8Arr","dataArray","idx","attachEvent","arraybuffer","start","end","bytes","abv","ii","count","err_cb","bail","proxy","byteArray","byteCount","byteIndex","stringFromCharCode","ucs2decode","string","extra","output","counter","createByte","codePoint","encodeCodePoint","symbol","readContinuationByte","continuationByte","decodeSymbol","byte1","wtf8","version","codePoints","byteString","tmp","array","ucs2encode","chars","encoded1","encoded2","encoded3","encoded4","bufferLength","BlobBuilder","WebKitBlobBuilder","MSBlobBuilder","MozBlobBuilder","blobSupported","blobSupportsArrayBufferView","blobBuilderSupported","append","getBlob","mapArrayBufferViews","chunk","copy","set","byteOffset","BlobBuilderConstructor","bb","BlobConstructor","JSONPPolling","rNewline","rEscapedNewline","___eio","script","parentNode","removeChild","form","iframe","createElement","insertAt","getElementsByTagName","insertBefore","head","body","appendChild","area","iframeId","top","left","target","setAttribute","complete","initIframe","html","action","submit","NodeWebSocket","BrowserWebSocket","WebSocket","MozWebSocket","WS","usingBrowserWebSocket","check","headers","ws","supports","addEventListeners","onmessage","rvalidchars","rvalidescape","rvalidtokens","rvalidbraces","rtrimLeft","rtrimRight","list","factor","pow","rand","random","deviation"],"mappings":"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","file":"static/js/4.e99c8b42.chunk.js","sourcesContent":["/**\n * Module dependencies.\n */\nvar keys = require('./keys');\n\nvar hasBinary = require('has-binary');\n\nvar sliceBuffer = require('arraybuffer.slice');\n\nvar after = require('after');\n\nvar utf8 = require('wtf-8');\n\nvar base64encoder;\n\nif (global && global.ArrayBuffer) {\n  base64encoder = require('base64-arraybuffer');\n}\n/**\n * Check if we are running an android browser. That requires us to use\n * ArrayBuffer with polling transports...\n *\n * http://ghinda.net/jpeg-blob-ajax-android/\n */\n\n\nvar isAndroid = typeof navigator !== 'undefined' && /Android/i.test(navigator.userAgent);\n/**\n * Check if we are running in PhantomJS.\n * Uploading a Blob with PhantomJS does not work correctly, as reported here:\n * https://github.com/ariya/phantomjs/issues/11395\n * @type boolean\n */\n\nvar isPhantomJS = typeof navigator !== 'undefined' && /PhantomJS/i.test(navigator.userAgent);\n/**\n * When true, avoids using Blobs to encode payloads.\n * @type boolean\n */\n\nvar dontSendBlobs = isAndroid || isPhantomJS;\n/**\n * Current protocol version.\n */\n\nexports.protocol = 3;\n/**\n * Packet types.\n */\n\nvar packets = exports.packets = {\n  open: 0 // non-ws\n  ,\n  close: 1 // non-ws\n  ,\n  ping: 2,\n  pong: 3,\n  message: 4,\n  upgrade: 5,\n  noop: 6\n};\nvar packetslist = keys(packets);\n/**\n * Premade error packet.\n */\n\nvar err = {\n  type: 'error',\n  data: 'parser error'\n};\n/**\n * Create a blob api even for blob builder when vendor prefixes exist\n */\n\nvar Blob = require('blob');\n/**\n * Encodes a packet.\n *\n *     <packet type id> [ <data> ]\n *\n * Example:\n *\n *     5hello world\n *     3\n *     4\n *\n * Binary is encoded in an identical principle\n *\n * @api private\n */\n\n\nexports.encodePacket = function (packet, supportsBinary, utf8encode, callback) {\n  if ('function' == typeof supportsBinary) {\n    callback = supportsBinary;\n    supportsBinary = false;\n  }\n\n  if ('function' == typeof utf8encode) {\n    callback = utf8encode;\n    utf8encode = null;\n  }\n\n  var data = packet.data === undefined ? undefined : packet.data.buffer || packet.data;\n\n  if (global.ArrayBuffer && data instanceof ArrayBuffer) {\n    return encodeArrayBuffer(packet, supportsBinary, callback);\n  } else if (Blob && data instanceof global.Blob) {\n    return encodeBlob(packet, supportsBinary, callback);\n  } // might be an object with { base64: true, data: dataAsBase64String }\n\n\n  if (data && data.base64) {\n    return encodeBase64Object(packet, callback);\n  } // Sending data as a utf-8 string\n\n\n  var encoded = packets[packet.type]; // data fragment is optional\n\n  if (undefined !== packet.data) {\n    encoded += utf8encode ? utf8.encode(String(packet.data)) : String(packet.data);\n  }\n\n  return callback('' + encoded);\n};\n\nfunction encodeBase64Object(packet, callback) {\n  // packet data is an object { base64: true, data: dataAsBase64String }\n  var message = 'b' + exports.packets[packet.type] + packet.data.data;\n  return callback(message);\n}\n/**\n * Encode packet helpers for binary types\n */\n\n\nfunction encodeArrayBuffer(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  var data = packet.data;\n  var contentArray = new Uint8Array(data);\n  var resultBuffer = new Uint8Array(1 + data.byteLength);\n  resultBuffer[0] = packets[packet.type];\n\n  for (var i = 0; i < contentArray.length; i++) {\n    resultBuffer[i + 1] = contentArray[i];\n  }\n\n  return callback(resultBuffer.buffer);\n}\n\nfunction encodeBlobAsArrayBuffer(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  var fr = new FileReader();\n\n  fr.onload = function () {\n    packet.data = fr.result;\n    exports.encodePacket(packet, supportsBinary, true, callback);\n  };\n\n  return fr.readAsArrayBuffer(packet.data);\n}\n\nfunction encodeBlob(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  if (dontSendBlobs) {\n    return encodeBlobAsArrayBuffer(packet, supportsBinary, callback);\n  }\n\n  var length = new Uint8Array(1);\n  length[0] = packets[packet.type];\n  var blob = new Blob([length.buffer, packet.data]);\n  return callback(blob);\n}\n/**\n * Encodes a packet with binary data in a base64 string\n *\n * @param {Object} packet, has `type` and `data`\n * @return {String} base64 encoded message\n */\n\n\nexports.encodeBase64Packet = function (packet, callback) {\n  var message = 'b' + exports.packets[packet.type];\n\n  if (Blob && packet.data instanceof global.Blob) {\n    var fr = new FileReader();\n\n    fr.onload = function () {\n      var b64 = fr.result.split(',')[1];\n      callback(message + b64);\n    };\n\n    return fr.readAsDataURL(packet.data);\n  }\n\n  var b64data;\n\n  try {\n    b64data = String.fromCharCode.apply(null, new Uint8Array(packet.data));\n  } catch (e) {\n    // iPhone Safari doesn't let you apply with typed arrays\n    var typed = new Uint8Array(packet.data);\n    var basic = new Array(typed.length);\n\n    for (var i = 0; i < typed.length; i++) {\n      basic[i] = typed[i];\n    }\n\n    b64data = String.fromCharCode.apply(null, basic);\n  }\n\n  message += global.btoa(b64data);\n  return callback(message);\n};\n/**\n * Decodes a packet. Changes format to Blob if requested.\n *\n * @return {Object} with `type` and `data` (if any)\n * @api private\n */\n\n\nexports.decodePacket = function (data, binaryType, utf8decode) {\n  if (data === undefined) {\n    return err;\n  } // String data\n\n\n  if (typeof data == 'string') {\n    if (data.charAt(0) == 'b') {\n      return exports.decodeBase64Packet(data.substr(1), binaryType);\n    }\n\n    if (utf8decode) {\n      data = tryDecode(data);\n\n      if (data === false) {\n        return err;\n      }\n    }\n\n    var type = data.charAt(0);\n\n    if (Number(type) != type || !packetslist[type]) {\n      return err;\n    }\n\n    if (data.length > 1) {\n      return {\n        type: packetslist[type],\n        data: data.substring(1)\n      };\n    } else {\n      return {\n        type: packetslist[type]\n      };\n    }\n  }\n\n  var asArray = new Uint8Array(data);\n  var type = asArray[0];\n  var rest = sliceBuffer(data, 1);\n\n  if (Blob && binaryType === 'blob') {\n    rest = new Blob([rest]);\n  }\n\n  return {\n    type: packetslist[type],\n    data: rest\n  };\n};\n\nfunction tryDecode(data) {\n  try {\n    data = utf8.decode(data);\n  } catch (e) {\n    return false;\n  }\n\n  return data;\n}\n/**\n * Decodes a packet encoded in a base64 string\n *\n * @param {String} base64 encoded message\n * @return {Object} with `type` and `data` (if any)\n */\n\n\nexports.decodeBase64Packet = function (msg, binaryType) {\n  var type = packetslist[msg.charAt(0)];\n\n  if (!base64encoder) {\n    return {\n      type: type,\n      data: {\n        base64: true,\n        data: msg.substr(1)\n      }\n    };\n  }\n\n  var data = base64encoder.decode(msg.substr(1));\n\n  if (binaryType === 'blob' && Blob) {\n    data = new Blob([data]);\n  }\n\n  return {\n    type: type,\n    data: data\n  };\n};\n/**\n * Encodes multiple messages (payload).\n *\n *     <length>:data\n *\n * Example:\n *\n *     11:hello world2:hi\n *\n * If any contents are binary, they will be encoded as base64 strings. Base64\n * encoded strings are marked with a b before the length specifier\n *\n * @param {Array} packets\n * @api private\n */\n\n\nexports.encodePayload = function (packets, supportsBinary, callback) {\n  if (typeof supportsBinary == 'function') {\n    callback = supportsBinary;\n    supportsBinary = null;\n  }\n\n  var isBinary = hasBinary(packets);\n\n  if (supportsBinary && isBinary) {\n    if (Blob && !dontSendBlobs) {\n      return exports.encodePayloadAsBlob(packets, callback);\n    }\n\n    return exports.encodePayloadAsArrayBuffer(packets, callback);\n  }\n\n  if (!packets.length) {\n    return callback('0:');\n  }\n\n  function setLengthHeader(message) {\n    return message.length + ':' + message;\n  }\n\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, !isBinary ? false : supportsBinary, true, function (message) {\n      doneCallback(null, setLengthHeader(message));\n    });\n  }\n\n  map(packets, encodeOne, function (err, results) {\n    return callback(results.join(''));\n  });\n};\n/**\n * Async array map using after\n */\n\n\nfunction map(ary, each, done) {\n  var result = new Array(ary.length);\n  var next = after(ary.length, done);\n\n  var eachWithIndex = function eachWithIndex(i, el, cb) {\n    each(el, function (error, msg) {\n      result[i] = msg;\n      cb(error, result);\n    });\n  };\n\n  for (var i = 0; i < ary.length; i++) {\n    eachWithIndex(i, ary[i], next);\n  }\n}\n/*\n * Decodes data when a payload is maybe expected. Possible binary contents are\n * decoded from their base64 representation\n *\n * @param {String} data, callback method\n * @api public\n */\n\n\nexports.decodePayload = function (data, binaryType, callback) {\n  if (typeof data != 'string') {\n    return exports.decodePayloadAsBinary(data, binaryType, callback);\n  }\n\n  if (typeof binaryType === 'function') {\n    callback = binaryType;\n    binaryType = null;\n  }\n\n  var packet;\n\n  if (data == '') {\n    // parser error - ignoring payload\n    return callback(err, 0, 1);\n  }\n\n  var length = '',\n      n,\n      msg;\n\n  for (var i = 0, l = data.length; i < l; i++) {\n    var chr = data.charAt(i);\n\n    if (':' != chr) {\n      length += chr;\n    } else {\n      if ('' == length || length != (n = Number(length))) {\n        // parser error - ignoring payload\n        return callback(err, 0, 1);\n      }\n\n      msg = data.substr(i + 1, n);\n\n      if (length != msg.length) {\n        // parser error - ignoring payload\n        return callback(err, 0, 1);\n      }\n\n      if (msg.length) {\n        packet = exports.decodePacket(msg, binaryType, true);\n\n        if (err.type == packet.type && err.data == packet.data) {\n          // parser error in individual packet - ignoring payload\n          return callback(err, 0, 1);\n        }\n\n        var ret = callback(packet, i + n, l);\n        if (false === ret) return;\n      } // advance cursor\n\n\n      i += n;\n      length = '';\n    }\n  }\n\n  if (length != '') {\n    // parser error - ignoring payload\n    return callback(err, 0, 1);\n  }\n};\n/**\n * Encodes multiple messages (payload) as binary.\n *\n * <1 = binary, 0 = string><number from 0-9><number from 0-9>[...]<number\n * 255><data>\n *\n * Example:\n * 1 3 255 1 2 3, if the binary contents are interpreted as 8 bit integers\n *\n * @param {Array} packets\n * @return {ArrayBuffer} encoded payload\n * @api private\n */\n\n\nexports.encodePayloadAsArrayBuffer = function (packets, callback) {\n  if (!packets.length) {\n    return callback(new ArrayBuffer(0));\n  }\n\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, true, true, function (data) {\n      return doneCallback(null, data);\n    });\n  }\n\n  map(packets, encodeOne, function (err, encodedPackets) {\n    var totalLength = encodedPackets.reduce(function (acc, p) {\n      var len;\n\n      if (typeof p === 'string') {\n        len = p.length;\n      } else {\n        len = p.byteLength;\n      }\n\n      return acc + len.toString().length + len + 2; // string/binary identifier + separator = 2\n    }, 0);\n    var resultArray = new Uint8Array(totalLength);\n    var bufferIndex = 0;\n    encodedPackets.forEach(function (p) {\n      var isString = typeof p === 'string';\n      var ab = p;\n\n      if (isString) {\n        var view = new Uint8Array(p.length);\n\n        for (var i = 0; i < p.length; i++) {\n          view[i] = p.charCodeAt(i);\n        }\n\n        ab = view.buffer;\n      }\n\n      if (isString) {\n        // not true binary\n        resultArray[bufferIndex++] = 0;\n      } else {\n        // true binary\n        resultArray[bufferIndex++] = 1;\n      }\n\n      var lenStr = ab.byteLength.toString();\n\n      for (var i = 0; i < lenStr.length; i++) {\n        resultArray[bufferIndex++] = parseInt(lenStr[i]);\n      }\n\n      resultArray[bufferIndex++] = 255;\n      var view = new Uint8Array(ab);\n\n      for (var i = 0; i < view.length; i++) {\n        resultArray[bufferIndex++] = view[i];\n      }\n    });\n    return callback(resultArray.buffer);\n  });\n};\n/**\n * Encode as Blob\n */\n\n\nexports.encodePayloadAsBlob = function (packets, callback) {\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, true, true, function (encoded) {\n      var binaryIdentifier = new Uint8Array(1);\n      binaryIdentifier[0] = 1;\n\n      if (typeof encoded === 'string') {\n        var view = new Uint8Array(encoded.length);\n\n        for (var i = 0; i < encoded.length; i++) {\n          view[i] = encoded.charCodeAt(i);\n        }\n\n        encoded = view.buffer;\n        binaryIdentifier[0] = 0;\n      }\n\n      var len = encoded instanceof ArrayBuffer ? encoded.byteLength : encoded.size;\n      var lenStr = len.toString();\n      var lengthAry = new Uint8Array(lenStr.length + 1);\n\n      for (var i = 0; i < lenStr.length; i++) {\n        lengthAry[i] = parseInt(lenStr[i]);\n      }\n\n      lengthAry[lenStr.length] = 255;\n\n      if (Blob) {\n        var blob = new Blob([binaryIdentifier.buffer, lengthAry.buffer, encoded]);\n        doneCallback(null, blob);\n      }\n    });\n  }\n\n  map(packets, encodeOne, function (err, results) {\n    return callback(new Blob(results));\n  });\n};\n/*\n * Decodes data when a payload is maybe expected. Strings are decoded by\n * interpreting each byte as a key code for entries marked to start with 0. See\n * description of encodePayloadAsBinary\n *\n * @param {ArrayBuffer} data, callback method\n * @api public\n */\n\n\nexports.decodePayloadAsBinary = function (data, binaryType, callback) {\n  if (typeof binaryType === 'function') {\n    callback = binaryType;\n    binaryType = null;\n  }\n\n  var bufferTail = data;\n  var buffers = [];\n  var numberTooLong = false;\n\n  while (bufferTail.byteLength > 0) {\n    var tailArray = new Uint8Array(bufferTail);\n    var isString = tailArray[0] === 0;\n    var msgLength = '';\n\n    for (var i = 1;; i++) {\n      if (tailArray[i] == 255) break;\n\n      if (msgLength.length > 310) {\n        numberTooLong = true;\n        break;\n      }\n\n      msgLength += tailArray[i];\n    }\n\n    if (numberTooLong) return callback(err, 0, 1);\n    bufferTail = sliceBuffer(bufferTail, 2 + msgLength.length);\n    msgLength = parseInt(msgLength);\n    var msg = sliceBuffer(bufferTail, 0, msgLength);\n\n    if (isString) {\n      try {\n        msg = String.fromCharCode.apply(null, new Uint8Array(msg));\n      } catch (e) {\n        // iPhone Safari doesn't let you apply to typed arrays\n        var typed = new Uint8Array(msg);\n        msg = '';\n\n        for (var i = 0; i < typed.length; i++) {\n          msg += String.fromCharCode(typed[i]);\n        }\n      }\n    }\n\n    buffers.push(msg);\n    bufferTail = sliceBuffer(bufferTail, msgLength);\n  }\n\n  var total = buffers.length;\n  buffers.forEach(function (buffer, i) {\n    callback(exports.decodePacket(buffer, binaryType, true), i, total);\n  });\n};","/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\nexports = module.exports = require('./debug');\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome && 'undefined' != typeof chrome.storage ? chrome.storage.local : localstorage();\n/**\n * Colors.\n */\n\nexports.colors = ['lightseagreen', 'forestgreen', 'goldenrod', 'dodgerblue', 'darkorchid', 'crimson'];\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n  return typeof document !== 'undefined' && 'WebkitAppearance' in document.documentElement.style || // is firebug? http://stackoverflow.com/a/398120/376773\n  window.console && (console.firebug || console.exception && console.table) || // is firefox >= v31?\n  // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n  navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31;\n}\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\n\nexports.formatters.j = function (v) {\n  try {\n    return JSON.stringify(v);\n  } catch (err) {\n    return '[UnexpectedJSONParseError]: ' + err.message;\n  }\n};\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\n\nfunction formatArgs() {\n  var args = arguments;\n  var useColors = this.useColors;\n  args[0] = (useColors ? '%c' : '') + this.namespace + (useColors ? ' %c' : ' ') + args[0] + (useColors ? '%c ' : ' ') + '+' + exports.humanize(this.diff);\n  if (!useColors) return args;\n  var c = 'color: ' + this.color;\n  args = [args[0], c, 'color: inherit'].concat(Array.prototype.slice.call(args, 1)); // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-z%]/g, function (match) {\n    if ('%%' === match) return;\n    index++;\n\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n  args.splice(lastC, 0, c);\n  return args;\n}\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console && console.log && Function.prototype.apply.call(console.log, console, arguments);\n}\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch (e) {}\n}\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\n\nfunction load() {\n  var r;\n\n  try {\n    return exports.storage.debug;\n  } catch (e) {} // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\n\n  if (typeof process !== 'undefined' && 'env' in process) {\n    return process.env.DEBUG;\n  }\n}\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\n\nexports.enable(load());\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}","module.exports = function (a, b) {\n  var fn = function fn() {};\n\n  fn.prototype = b.prototype;\n  a.prototype = new fn();\n  a.prototype.constructor = a;\n};","/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\nexports = module.exports = require('./debug');\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome && 'undefined' != typeof chrome.storage ? chrome.storage.local : localstorage();\n/**\n * Colors.\n */\n\nexports.colors = ['lightseagreen', 'forestgreen', 'goldenrod', 'dodgerblue', 'darkorchid', 'crimson'];\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n  return typeof document !== 'undefined' && 'WebkitAppearance' in document.documentElement.style || // is firebug? http://stackoverflow.com/a/398120/376773\n  window.console && (console.firebug || console.exception && console.table) || // is firefox >= v31?\n  // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n  navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31;\n}\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\n\nexports.formatters.j = function (v) {\n  try {\n    return JSON.stringify(v);\n  } catch (err) {\n    return '[UnexpectedJSONParseError]: ' + err.message;\n  }\n};\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\n\nfunction formatArgs() {\n  var args = arguments;\n  var useColors = this.useColors;\n  args[0] = (useColors ? '%c' : '') + this.namespace + (useColors ? ' %c' : ' ') + args[0] + (useColors ? '%c ' : ' ') + '+' + exports.humanize(this.diff);\n  if (!useColors) return args;\n  var c = 'color: ' + this.color;\n  args = [args[0], c, 'color: inherit'].concat(Array.prototype.slice.call(args, 1)); // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-z%]/g, function (match) {\n    if ('%%' === match) return;\n    index++;\n\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n  args.splice(lastC, 0, c);\n  return args;\n}\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console && console.log && Function.prototype.apply.call(console.log, console, arguments);\n}\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch (e) {}\n}\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\n\nfunction load() {\n  var r;\n\n  try {\n    return exports.storage.debug;\n  } catch (e) {} // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\n\n  if (typeof process !== 'undefined' && 'env' in process) {\n    return process.env.DEBUG;\n  }\n}\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\n\nexports.enable(load());\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}","/**\n * Module dependencies.\n */\nvar debug = require('debug')('socket.io-parser');\n\nvar json = require('json3');\n\nvar Emitter = require('component-emitter');\n\nvar binary = require('./binary');\n\nvar isBuf = require('./is-buffer');\n/**\n * Protocol version.\n *\n * @api public\n */\n\n\nexports.protocol = 4;\n/**\n * Packet types.\n *\n * @api public\n */\n\nexports.types = ['CONNECT', 'DISCONNECT', 'EVENT', 'ACK', 'ERROR', 'BINARY_EVENT', 'BINARY_ACK'];\n/**\n * Packet type `connect`.\n *\n * @api public\n */\n\nexports.CONNECT = 0;\n/**\n * Packet type `disconnect`.\n *\n * @api public\n */\n\nexports.DISCONNECT = 1;\n/**\n * Packet type `event`.\n *\n * @api public\n */\n\nexports.EVENT = 2;\n/**\n * Packet type `ack`.\n *\n * @api public\n */\n\nexports.ACK = 3;\n/**\n * Packet type `error`.\n *\n * @api public\n */\n\nexports.ERROR = 4;\n/**\n * Packet type 'binary event'\n *\n * @api public\n */\n\nexports.BINARY_EVENT = 5;\n/**\n * Packet type `binary ack`. For acks with binary arguments.\n *\n * @api public\n */\n\nexports.BINARY_ACK = 6;\n/**\n * Encoder constructor.\n *\n * @api public\n */\n\nexports.Encoder = Encoder;\n/**\n * Decoder constructor.\n *\n * @api public\n */\n\nexports.Decoder = Decoder;\n/**\n * A socket.io Encoder instance\n *\n * @api public\n */\n\nfunction Encoder() {}\n/**\n * Encode a packet as a single string if non-binary, or as a\n * buffer sequence, depending on packet type.\n *\n * @param {Object} obj - packet object\n * @param {Function} callback - function to handle encodings (likely engine.write)\n * @return Calls callback with Array of encodings\n * @api public\n */\n\n\nEncoder.prototype.encode = function (obj, callback) {\n  debug('encoding packet %j', obj);\n\n  if (exports.BINARY_EVENT == obj.type || exports.BINARY_ACK == obj.type) {\n    encodeAsBinary(obj, callback);\n  } else {\n    var encoding = encodeAsString(obj);\n    callback([encoding]);\n  }\n};\n/**\n * Encode packet as string.\n *\n * @param {Object} packet\n * @return {String} encoded\n * @api private\n */\n\n\nfunction encodeAsString(obj) {\n  var str = '';\n  var nsp = false; // first is type\n\n  str += obj.type; // attachments if we have them\n\n  if (exports.BINARY_EVENT == obj.type || exports.BINARY_ACK == obj.type) {\n    str += obj.attachments;\n    str += '-';\n  } // if we have a namespace other than `/`\n  // we append it followed by a comma `,`\n\n\n  if (obj.nsp && '/' != obj.nsp) {\n    nsp = true;\n    str += obj.nsp;\n  } // immediately followed by the id\n\n\n  if (null != obj.id) {\n    if (nsp) {\n      str += ',';\n      nsp = false;\n    }\n\n    str += obj.id;\n  } // json data\n\n\n  if (null != obj.data) {\n    if (nsp) str += ',';\n    str += json.stringify(obj.data);\n  }\n\n  debug('encoded %j as %s', obj, str);\n  return str;\n}\n/**\n * Encode packet as 'buffer sequence' by removing blobs, and\n * deconstructing packet into object with placeholders and\n * a list of buffers.\n *\n * @param {Object} packet\n * @return {Buffer} encoded\n * @api private\n */\n\n\nfunction encodeAsBinary(obj, callback) {\n  function writeEncoding(bloblessData) {\n    var deconstruction = binary.deconstructPacket(bloblessData);\n    var pack = encodeAsString(deconstruction.packet);\n    var buffers = deconstruction.buffers;\n    buffers.unshift(pack); // add packet info to beginning of data list\n\n    callback(buffers); // write all the buffers\n  }\n\n  binary.removeBlobs(obj, writeEncoding);\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n * @api public\n */\n\n\nfunction Decoder() {\n  this.reconstructor = null;\n}\n/**\n * Mix in `Emitter` with Decoder.\n */\n\n\nEmitter(Decoder.prototype);\n/**\n * Decodes an ecoded packet string into packet JSON.\n *\n * @param {String} obj - encoded packet\n * @return {Object} packet\n * @api public\n */\n\nDecoder.prototype.add = function (obj) {\n  var packet;\n\n  if ('string' == typeof obj) {\n    packet = decodeString(obj);\n\n    if (exports.BINARY_EVENT == packet.type || exports.BINARY_ACK == packet.type) {\n      // binary packet's json\n      this.reconstructor = new BinaryReconstructor(packet); // no attachments, labeled binary but no binary data to follow\n\n      if (this.reconstructor.reconPack.attachments === 0) {\n        this.emit('decoded', packet);\n      }\n    } else {\n      // non-binary full packet\n      this.emit('decoded', packet);\n    }\n  } else if (isBuf(obj) || obj.base64) {\n    // raw binary data\n    if (!this.reconstructor) {\n      throw new Error('got binary data when not reconstructing a packet');\n    } else {\n      packet = this.reconstructor.takeBinaryData(obj);\n\n      if (packet) {\n        // received final buffer\n        this.reconstructor = null;\n        this.emit('decoded', packet);\n      }\n    }\n  } else {\n    throw new Error('Unknown type: ' + obj);\n  }\n};\n/**\n * Decode a packet String (JSON data)\n *\n * @param {String} str\n * @return {Object} packet\n * @api private\n */\n\n\nfunction decodeString(str) {\n  var p = {};\n  var i = 0; // look up type\n\n  p.type = Number(str.charAt(0));\n  if (null == exports.types[p.type]) return error(); // look up attachments if type binary\n\n  if (exports.BINARY_EVENT == p.type || exports.BINARY_ACK == p.type) {\n    var buf = '';\n\n    while (str.charAt(++i) != '-') {\n      buf += str.charAt(i);\n      if (i == str.length) break;\n    }\n\n    if (buf != Number(buf) || str.charAt(i) != '-') {\n      throw new Error('Illegal attachments');\n    }\n\n    p.attachments = Number(buf);\n  } // look up namespace (if any)\n\n\n  if ('/' == str.charAt(i + 1)) {\n    p.nsp = '';\n\n    while (++i) {\n      var c = str.charAt(i);\n      if (',' == c) break;\n      p.nsp += c;\n      if (i == str.length) break;\n    }\n  } else {\n    p.nsp = '/';\n  } // look up id\n\n\n  var next = str.charAt(i + 1);\n\n  if ('' !== next && Number(next) == next) {\n    p.id = '';\n\n    while (++i) {\n      var c = str.charAt(i);\n\n      if (null == c || Number(c) != c) {\n        --i;\n        break;\n      }\n\n      p.id += str.charAt(i);\n      if (i == str.length) break;\n    }\n\n    p.id = Number(p.id);\n  } // look up json data\n\n\n  if (str.charAt(++i)) {\n    p = tryParse(p, str.substr(i));\n  }\n\n  debug('decoded %s as %j', str, p);\n  return p;\n}\n\nfunction tryParse(p, str) {\n  try {\n    p.data = json.parse(str);\n  } catch (e) {\n    return error();\n  }\n\n  return p;\n}\n\n;\n/**\n * Deallocates a parser's resources\n *\n * @api public\n */\n\nDecoder.prototype.destroy = function () {\n  if (this.reconstructor) {\n    this.reconstructor.finishedReconstruction();\n  }\n};\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n * @api private\n */\n\n\nfunction BinaryReconstructor(packet) {\n  this.reconPack = packet;\n  this.buffers = [];\n}\n/**\n * Method to be called when binary data received from connection\n * after a BINARY_EVENT packet.\n *\n * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n * @return {null | Object} returns null if more binary data is expected or\n *   a reconstructed packet object if all buffers have been received.\n * @api private\n */\n\n\nBinaryReconstructor.prototype.takeBinaryData = function (binData) {\n  this.buffers.push(binData);\n\n  if (this.buffers.length == this.reconPack.attachments) {\n    // done with buffer list\n    var packet = binary.reconstructPacket(this.reconPack, this.buffers);\n    this.finishedReconstruction();\n    return packet;\n  }\n\n  return null;\n};\n/**\n * Cleans up binary packet reconstruction variables.\n *\n * @api private\n */\n\n\nBinaryReconstructor.prototype.finishedReconstruction = function () {\n  this.reconPack = null;\n  this.buffers = [];\n};\n\nfunction error(data) {\n  return {\n    type: exports.ERROR,\n    data: 'parser error'\n  };\n}","// browser shim for xmlhttprequest module\nvar hasCORS = require('has-cors');\n\nmodule.exports = function (opts) {\n  var xdomain = opts.xdomain; // scheme must be same when usign XDomainRequest\n  // http://blogs.msdn.com/b/ieinternals/archive/2010/05/13/xdomainrequest-restrictions-limitations-and-workarounds.aspx\n\n  var xscheme = opts.xscheme; // XDomainRequest has a flow of not sending cookie, therefore it should be disabled as a default.\n  // https://github.com/Automattic/engine.io-client/pull/217\n\n  var enablesXDR = opts.enablesXDR; // XMLHttpRequest can be disabled on IE\n\n  try {\n    if ('undefined' !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n      return new XMLHttpRequest();\n    }\n  } catch (e) {} // Use XDomainRequest for IE8 if enablesXDR is true\n  // because loading bar keeps flashing when using jsonp-polling\n  // https://github.com/yujiosaka/socke.io-ie8-loading-example\n\n\n  try {\n    if ('undefined' !== typeof XDomainRequest && !xscheme && enablesXDR) {\n      return new XDomainRequest();\n    }\n  } catch (e) {}\n\n  if (!xdomain) {\n    try {\n      return new global[['Active'].concat('Object').join('X')]('Microsoft.XMLHTTP');\n    } catch (e) {}\n  }\n};","/**\n * Module dependencies.\n */\nvar parser = require('engine.io-parser');\n\nvar Emitter = require('component-emitter');\n/**\n * Module exports.\n */\n\n\nmodule.exports = Transport;\n/**\n * Transport abstract constructor.\n *\n * @param {Object} options.\n * @api private\n */\n\nfunction Transport(opts) {\n  this.path = opts.path;\n  this.hostname = opts.hostname;\n  this.port = opts.port;\n  this.secure = opts.secure;\n  this.query = opts.query;\n  this.timestampParam = opts.timestampParam;\n  this.timestampRequests = opts.timestampRequests;\n  this.readyState = '';\n  this.agent = opts.agent || false;\n  this.socket = opts.socket;\n  this.enablesXDR = opts.enablesXDR; // SSL options for Node.js client\n\n  this.pfx = opts.pfx;\n  this.key = opts.key;\n  this.passphrase = opts.passphrase;\n  this.cert = opts.cert;\n  this.ca = opts.ca;\n  this.ciphers = opts.ciphers;\n  this.rejectUnauthorized = opts.rejectUnauthorized;\n  this.forceNode = opts.forceNode; // other options for Node.js client\n\n  this.extraHeaders = opts.extraHeaders;\n  this.localAddress = opts.localAddress;\n}\n/**\n * Mix in `Emitter`.\n */\n\n\nEmitter(Transport.prototype);\n/**\n * Emits an error.\n *\n * @param {String} str\n * @return {Transport} for chaining\n * @api public\n */\n\nTransport.prototype.onError = function (msg, desc) {\n  var err = new Error(msg);\n  err.type = 'TransportError';\n  err.description = desc;\n  this.emit('error', err);\n  return this;\n};\n/**\n * Opens the transport.\n *\n * @api public\n */\n\n\nTransport.prototype.open = function () {\n  if ('closed' === this.readyState || '' === this.readyState) {\n    this.readyState = 'opening';\n    this.doOpen();\n  }\n\n  return this;\n};\n/**\n * Closes the transport.\n *\n * @api private\n */\n\n\nTransport.prototype.close = function () {\n  if ('opening' === this.readyState || 'open' === this.readyState) {\n    this.doClose();\n    this.onClose();\n  }\n\n  return this;\n};\n/**\n * Sends multiple packets.\n *\n * @param {Array} packets\n * @api private\n */\n\n\nTransport.prototype.send = function (packets) {\n  if ('open' === this.readyState) {\n    this.write(packets);\n  } else {\n    throw new Error('Transport not open');\n  }\n};\n/**\n * Called upon open\n *\n * @api private\n */\n\n\nTransport.prototype.onOpen = function () {\n  this.readyState = 'open';\n  this.writable = true;\n  this.emit('open');\n};\n/**\n * Called with data.\n *\n * @param {String} data\n * @api private\n */\n\n\nTransport.prototype.onData = function (data) {\n  var packet = parser.decodePacket(data, this.socket.binaryType);\n  this.onPacket(packet);\n};\n/**\n * Called with a decoded packet.\n */\n\n\nTransport.prototype.onPacket = function (packet) {\n  this.emit('packet', packet);\n};\n/**\n * Called upon close.\n *\n * @api private\n */\n\n\nTransport.prototype.onClose = function () {\n  this.readyState = 'closed';\n  this.emit('close');\n};","/**\r\n * Expose `Emitter`.\r\n */\nif (typeof module !== 'undefined') {\n  module.exports = Emitter;\n}\n/**\r\n * Initialize a new `Emitter`.\r\n *\r\n * @api public\r\n */\n\n\nfunction Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n;\n/**\r\n * Mixin the emitter properties.\r\n *\r\n * @param {Object} obj\r\n * @return {Object}\r\n * @api private\r\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n\n  return obj;\n}\n/**\r\n * Listen on the given `event` with `fn`.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\n\n\nEmitter.prototype.on = Emitter.prototype.addEventListener = function (event, fn) {\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || []).push(fn);\n  return this;\n};\n/**\r\n * Adds an `event` listener that will be invoked a single\r\n * time then automatically removed.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\n\n\nEmitter.prototype.once = function (event, fn) {\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n/**\r\n * Remove the given callback for `event` or all\r\n * registered callbacks.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\n\n\nEmitter.prototype.off = Emitter.prototype.removeListener = Emitter.prototype.removeAllListeners = Emitter.prototype.removeEventListener = function (event, fn) {\n  this._callbacks = this._callbacks || {}; // all\n\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  } // specific event\n\n\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this; // remove all handlers\n\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  } // remove specific handler\n\n\n  var cb;\n\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  return this;\n};\n/**\r\n * Emit `event` with the given args.\r\n *\r\n * @param {String} event\r\n * @param {Mixed} ...\r\n * @return {Emitter}\r\n */\n\n\nEmitter.prototype.emit = function (event) {\n  this._callbacks = this._callbacks || {};\n  var args = [].slice.call(arguments, 1),\n      callbacks = this._callbacks['$' + event];\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n/**\r\n * Return array of callbacks for `event`.\r\n *\r\n * @param {String} event\r\n * @return {Array}\r\n * @api public\r\n */\n\n\nEmitter.prototype.listeners = function (event) {\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n/**\r\n * Check if this emitter has `event` handlers.\r\n *\r\n * @param {String} event\r\n * @return {Boolean}\r\n * @api public\r\n */\n\n\nEmitter.prototype.hasListeners = function (event) {\n  return !!this.listeners(event).length;\n};","/**\r\n * Compiles a querystring\r\n * Returns string representation of the object\r\n *\r\n * @param {Object}\r\n * @api private\r\n */\nexports.encode = function (obj) {\n  var str = '';\n\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) {\n      if (str.length) str += '&';\n      str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n    }\n  }\n\n  return str;\n};\n/**\r\n * Parses a simple querystring into an object\r\n *\r\n * @param {String} qs\r\n * @api private\r\n */\n\n\nexports.decode = function (qs) {\n  var qry = {};\n  var pairs = qs.split('&');\n\n  for (var i = 0, l = pairs.length; i < l; i++) {\n    var pair = pairs[i].split('=');\n    qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n  }\n\n  return qry;\n};","/**\r\n * Parses an URI\r\n *\r\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\r\n * @api private\r\n */\nvar re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nvar parts = ['source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'];\n\nmodule.exports = function parseuri(str) {\n  var src = str,\n      b = str.indexOf('['),\n      e = str.indexOf(']');\n\n  if (b != -1 && e != -1) {\n    str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n  }\n\n  var m = re.exec(str || ''),\n      uri = {},\n      i = 14;\n\n  while (i--) {\n    uri[parts[i]] = m[i] || '';\n  }\n\n  if (b != -1 && e != -1) {\n    uri.source = src;\n    uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n    uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n    uri.ipv6uri = true;\n  }\n\n  return uri;\n};","module.exports = isBuf;\n/**\n * Returns true if obj is a buffer or an arraybuffer.\n *\n * @api private\n */\n\nfunction isBuf(obj) {\n  return global.Buffer && global.Buffer.isBuffer(obj) || global.ArrayBuffer && obj instanceof ArrayBuffer;\n}","/**\n * Module dependencies.\n */\nvar eio = require('engine.io-client');\n\nvar Socket = require('./socket');\n\nvar Emitter = require('component-emitter');\n\nvar parser = require('socket.io-parser');\n\nvar on = require('./on');\n\nvar bind = require('component-bind');\n\nvar debug = require('debug')('socket.io-client:manager');\n\nvar indexOf = require('indexof');\n\nvar Backoff = require('backo2');\n/**\n * IE6+ hasOwnProperty\n */\n\n\nvar has = Object.prototype.hasOwnProperty;\n/**\n * Module exports\n */\n\nmodule.exports = Manager;\n/**\n * `Manager` constructor.\n *\n * @param {String} engine instance or engine uri/opts\n * @param {Object} options\n * @api public\n */\n\nfunction Manager(uri, opts) {\n  if (!(this instanceof Manager)) return new Manager(uri, opts);\n\n  if (uri && 'object' === typeof uri) {\n    opts = uri;\n    uri = undefined;\n  }\n\n  opts = opts || {};\n  opts.path = opts.path || '/socket.io';\n  this.nsps = {};\n  this.subs = [];\n  this.opts = opts;\n  this.reconnection(opts.reconnection !== false);\n  this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n  this.reconnectionDelay(opts.reconnectionDelay || 1000);\n  this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n  this.randomizationFactor(opts.randomizationFactor || 0.5);\n  this.backoff = new Backoff({\n    min: this.reconnectionDelay(),\n    max: this.reconnectionDelayMax(),\n    jitter: this.randomizationFactor()\n  });\n  this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n  this.readyState = 'closed';\n  this.uri = uri;\n  this.connecting = [];\n  this.lastPing = null;\n  this.encoding = false;\n  this.packetBuffer = [];\n  this.encoder = new parser.Encoder();\n  this.decoder = new parser.Decoder();\n  this.autoConnect = opts.autoConnect !== false;\n  if (this.autoConnect) this.open();\n}\n/**\n * Propagate given event to sockets and emit on `this`\n *\n * @api private\n */\n\n\nManager.prototype.emitAll = function () {\n  this.emit.apply(this, arguments);\n\n  for (var nsp in this.nsps) {\n    if (has.call(this.nsps, nsp)) {\n      this.nsps[nsp].emit.apply(this.nsps[nsp], arguments);\n    }\n  }\n};\n/**\n * Update `socket.id` of all sockets\n *\n * @api private\n */\n\n\nManager.prototype.updateSocketIds = function () {\n  for (var nsp in this.nsps) {\n    if (has.call(this.nsps, nsp)) {\n      this.nsps[nsp].id = this.engine.id;\n    }\n  }\n};\n/**\n * Mix in `Emitter`.\n */\n\n\nEmitter(Manager.prototype);\n/**\n * Sets the `reconnection` config.\n *\n * @param {Boolean} true/false if it should automatically reconnect\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnection = function (v) {\n  if (!arguments.length) return this._reconnection;\n  this._reconnection = !!v;\n  return this;\n};\n/**\n * Sets the reconnection attempts config.\n *\n * @param {Number} max reconnection attempts before giving up\n * @return {Manager} self or value\n * @api public\n */\n\n\nManager.prototype.reconnectionAttempts = function (v) {\n  if (!arguments.length) return this._reconnectionAttempts;\n  this._reconnectionAttempts = v;\n  return this;\n};\n/**\n * Sets the delay between reconnections.\n *\n * @param {Number} delay\n * @return {Manager} self or value\n * @api public\n */\n\n\nManager.prototype.reconnectionDelay = function (v) {\n  if (!arguments.length) return this._reconnectionDelay;\n  this._reconnectionDelay = v;\n  this.backoff && this.backoff.setMin(v);\n  return this;\n};\n\nManager.prototype.randomizationFactor = function (v) {\n  if (!arguments.length) return this._randomizationFactor;\n  this._randomizationFactor = v;\n  this.backoff && this.backoff.setJitter(v);\n  return this;\n};\n/**\n * Sets the maximum delay between reconnections.\n *\n * @param {Number} delay\n * @return {Manager} self or value\n * @api public\n */\n\n\nManager.prototype.reconnectionDelayMax = function (v) {\n  if (!arguments.length) return this._reconnectionDelayMax;\n  this._reconnectionDelayMax = v;\n  this.backoff && this.backoff.setMax(v);\n  return this;\n};\n/**\n * Sets the connection timeout. `false` to disable\n *\n * @return {Manager} self or value\n * @api public\n */\n\n\nManager.prototype.timeout = function (v) {\n  if (!arguments.length) return this._timeout;\n  this._timeout = v;\n  return this;\n};\n/**\n * Starts trying to reconnect if reconnection is enabled and we have not\n * started reconnecting yet\n *\n * @api private\n */\n\n\nManager.prototype.maybeReconnectOnOpen = function () {\n  // Only try to reconnect if it's the first time we're connecting\n  if (!this.reconnecting && this._reconnection && this.backoff.attempts === 0) {\n    // keeps reconnection from firing twice for the same reconnection loop\n    this.reconnect();\n  }\n};\n/**\n * Sets the current transport `socket`.\n *\n * @param {Function} optional, callback\n * @return {Manager} self\n * @api public\n */\n\n\nManager.prototype.open = Manager.prototype.connect = function (fn, opts) {\n  debug('readyState %s', this.readyState);\n  if (~this.readyState.indexOf('open')) return this;\n  debug('opening %s', this.uri);\n  this.engine = eio(this.uri, this.opts);\n  var socket = this.engine;\n  var self = this;\n  this.readyState = 'opening';\n  this.skipReconnect = false; // emit `open`\n\n  var openSub = on(socket, 'open', function () {\n    self.onopen();\n    fn && fn();\n  }); // emit `connect_error`\n\n  var errorSub = on(socket, 'error', function (data) {\n    debug('connect_error');\n    self.cleanup();\n    self.readyState = 'closed';\n    self.emitAll('connect_error', data);\n\n    if (fn) {\n      var err = new Error('Connection error');\n      err.data = data;\n      fn(err);\n    } else {\n      // Only do this if there is no fn to handle the error\n      self.maybeReconnectOnOpen();\n    }\n  }); // emit `connect_timeout`\n\n  if (false !== this._timeout) {\n    var timeout = this._timeout;\n    debug('connect attempt will timeout after %d', timeout); // set timer\n\n    var timer = setTimeout(function () {\n      debug('connect attempt timed out after %d', timeout);\n      openSub.destroy();\n      socket.close();\n      socket.emit('error', 'timeout');\n      self.emitAll('connect_timeout', timeout);\n    }, timeout);\n    this.subs.push({\n      destroy: function destroy() {\n        clearTimeout(timer);\n      }\n    });\n  }\n\n  this.subs.push(openSub);\n  this.subs.push(errorSub);\n  return this;\n};\n/**\n * Called upon transport open.\n *\n * @api private\n */\n\n\nManager.prototype.onopen = function () {\n  debug('open'); // clear old subs\n\n  this.cleanup(); // mark as open\n\n  this.readyState = 'open';\n  this.emit('open'); // add new subs\n\n  var socket = this.engine;\n  this.subs.push(on(socket, 'data', bind(this, 'ondata')));\n  this.subs.push(on(socket, 'ping', bind(this, 'onping')));\n  this.subs.push(on(socket, 'pong', bind(this, 'onpong')));\n  this.subs.push(on(socket, 'error', bind(this, 'onerror')));\n  this.subs.push(on(socket, 'close', bind(this, 'onclose')));\n  this.subs.push(on(this.decoder, 'decoded', bind(this, 'ondecoded')));\n};\n/**\n * Called upon a ping.\n *\n * @api private\n */\n\n\nManager.prototype.onping = function () {\n  this.lastPing = new Date();\n  this.emitAll('ping');\n};\n/**\n * Called upon a packet.\n *\n * @api private\n */\n\n\nManager.prototype.onpong = function () {\n  this.emitAll('pong', new Date() - this.lastPing);\n};\n/**\n * Called with data.\n *\n * @api private\n */\n\n\nManager.prototype.ondata = function (data) {\n  this.decoder.add(data);\n};\n/**\n * Called when parser fully decodes a packet.\n *\n * @api private\n */\n\n\nManager.prototype.ondecoded = function (packet) {\n  this.emit('packet', packet);\n};\n/**\n * Called upon socket error.\n *\n * @api private\n */\n\n\nManager.prototype.onerror = function (err) {\n  debug('error', err);\n  this.emitAll('error', err);\n};\n/**\n * Creates a new socket for the given `nsp`.\n *\n * @return {Socket}\n * @api public\n */\n\n\nManager.prototype.socket = function (nsp, opts) {\n  var socket = this.nsps[nsp];\n\n  if (!socket) {\n    socket = new Socket(this, nsp, opts);\n    this.nsps[nsp] = socket;\n    var self = this;\n    socket.on('connecting', onConnecting);\n    socket.on('connect', function () {\n      socket.id = self.engine.id;\n    });\n\n    if (this.autoConnect) {\n      // manually call here since connecting evnet is fired before listening\n      onConnecting();\n    }\n  }\n\n  function onConnecting() {\n    if (!~indexOf(self.connecting, socket)) {\n      self.connecting.push(socket);\n    }\n  }\n\n  return socket;\n};\n/**\n * Called upon a socket close.\n *\n * @param {Socket} socket\n */\n\n\nManager.prototype.destroy = function (socket) {\n  var index = indexOf(this.connecting, socket);\n  if (~index) this.connecting.splice(index, 1);\n  if (this.connecting.length) return;\n  this.close();\n};\n/**\n * Writes a packet.\n *\n * @param {Object} packet\n * @api private\n */\n\n\nManager.prototype.packet = function (packet) {\n  debug('writing packet %j', packet);\n  var self = this;\n  if (packet.query && packet.type === 0) packet.nsp += '?' + packet.query;\n\n  if (!self.encoding) {\n    // encode, then write to engine with result\n    self.encoding = true;\n    this.encoder.encode(packet, function (encodedPackets) {\n      for (var i = 0; i < encodedPackets.length; i++) {\n        self.engine.write(encodedPackets[i], packet.options);\n      }\n\n      self.encoding = false;\n      self.processPacketQueue();\n    });\n  } else {\n    // add packet to the queue\n    self.packetBuffer.push(packet);\n  }\n};\n/**\n * If packet buffer is non-empty, begins encoding the\n * next packet in line.\n *\n * @api private\n */\n\n\nManager.prototype.processPacketQueue = function () {\n  if (this.packetBuffer.length > 0 && !this.encoding) {\n    var pack = this.packetBuffer.shift();\n    this.packet(pack);\n  }\n};\n/**\n * Clean up transport subscriptions and packet buffer.\n *\n * @api private\n */\n\n\nManager.prototype.cleanup = function () {\n  debug('cleanup');\n  var subsLength = this.subs.length;\n\n  for (var i = 0; i < subsLength; i++) {\n    var sub = this.subs.shift();\n    sub.destroy();\n  }\n\n  this.packetBuffer = [];\n  this.encoding = false;\n  this.lastPing = null;\n  this.decoder.destroy();\n};\n/**\n * Close the current socket.\n *\n * @api private\n */\n\n\nManager.prototype.close = Manager.prototype.disconnect = function () {\n  debug('disconnect');\n  this.skipReconnect = true;\n  this.reconnecting = false;\n\n  if ('opening' === this.readyState) {\n    // `onclose` will not fire because\n    // an open event never happened\n    this.cleanup();\n  }\n\n  this.backoff.reset();\n  this.readyState = 'closed';\n  if (this.engine) this.engine.close();\n};\n/**\n * Called upon engine close.\n *\n * @api private\n */\n\n\nManager.prototype.onclose = function (reason) {\n  debug('onclose');\n  this.cleanup();\n  this.backoff.reset();\n  this.readyState = 'closed';\n  this.emit('close', reason);\n\n  if (this._reconnection && !this.skipReconnect) {\n    this.reconnect();\n  }\n};\n/**\n * Attempt a reconnection.\n *\n * @api private\n */\n\n\nManager.prototype.reconnect = function () {\n  if (this.reconnecting || this.skipReconnect) return this;\n  var self = this;\n\n  if (this.backoff.attempts >= this._reconnectionAttempts) {\n    debug('reconnect failed');\n    this.backoff.reset();\n    this.emitAll('reconnect_failed');\n    this.reconnecting = false;\n  } else {\n    var delay = this.backoff.duration();\n    debug('will wait %dms before reconnect attempt', delay);\n    this.reconnecting = true;\n    var timer = setTimeout(function () {\n      if (self.skipReconnect) return;\n      debug('attempting reconnect');\n      self.emitAll('reconnect_attempt', self.backoff.attempts);\n      self.emitAll('reconnecting', self.backoff.attempts); // check again for the case socket closed in above events\n\n      if (self.skipReconnect) return;\n      self.open(function (err) {\n        if (err) {\n          debug('reconnect attempt error');\n          self.reconnecting = false;\n          self.reconnect();\n          self.emitAll('reconnect_error', err.data);\n        } else {\n          debug('reconnect success');\n          self.onreconnect();\n        }\n      });\n    }, delay);\n    this.subs.push({\n      destroy: function destroy() {\n        clearTimeout(timer);\n      }\n    });\n  }\n};\n/**\n * Called upon successful reconnect.\n *\n * @api private\n */\n\n\nManager.prototype.onreconnect = function () {\n  var attempt = this.backoff.attempts;\n  this.reconnecting = false;\n  this.backoff.reset();\n  this.updateSocketIds();\n  this.emitAll('reconnect', attempt);\n};","/**\n * Module dependencies\n */\nvar XMLHttpRequest = require('xmlhttprequest-ssl');\n\nvar XHR = require('./polling-xhr');\n\nvar JSONP = require('./polling-jsonp');\n\nvar websocket = require('./websocket');\n/**\n * Export transports.\n */\n\n\nexports.polling = polling;\nexports.websocket = websocket;\n/**\n * Polling transport polymorphic constructor.\n * Decides on xhr vs jsonp based on feature detection.\n *\n * @api private\n */\n\nfunction polling(opts) {\n  var xhr;\n  var xd = false;\n  var xs = false;\n  var jsonp = false !== opts.jsonp;\n\n  if (global.location) {\n    var isSSL = 'https:' === location.protocol;\n    var port = location.port; // some user agents have empty `location.port`\n\n    if (!port) {\n      port = isSSL ? 443 : 80;\n    }\n\n    xd = opts.hostname !== location.hostname || port !== opts.port;\n    xs = opts.secure !== isSSL;\n  }\n\n  opts.xdomain = xd;\n  opts.xscheme = xs;\n  xhr = new XMLHttpRequest(opts);\n\n  if ('open' in xhr && !opts.forceJSONP) {\n    return new XHR(opts);\n  } else {\n    if (!jsonp) throw new Error('JSONP disabled');\n    return new JSONP(opts);\n  }\n}","/**\n * Module dependencies.\n */\nvar Transport = require('../transport');\n\nvar parseqs = require('parseqs');\n\nvar parser = require('engine.io-parser');\n\nvar inherit = require('component-inherit');\n\nvar yeast = require('yeast');\n\nvar debug = require('debug')('engine.io-client:polling');\n/**\n * Module exports.\n */\n\n\nmodule.exports = Polling;\n/**\n * Is XHR2 supported?\n */\n\nvar hasXHR2 = function () {\n  var XMLHttpRequest = require('xmlhttprequest-ssl');\n\n  var xhr = new XMLHttpRequest({\n    xdomain: false\n  });\n  return null != xhr.responseType;\n}();\n/**\n * Polling interface.\n *\n * @param {Object} opts\n * @api private\n */\n\n\nfunction Polling(opts) {\n  var forceBase64 = opts && opts.forceBase64;\n\n  if (!hasXHR2 || forceBase64) {\n    this.supportsBinary = false;\n  }\n\n  Transport.call(this, opts);\n}\n/**\n * Inherits from Transport.\n */\n\n\ninherit(Polling, Transport);\n/**\n * Transport name.\n */\n\nPolling.prototype.name = 'polling';\n/**\n * Opens the socket (triggers polling). We write a PING message to determine\n * when the transport is open.\n *\n * @api private\n */\n\nPolling.prototype.doOpen = function () {\n  this.poll();\n};\n/**\n * Pauses polling.\n *\n * @param {Function} callback upon buffers are flushed and transport is paused\n * @api private\n */\n\n\nPolling.prototype.pause = function (onPause) {\n  var self = this;\n  this.readyState = 'pausing';\n\n  function pause() {\n    debug('paused');\n    self.readyState = 'paused';\n    onPause();\n  }\n\n  if (this.polling || !this.writable) {\n    var total = 0;\n\n    if (this.polling) {\n      debug('we are currently polling - waiting to pause');\n      total++;\n      this.once('pollComplete', function () {\n        debug('pre-pause polling complete');\n        --total || pause();\n      });\n    }\n\n    if (!this.writable) {\n      debug('we are currently writing - waiting to pause');\n      total++;\n      this.once('drain', function () {\n        debug('pre-pause writing complete');\n        --total || pause();\n      });\n    }\n  } else {\n    pause();\n  }\n};\n/**\n * Starts polling cycle.\n *\n * @api public\n */\n\n\nPolling.prototype.poll = function () {\n  debug('polling');\n  this.polling = true;\n  this.doPoll();\n  this.emit('poll');\n};\n/**\n * Overloads onData to detect payloads.\n *\n * @api private\n */\n\n\nPolling.prototype.onData = function (data) {\n  var self = this;\n  debug('polling got data %s', data);\n\n  var callback = function callback(packet, index, total) {\n    // if its the first message we consider the transport open\n    if ('opening' === self.readyState) {\n      self.onOpen();\n    } // if its a close packet, we close the ongoing requests\n\n\n    if ('close' === packet.type) {\n      self.onClose();\n      return false;\n    } // otherwise bypass onData and handle the message\n\n\n    self.onPacket(packet);\n  }; // decode payload\n\n\n  parser.decodePayload(data, this.socket.binaryType, callback); // if an event did not trigger closing\n\n  if ('closed' !== this.readyState) {\n    // if we got data we're not polling\n    this.polling = false;\n    this.emit('pollComplete');\n\n    if ('open' === this.readyState) {\n      this.poll();\n    } else {\n      debug('ignoring poll - transport state \"%s\"', this.readyState);\n    }\n  }\n};\n/**\n * For polling, send a close packet.\n *\n * @api private\n */\n\n\nPolling.prototype.doClose = function () {\n  var self = this;\n\n  function close() {\n    debug('writing close packet');\n    self.write([{\n      type: 'close'\n    }]);\n  }\n\n  if ('open' === this.readyState) {\n    debug('transport open - closing');\n    close();\n  } else {\n    // in case we're trying to close while\n    // handshaking is in progress (GH-164)\n    debug('transport not open - deferring close');\n    this.once('open', close);\n  }\n};\n/**\n * Writes a packets payload.\n *\n * @param {Array} data packets\n * @param {Function} drain callback\n * @api private\n */\n\n\nPolling.prototype.write = function (packets) {\n  var self = this;\n  this.writable = false;\n\n  var callbackfn = function callbackfn() {\n    self.writable = true;\n    self.emit('drain');\n  };\n\n  parser.encodePayload(packets, this.supportsBinary, function (data) {\n    self.doWrite(data, callbackfn);\n  });\n};\n/**\n * Generates uri for connection.\n *\n * @api private\n */\n\n\nPolling.prototype.uri = function () {\n  var query = this.query || {};\n  var schema = this.secure ? 'https' : 'http';\n  var port = ''; // cache busting is forced\n\n  if (false !== this.timestampRequests) {\n    query[this.timestampParam] = yeast();\n  }\n\n  if (!this.supportsBinary && !query.sid) {\n    query.b64 = 1;\n  }\n\n  query = parseqs.encode(query); // avoid port if default for schema\n\n  if (this.port && ('https' === schema && Number(this.port) !== 443 || 'http' === schema && Number(this.port) !== 80)) {\n    port = ':' + this.port;\n  } // prepend ? to query\n\n\n  if (query.length) {\n    query = '?' + query;\n  }\n\n  var ipv6 = this.hostname.indexOf(':') !== -1;\n  return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;\n};","/*\n * Module requirements.\n */\nvar isArray = require('isarray');\n/**\n * Module exports.\n */\n\n\nmodule.exports = hasBinary;\n/**\n * Checks for binary data.\n *\n * Right now only Buffer and ArrayBuffer are supported..\n *\n * @param {Object} anything\n * @api public\n */\n\nfunction hasBinary(data) {\n  function _hasBinary(obj) {\n    if (!obj) return false;\n\n    if (global.Buffer && global.Buffer.isBuffer && global.Buffer.isBuffer(obj) || global.ArrayBuffer && obj instanceof ArrayBuffer || global.Blob && obj instanceof Blob || global.File && obj instanceof File) {\n      return true;\n    }\n\n    if (isArray(obj)) {\n      for (var i = 0; i < obj.length; i++) {\n        if (_hasBinary(obj[i])) {\n          return true;\n        }\n      }\n    } else if (obj && 'object' == typeof obj) {\n      // see: https://github.com/Automattic/has-binary/pull/4\n      if (obj.toJSON && 'function' == typeof obj.toJSON) {\n        obj = obj.toJSON();\n      }\n\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && _hasBinary(obj[key])) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  return _hasBinary(data);\n}","'use strict';\n\nvar alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split(''),\n    length = 64,\n    map = {},\n    seed = 0,\n    i = 0,\n    prev;\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\n\nfunction encode(num) {\n  var encoded = '';\n\n  do {\n    encoded = alphabet[num % length] + encoded;\n    num = Math.floor(num / length);\n  } while (num > 0);\n\n  return encoded;\n}\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\n\n\nfunction decode(str) {\n  var decoded = 0;\n\n  for (i = 0; i < str.length; i++) {\n    decoded = decoded * length + map[str.charAt(i)];\n  }\n\n  return decoded;\n}\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\n\n\nfunction yeast() {\n  var now = encode(+new Date());\n  if (now !== prev) return seed = 0, prev = now;\n  return now + '.' + encode(seed++);\n} //\n// Map each character to its index.\n//\n\n\nfor (; i < length; i++) {\n  map[alphabet[i]] = i;\n} //\n// Expose the `yeast`, `encode` and `decode` functions.\n//\n\n\nyeast.encode = encode;\nyeast.decode = decode;\nmodule.exports = yeast;","var indexOf = [].indexOf;\n\nmodule.exports = function (arr, obj) {\n  if (indexOf) return arr.indexOf(obj);\n\n  for (var i = 0; i < arr.length; ++i) {\n    if (arr[i] === obj) return i;\n  }\n\n  return -1;\n};","/**\n * Module dependencies.\n */\nvar parser = require('socket.io-parser');\n\nvar Emitter = require('component-emitter');\n\nvar toArray = require('to-array');\n\nvar on = require('./on');\n\nvar bind = require('component-bind');\n\nvar debug = require('debug')('socket.io-client:socket');\n\nvar hasBin = require('has-binary');\n/**\n * Module exports.\n */\n\n\nmodule.exports = exports = Socket;\n/**\n * Internal events (blacklisted).\n * These events can't be emitted by the user.\n *\n * @api private\n */\n\nvar events = {\n  connect: 1,\n  connect_error: 1,\n  connect_timeout: 1,\n  connecting: 1,\n  disconnect: 1,\n  error: 1,\n  reconnect: 1,\n  reconnect_attempt: 1,\n  reconnect_failed: 1,\n  reconnect_error: 1,\n  reconnecting: 1,\n  ping: 1,\n  pong: 1\n};\n/**\n * Shortcut to `Emitter#emit`.\n */\n\nvar emit = Emitter.prototype.emit;\n/**\n * `Socket` constructor.\n *\n * @api public\n */\n\nfunction Socket(io, nsp, opts) {\n  this.io = io;\n  this.nsp = nsp;\n  this.json = this; // compat\n\n  this.ids = 0;\n  this.acks = {};\n  this.receiveBuffer = [];\n  this.sendBuffer = [];\n  this.connected = false;\n  this.disconnected = true;\n\n  if (opts && opts.query) {\n    this.query = opts.query;\n  }\n\n  if (this.io.autoConnect) this.open();\n}\n/**\n * Mix in `Emitter`.\n */\n\n\nEmitter(Socket.prototype);\n/**\n * Subscribe to open, close and packet events\n *\n * @api private\n */\n\nSocket.prototype.subEvents = function () {\n  if (this.subs) return;\n  var io = this.io;\n  this.subs = [on(io, 'open', bind(this, 'onopen')), on(io, 'packet', bind(this, 'onpacket')), on(io, 'close', bind(this, 'onclose'))];\n};\n/**\n * \"Opens\" the socket.\n *\n * @api public\n */\n\n\nSocket.prototype.open = Socket.prototype.connect = function () {\n  if (this.connected) return this;\n  this.subEvents();\n  this.io.open(); // ensure open\n\n  if ('open' === this.io.readyState) this.onopen();\n  this.emit('connecting');\n  return this;\n};\n/**\n * Sends a `message` event.\n *\n * @return {Socket} self\n * @api public\n */\n\n\nSocket.prototype.send = function () {\n  var args = toArray(arguments);\n  args.unshift('message');\n  this.emit.apply(this, args);\n  return this;\n};\n/**\n * Override `emit`.\n * If the event is in `events`, it's emitted normally.\n *\n * @param {String} event name\n * @return {Socket} self\n * @api public\n */\n\n\nSocket.prototype.emit = function (ev) {\n  if (events.hasOwnProperty(ev)) {\n    emit.apply(this, arguments);\n    return this;\n  }\n\n  var args = toArray(arguments);\n  var parserType = parser.EVENT; // default\n\n  if (hasBin(args)) {\n    parserType = parser.BINARY_EVENT;\n  } // binary\n\n\n  var packet = {\n    type: parserType,\n    data: args\n  };\n  packet.options = {};\n  packet.options.compress = !this.flags || false !== this.flags.compress; // event ack callback\n\n  if ('function' === typeof args[args.length - 1]) {\n    debug('emitting packet with ack id %d', this.ids);\n    this.acks[this.ids] = args.pop();\n    packet.id = this.ids++;\n  }\n\n  if (this.connected) {\n    this.packet(packet);\n  } else {\n    this.sendBuffer.push(packet);\n  }\n\n  delete this.flags;\n  return this;\n};\n/**\n * Sends a packet.\n *\n * @param {Object} packet\n * @api private\n */\n\n\nSocket.prototype.packet = function (packet) {\n  packet.nsp = this.nsp;\n  this.io.packet(packet);\n};\n/**\n * Called upon engine `open`.\n *\n * @api private\n */\n\n\nSocket.prototype.onopen = function () {\n  debug('transport is open - connecting'); // write connect packet if necessary\n\n  if ('/' !== this.nsp) {\n    if (this.query) {\n      this.packet({\n        type: parser.CONNECT,\n        query: this.query\n      });\n    } else {\n      this.packet({\n        type: parser.CONNECT\n      });\n    }\n  }\n};\n/**\n * Called upon engine `close`.\n *\n * @param {String} reason\n * @api private\n */\n\n\nSocket.prototype.onclose = function (reason) {\n  debug('close (%s)', reason);\n  this.connected = false;\n  this.disconnected = true;\n  delete this.id;\n  this.emit('disconnect', reason);\n};\n/**\n * Called with socket packet.\n *\n * @param {Object} packet\n * @api private\n */\n\n\nSocket.prototype.onpacket = function (packet) {\n  if (packet.nsp !== this.nsp) return;\n\n  switch (packet.type) {\n    case parser.CONNECT:\n      this.onconnect();\n      break;\n\n    case parser.EVENT:\n      this.onevent(packet);\n      break;\n\n    case parser.BINARY_EVENT:\n      this.onevent(packet);\n      break;\n\n    case parser.ACK:\n      this.onack(packet);\n      break;\n\n    case parser.BINARY_ACK:\n      this.onack(packet);\n      break;\n\n    case parser.DISCONNECT:\n      this.ondisconnect();\n      break;\n\n    case parser.ERROR:\n      this.emit('error', packet.data);\n      break;\n  }\n};\n/**\n * Called upon a server event.\n *\n * @param {Object} packet\n * @api private\n */\n\n\nSocket.prototype.onevent = function (packet) {\n  var args = packet.data || [];\n  debug('emitting event %j', args);\n\n  if (null != packet.id) {\n    debug('attaching ack callback to event');\n    args.push(this.ack(packet.id));\n  }\n\n  if (this.connected) {\n    emit.apply(this, args);\n  } else {\n    this.receiveBuffer.push(args);\n  }\n};\n/**\n * Produces an ack callback to emit with an event.\n *\n * @api private\n */\n\n\nSocket.prototype.ack = function (id) {\n  var self = this;\n  var sent = false;\n  return function () {\n    // prevent double callbacks\n    if (sent) return;\n    sent = true;\n    var args = toArray(arguments);\n    debug('sending ack %j', args);\n    var type = hasBin(args) ? parser.BINARY_ACK : parser.ACK;\n    self.packet({\n      type: type,\n      id: id,\n      data: args\n    });\n  };\n};\n/**\n * Called upon a server acknowlegement.\n *\n * @param {Object} packet\n * @api private\n */\n\n\nSocket.prototype.onack = function (packet) {\n  var ack = this.acks[packet.id];\n\n  if ('function' === typeof ack) {\n    debug('calling ack %s with %j', packet.id, packet.data);\n    ack.apply(this, packet.data);\n    delete this.acks[packet.id];\n  } else {\n    debug('bad ack %s', packet.id);\n  }\n};\n/**\n * Called upon server connect.\n *\n * @api private\n */\n\n\nSocket.prototype.onconnect = function () {\n  this.connected = true;\n  this.disconnected = false;\n  this.emit('connect');\n  this.emitBuffered();\n};\n/**\n * Emit buffered events (received and emitted).\n *\n * @api private\n */\n\n\nSocket.prototype.emitBuffered = function () {\n  var i;\n\n  for (i = 0; i < this.receiveBuffer.length; i++) {\n    emit.apply(this, this.receiveBuffer[i]);\n  }\n\n  this.receiveBuffer = [];\n\n  for (i = 0; i < this.sendBuffer.length; i++) {\n    this.packet(this.sendBuffer[i]);\n  }\n\n  this.sendBuffer = [];\n};\n/**\n * Called upon server disconnect.\n *\n * @api private\n */\n\n\nSocket.prototype.ondisconnect = function () {\n  debug('server disconnect (%s)', this.nsp);\n  this.destroy();\n  this.onclose('io server disconnect');\n};\n/**\n * Called upon forced client/server side disconnections,\n * this method ensures the manager stops tracking us and\n * that reconnections don't get triggered for this.\n *\n * @api private.\n */\n\n\nSocket.prototype.destroy = function () {\n  if (this.subs) {\n    // clean subscriptions to avoid reconnections\n    for (var i = 0; i < this.subs.length; i++) {\n      this.subs[i].destroy();\n    }\n\n    this.subs = null;\n  }\n\n  this.io.destroy(this);\n};\n/**\n * Disconnects the socket manually.\n *\n * @return {Socket} self\n * @api public\n */\n\n\nSocket.prototype.close = Socket.prototype.disconnect = function () {\n  if (this.connected) {\n    debug('performing disconnect (%s)', this.nsp);\n    this.packet({\n      type: parser.DISCONNECT\n    });\n  } // remove socket from pool\n\n\n  this.destroy();\n\n  if (this.connected) {\n    // fire events\n    this.onclose('io client disconnect');\n  }\n\n  return this;\n};\n/**\n * Sets the compress flag.\n *\n * @param {Boolean} if `true`, compresses the sending data\n * @return {Socket} self\n * @api public\n */\n\n\nSocket.prototype.compress = function (compress) {\n  this.flags = this.flags || {};\n  this.flags.compress = compress;\n  return this;\n};","/**\r\n * Expose `Emitter`.\r\n */\nif (typeof module !== 'undefined') {\n  module.exports = Emitter;\n}\n/**\r\n * Initialize a new `Emitter`.\r\n *\r\n * @api public\r\n */\n\n\nfunction Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n;\n/**\r\n * Mixin the emitter properties.\r\n *\r\n * @param {Object} obj\r\n * @return {Object}\r\n * @api private\r\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n\n  return obj;\n}\n/**\r\n * Listen on the given `event` with `fn`.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\n\n\nEmitter.prototype.on = Emitter.prototype.addEventListener = function (event, fn) {\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || []).push(fn);\n  return this;\n};\n/**\r\n * Adds an `event` listener that will be invoked a single\r\n * time then automatically removed.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\n\n\nEmitter.prototype.once = function (event, fn) {\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n/**\r\n * Remove the given callback for `event` or all\r\n * registered callbacks.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\n\n\nEmitter.prototype.off = Emitter.prototype.removeListener = Emitter.prototype.removeAllListeners = Emitter.prototype.removeEventListener = function (event, fn) {\n  this._callbacks = this._callbacks || {}; // all\n\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  } // specific event\n\n\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this; // remove all handlers\n\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  } // remove specific handler\n\n\n  var cb;\n\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  return this;\n};\n/**\r\n * Emit `event` with the given args.\r\n *\r\n * @param {String} event\r\n * @param {Mixed} ...\r\n * @return {Emitter}\r\n */\n\n\nEmitter.prototype.emit = function (event) {\n  this._callbacks = this._callbacks || {};\n  var args = [].slice.call(arguments, 1),\n      callbacks = this._callbacks['$' + event];\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n/**\r\n * Return array of callbacks for `event`.\r\n *\r\n * @param {String} event\r\n * @return {Array}\r\n * @api public\r\n */\n\n\nEmitter.prototype.listeners = function (event) {\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n/**\r\n * Check if this emitter has `event` handlers.\r\n *\r\n * @param {String} event\r\n * @return {Boolean}\r\n * @api public\r\n */\n\n\nEmitter.prototype.hasListeners = function (event) {\n  return !!this.listeners(event).length;\n};","/**\n * Module exports.\n */\nmodule.exports = on;\n/**\n * Helper for subscriptions.\n *\n * @param {Object|EventEmitter} obj with `Emitter` mixin or `EventEmitter`\n * @param {String} event name\n * @param {Function} callback\n * @api public\n */\n\nfunction on(obj, ev, fn) {\n  obj.on(ev, fn);\n  return {\n    destroy: function destroy() {\n      obj.removeListener(ev, fn);\n    }\n  };\n}","/**\n * Slice reference.\n */\nvar slice = [].slice;\n/**\n * Bind `obj` to `fn`.\n *\n * @param {Object} obj\n * @param {Function|String} fn or string\n * @return {Function}\n * @api public\n */\n\nmodule.exports = function (obj, fn) {\n  if ('string' == typeof fn) fn = obj[fn];\n  if ('function' != typeof fn) throw new Error('bind() requires a function');\n  var args = slice.call(arguments, 2);\n  return function () {\n    return fn.apply(obj, args.concat(slice.call(arguments)));\n  };\n};","/**\n * Module dependencies.\n */\nvar url = require('./url');\n\nvar parser = require('socket.io-parser');\n\nvar Manager = require('./manager');\n\nvar debug = require('debug')('socket.io-client');\n/**\n * Module exports.\n */\n\n\nmodule.exports = exports = lookup;\n/**\n * Managers cache.\n */\n\nvar cache = exports.managers = {};\n/**\n * Looks up an existing `Manager` for multiplexing.\n * If the user summons:\n *\n *   `io('http://localhost/a');`\n *   `io('http://localhost/b');`\n *\n * We reuse the existing instance based on same scheme/port/host,\n * and we initialize sockets for each namespace.\n *\n * @api public\n */\n\nfunction lookup(uri, opts) {\n  if (typeof uri === 'object') {\n    opts = uri;\n    uri = undefined;\n  }\n\n  opts = opts || {};\n  var parsed = url(uri);\n  var source = parsed.source;\n  var id = parsed.id;\n  var path = parsed.path;\n  var sameNamespace = cache[id] && path in cache[id].nsps;\n  var newConnection = opts.forceNew || opts['force new connection'] || false === opts.multiplex || sameNamespace;\n  var io;\n\n  if (newConnection) {\n    debug('ignoring socket cache for %s', source);\n    io = Manager(source, opts);\n  } else {\n    if (!cache[id]) {\n      debug('new io instance for %s', source);\n      cache[id] = Manager(source, opts);\n    }\n\n    io = cache[id];\n  }\n\n  if (parsed.query && !opts.query) {\n    opts.query = parsed.query;\n  } else if (opts && 'object' === typeof opts.query) {\n    opts.query = encodeQueryString(opts.query);\n  }\n\n  return io.socket(parsed.path, opts);\n}\n/**\n *  Helper method to parse query objects to string.\n * @param {object} query\n * @returns {string}\n */\n\n\nfunction encodeQueryString(obj) {\n  var str = [];\n\n  for (var p in obj) {\n    if (obj.hasOwnProperty(p)) {\n      str.push(encodeURIComponent(p) + '=' + encodeURIComponent(obj[p]));\n    }\n  }\n\n  return str.join('&');\n}\n/**\n * Protocol version.\n *\n * @api public\n */\n\n\nexports.protocol = parser.protocol;\n/**\n * `connect`.\n *\n * @param {String} uri\n * @api public\n */\n\nexports.connect = lookup;\n/**\n * Expose constructors for standalone build.\n *\n * @api public\n */\n\nexports.Manager = require('./manager');\nexports.Socket = require('./socket');","/**\n * Module dependencies.\n */\nvar parseuri = require('parseuri');\n\nvar debug = require('debug')('socket.io-client:url');\n/**\n * Module exports.\n */\n\n\nmodule.exports = url;\n/**\n * URL parser.\n *\n * @param {String} url\n * @param {Object} An object meant to mimic window.location.\n *                 Defaults to window.location.\n * @api public\n */\n\nfunction url(uri, loc) {\n  var obj = uri; // default to window.location\n\n  loc = loc || global.location;\n  if (null == uri) uri = loc.protocol + '//' + loc.host; // relative path support\n\n  if ('string' === typeof uri) {\n    if ('/' === uri.charAt(0)) {\n      if ('/' === uri.charAt(1)) {\n        uri = loc.protocol + uri;\n      } else {\n        uri = loc.host + uri;\n      }\n    }\n\n    if (!/^(https?|wss?):\\/\\//.test(uri)) {\n      debug('protocol-less url %s', uri);\n\n      if ('undefined' !== typeof loc) {\n        uri = loc.protocol + '//' + uri;\n      } else {\n        uri = 'https://' + uri;\n      }\n    } // parse\n\n\n    debug('parse %s', uri);\n    obj = parseuri(uri);\n  } // make sure we treat `localhost:80` and `localhost` equally\n\n\n  if (!obj.port) {\n    if (/^(http|ws)$/.test(obj.protocol)) {\n      obj.port = '80';\n    } else if (/^(http|ws)s$/.test(obj.protocol)) {\n      obj.port = '443';\n    }\n  }\n\n  obj.path = obj.path || '/';\n  var ipv6 = obj.host.indexOf(':') !== -1;\n  var host = ipv6 ? '[' + obj.host + ']' : obj.host; // define unique id\n\n  obj.id = obj.protocol + '://' + host + ':' + obj.port; // define href\n\n  obj.href = obj.protocol + '://' + host + (loc && loc.port === obj.port ? '' : ':' + obj.port);\n  return obj;\n}","/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\nexports = module.exports = debug.debug = debug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = require('ms');\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lowercased letter, i.e. \"n\".\n */\n\nexports.formatters = {};\n/**\n * Previously assigned color.\n */\n\nvar prevColor = 0;\n/**\n * Previous log timestamp.\n */\n\nvar prevTime;\n/**\n * Select a color.\n *\n * @return {Number}\n * @api private\n */\n\nfunction selectColor() {\n  return exports.colors[prevColor++ % exports.colors.length];\n}\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\n\nfunction debug(namespace) {\n  // define the `disabled` version\n  function disabled() {}\n\n  disabled.enabled = false; // define the `enabled` version\n\n  function enabled() {\n    var self = enabled; // set `diff` timestamp\n\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr; // add the `color` if not set\n\n    if (null == self.useColors) self.useColors = exports.useColors();\n    if (null == self.color && self.useColors) self.color = selectColor();\n    var args = new Array(arguments.length);\n\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %o\n      args = ['%o'].concat(args);\n    } // apply any `formatters` transformations\n\n\n    var index = 0;\n    args[0] = args[0].replace(/%([a-z%])/g, function (match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val); // now we need to remove `args[index]` since it's inlined in the `format`\n\n        args.splice(index, 1);\n        index--;\n      }\n\n      return match;\n    }); // apply env-specific formatting\n\n    args = exports.formatArgs.apply(self, args);\n    var logFn = enabled.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n\n  enabled.enabled = true;\n  var fn = exports.enabled(namespace) ? enabled : disabled;\n  fn.namespace = namespace;\n  return fn;\n}\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n  var split = (namespaces || '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (var i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n\n    namespaces = split[i].replace(/[\\\\^$+?.()|[\\]{}]/g, '\\\\$&').replace(/\\*/g, '.*?');\n\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n}\n/**\n * Disable debug output.\n *\n * @api public\n */\n\n\nfunction disable() {\n  exports.enable('');\n}\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\n\nfunction enabled(name) {\n  var i, len;\n\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}","/**\n * Helpers.\n */\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} options\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function (val, options) {\n  options = options || {};\n  var type = typeof val;\n\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isNaN(val) === false) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n\n  throw new Error('val is not a non-empty string or a valid number. val=' + JSON.stringify(val));\n};\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\n\nfunction parse(str) {\n  str = String(str);\n\n  if (str.length > 10000) {\n    return;\n  }\n\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(str);\n\n  if (!match) {\n    return;\n  }\n\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n\n    default:\n      return undefined;\n  }\n}\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\n\nfunction fmtShort(ms) {\n  if (ms >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n\n  if (ms >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n\n  if (ms >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n\n  if (ms >= s) {\n    return Math.round(ms / s) + 's';\n  }\n\n  return ms + 'ms';\n}\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\n\nfunction fmtLong(ms) {\n  return plural(ms, d, 'day') || plural(ms, h, 'hour') || plural(ms, m, 'minute') || plural(ms, s, 'second') || ms + ' ms';\n}\n/**\n * Pluralization helper.\n */\n\n\nfunction plural(ms, n, name) {\n  if (ms < n) {\n    return;\n  }\n\n  if (ms < n * 1.5) {\n    return Math.floor(ms / n) + ' ' + name;\n  }\n\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}","/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\nexports = module.exports = require('./debug');\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome && 'undefined' != typeof chrome.storage ? chrome.storage.local : localstorage();\n/**\n * Colors.\n */\n\nexports.colors = ['lightseagreen', 'forestgreen', 'goldenrod', 'dodgerblue', 'darkorchid', 'crimson'];\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // is webkit? http://stackoverflow.com/a/16459606/376773\n  return 'WebkitAppearance' in document.documentElement.style || // is firebug? http://stackoverflow.com/a/398120/376773\n  window.console && (console.firebug || console.exception && console.table) || // is firefox >= v31?\n  // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n  navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31;\n}\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\n\nexports.formatters.j = function (v) {\n  return JSON.stringify(v);\n};\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\n\nfunction formatArgs() {\n  var args = arguments;\n  var useColors = this.useColors;\n  args[0] = (useColors ? '%c' : '') + this.namespace + (useColors ? ' %c' : ' ') + args[0] + (useColors ? '%c ' : ' ') + '+' + exports.humanize(this.diff);\n  if (!useColors) return args;\n  var c = 'color: ' + this.color;\n  args = [args[0], c, 'color: inherit'].concat(Array.prototype.slice.call(args, 1)); // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-z%]/g, function (match) {\n    if ('%%' === match) return;\n    index++;\n\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n  args.splice(lastC, 0, c);\n  return args;\n}\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console && console.log && Function.prototype.apply.call(console.log, console, arguments);\n}\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch (e) {}\n}\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\n\nfunction load() {\n  var r;\n\n  try {\n    r = exports.storage.debug;\n  } catch (e) {}\n\n  return r;\n}\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\n\nexports.enable(load());\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}","/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\nexports = module.exports = debug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = require('ms');\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lowercased letter, i.e. \"n\".\n */\n\nexports.formatters = {};\n/**\n * Previously assigned color.\n */\n\nvar prevColor = 0;\n/**\n * Previous log timestamp.\n */\n\nvar prevTime;\n/**\n * Select a color.\n *\n * @return {Number}\n * @api private\n */\n\nfunction selectColor() {\n  return exports.colors[prevColor++ % exports.colors.length];\n}\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\n\nfunction debug(namespace) {\n  // define the `disabled` version\n  function disabled() {}\n\n  disabled.enabled = false; // define the `enabled` version\n\n  function enabled() {\n    var self = enabled; // set `diff` timestamp\n\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr; // add the `color` if not set\n\n    if (null == self.useColors) self.useColors = exports.useColors();\n    if (null == self.color && self.useColors) self.color = selectColor();\n    var args = Array.prototype.slice.call(arguments);\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %o\n      args = ['%o'].concat(args);\n    } // apply any `formatters` transformations\n\n\n    var index = 0;\n    args[0] = args[0].replace(/%([a-z%])/g, function (match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val); // now we need to remove `args[index]` since it's inlined in the `format`\n\n        args.splice(index, 1);\n        index--;\n      }\n\n      return match;\n    });\n\n    if ('function' === typeof exports.formatArgs) {\n      args = exports.formatArgs.apply(self, args);\n    }\n\n    var logFn = enabled.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n\n  enabled.enabled = true;\n  var fn = exports.enabled(namespace) ? enabled : disabled;\n  fn.namespace = namespace;\n  return fn;\n}\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n  var split = (namespaces || '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (var i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n\n    namespaces = split[i].replace(/\\*/g, '.*?');\n\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n}\n/**\n * Disable debug output.\n *\n * @api public\n */\n\n\nfunction disable() {\n  exports.enable('');\n}\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\n\nfunction enabled(name) {\n  var i, len;\n\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}","/**\n * Helpers.\n */\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} options\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function (val, options) {\n  options = options || {};\n  if ('string' == typeof val) return parse(val);\n  return options.long ? long(val) : short(val);\n};\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\n\nfunction parse(str) {\n  str = '' + str;\n  if (str.length > 10000) return;\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(str);\n  if (!match) return;\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n  }\n}\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\n\nfunction short(ms) {\n  if (ms >= d) return Math.round(ms / d) + 'd';\n  if (ms >= h) return Math.round(ms / h) + 'h';\n  if (ms >= m) return Math.round(ms / m) + 'm';\n  if (ms >= s) return Math.round(ms / s) + 's';\n  return ms + 'ms';\n}\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\n\nfunction long(ms) {\n  return plural(ms, d, 'day') || plural(ms, h, 'hour') || plural(ms, m, 'minute') || plural(ms, s, 'second') || ms + ' ms';\n}\n/**\n * Pluralization helper.\n */\n\n\nfunction plural(ms, n, name) {\n  if (ms < n) return;\n  if (ms < n * 1.5) return Math.floor(ms / n) + ' ' + name;\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}","/*! JSON v3.3.2 | http://bestiejs.github.io/json3 | Copyright 2012-2014, Kit Cambridge | http://kit.mit-license.org */\n;\n(function () {\n  // Detect the `define` function exposed by asynchronous module loaders. The\n  // strict `define` check is necessary for compatibility with `r.js`.\n  var isLoader = typeof define === \"function\" && define.amd; // A set of types used to distinguish objects from primitives.\n\n  var objectTypes = {\n    \"function\": true,\n    \"object\": true\n  }; // Detect the `exports` object exposed by CommonJS implementations.\n\n  var freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports; // Use the `global` object exposed by Node (including Browserify via\n  // `insert-module-globals`), Narwhal, and Ringo as the default context,\n  // and the `window` object in browsers. Rhino exports a `global` function\n  // instead.\n\n  var root = objectTypes[typeof window] && window || this,\n      freeGlobal = freeExports && objectTypes[typeof module] && module && !module.nodeType && typeof global == \"object\" && global;\n\n  if (freeGlobal && (freeGlobal[\"global\"] === freeGlobal || freeGlobal[\"window\"] === freeGlobal || freeGlobal[\"self\"] === freeGlobal)) {\n    root = freeGlobal;\n  } // Public: Initializes JSON 3 using the given `context` object, attaching the\n  // `stringify` and `parse` functions to the specified `exports` object.\n\n\n  function runInContext(context, exports) {\n    context || (context = root[\"Object\"]());\n    exports || (exports = root[\"Object\"]()); // Native constructor aliases.\n\n    var Number = context[\"Number\"] || root[\"Number\"],\n        String = context[\"String\"] || root[\"String\"],\n        Object = context[\"Object\"] || root[\"Object\"],\n        Date = context[\"Date\"] || root[\"Date\"],\n        SyntaxError = context[\"SyntaxError\"] || root[\"SyntaxError\"],\n        TypeError = context[\"TypeError\"] || root[\"TypeError\"],\n        Math = context[\"Math\"] || root[\"Math\"],\n        nativeJSON = context[\"JSON\"] || root[\"JSON\"]; // Delegate to the native `stringify` and `parse` implementations.\n\n    if (typeof nativeJSON == \"object\" && nativeJSON) {\n      exports.stringify = nativeJSON.stringify;\n      exports.parse = nativeJSON.parse;\n    } // Convenience aliases.\n\n\n    var objectProto = Object.prototype,\n        getClass = objectProto.toString,\n        _isProperty,\n        _forEach,\n        undef; // Test the `Date#getUTC*` methods. Based on work by @Yaffle.\n\n\n    var isExtended = new Date(-3509827334573292);\n\n    try {\n      // The `getUTCFullYear`, `Month`, and `Date` methods return nonsensical\n      // results for certain dates in Opera >= 10.53.\n      isExtended = isExtended.getUTCFullYear() == -109252 && isExtended.getUTCMonth() === 0 && isExtended.getUTCDate() === 1 && // Safari < 2.0.2 stores the internal millisecond time value correctly,\n      // but clips the values returned by the date methods to the range of\n      // signed 32-bit integers ([-2 ** 31, 2 ** 31 - 1]).\n      isExtended.getUTCHours() == 10 && isExtended.getUTCMinutes() == 37 && isExtended.getUTCSeconds() == 6 && isExtended.getUTCMilliseconds() == 708;\n    } catch (exception) {} // Internal: Determines whether the native `JSON.stringify` and `parse`\n    // implementations are spec-compliant. Based on work by Ken Snyder.\n\n\n    function has(name) {\n      if (has[name] !== undef) {\n        // Return cached feature test result.\n        return has[name];\n      }\n\n      var isSupported;\n\n      if (name == \"bug-string-char-index\") {\n        // IE <= 7 doesn't support accessing string characters using square\n        // bracket notation. IE 8 only supports this for primitives.\n        isSupported = \"a\"[0] != \"a\";\n      } else if (name == \"json\") {\n        // Indicates whether both `JSON.stringify` and `JSON.parse` are\n        // supported.\n        isSupported = has(\"json-stringify\") && has(\"json-parse\");\n      } else {\n        var value,\n            serialized = \"{\\\"a\\\":[1,true,false,null,\\\"\\\\u0000\\\\b\\\\n\\\\f\\\\r\\\\t\\\"]}\"; // Test `JSON.stringify`.\n\n        if (name == \"json-stringify\") {\n          var stringify = exports.stringify,\n              stringifySupported = typeof stringify == \"function\" && isExtended;\n\n          if (stringifySupported) {\n            // A test function object with a custom `toJSON` method.\n            (value = function value() {\n              return 1;\n            }).toJSON = value;\n\n            try {\n              stringifySupported = // Firefox 3.1b1 and b2 serialize string, number, and boolean\n              // primitives as object literals.\n              stringify(0) === \"0\" && // FF 3.1b1, b2, and JSON 2 serialize wrapped primitives as object\n              // literals.\n              stringify(new Number()) === \"0\" && stringify(new String()) == '\"\"' && // FF 3.1b1, 2 throw an error if the value is `null`, `undefined`, or\n              // does not define a canonical JSON representation (this applies to\n              // objects with `toJSON` properties as well, *unless* they are nested\n              // within an object or array).\n              stringify(getClass) === undef && // IE 8 serializes `undefined` as `\"undefined\"`. Safari <= 5.1.7 and\n              // FF 3.1b3 pass this test.\n              stringify(undef) === undef && // Safari <= 5.1.7 and FF 3.1b3 throw `Error`s and `TypeError`s,\n              // respectively, if the value is omitted entirely.\n              stringify() === undef && // FF 3.1b1, 2 throw an error if the given value is not a number,\n              // string, array, object, Boolean, or `null` literal. This applies to\n              // objects with custom `toJSON` methods as well, unless they are nested\n              // inside object or array literals. YUI 3.0.0b1 ignores custom `toJSON`\n              // methods entirely.\n              stringify(value) === \"1\" && stringify([value]) == \"[1]\" && // Prototype <= 1.6.1 serializes `[undefined]` as `\"[]\"` instead of\n              // `\"[null]\"`.\n              stringify([undef]) == \"[null]\" && // YUI 3.0.0b1 fails to serialize `null` literals.\n              stringify(null) == \"null\" && // FF 3.1b1, 2 halts serialization if an array contains a function:\n              // `[1, true, getClass, 1]` serializes as \"[1,true,],\". FF 3.1b3\n              // elides non-JSON values from objects and arrays, unless they\n              // define custom `toJSON` methods.\n              stringify([undef, getClass, null]) == \"[null,null,null]\" && // Simple serialization test. FF 3.1b1 uses Unicode escape sequences\n              // where character escape codes are expected (e.g., `\\b` => `\\u0008`).\n              stringify({\n                \"a\": [value, true, false, null, \"\\x00\\b\\n\\f\\r\\t\"]\n              }) == serialized && // FF 3.1b1 and b2 ignore the `filter` and `width` arguments.\n              stringify(null, value) === \"1\" && stringify([1, 2], null, 1) == \"[\\n 1,\\n 2\\n]\" && // JSON 2, Prototype <= 1.7, and older WebKit builds incorrectly\n              // serialize extended years.\n              stringify(new Date(-8.64e15)) == '\"-271821-04-20T00:00:00.000Z\"' && // The milliseconds are optional in ES 5, but required in 5.1.\n              stringify(new Date(8.64e15)) == '\"+275760-09-13T00:00:00.000Z\"' && // Firefox <= 11.0 incorrectly serializes years prior to 0 as negative\n              // four-digit years instead of six-digit years. Credits: @Yaffle.\n              stringify(new Date(-621987552e5)) == '\"-000001-01-01T00:00:00.000Z\"' && // Safari <= 5.1.5 and Opera >= 10.53 incorrectly serialize millisecond\n              // values less than 1000. Credits: @Yaffle.\n              stringify(new Date(-1)) == '\"1969-12-31T23:59:59.999Z\"';\n            } catch (exception) {\n              stringifySupported = false;\n            }\n          }\n\n          isSupported = stringifySupported;\n        } // Test `JSON.parse`.\n\n\n        if (name == \"json-parse\") {\n          var parse = exports.parse;\n\n          if (typeof parse == \"function\") {\n            try {\n              // FF 3.1b1, b2 will throw an exception if a bare literal is provided.\n              // Conforming implementations should also coerce the initial argument to\n              // a string prior to parsing.\n              if (parse(\"0\") === 0 && !parse(false)) {\n                // Simple parsing test.\n                value = parse(serialized);\n                var parseSupported = value[\"a\"].length == 5 && value[\"a\"][0] === 1;\n\n                if (parseSupported) {\n                  try {\n                    // Safari <= 5.1.2 and FF 3.1b1 allow unescaped tabs in strings.\n                    parseSupported = !parse('\"\\t\"');\n                  } catch (exception) {}\n\n                  if (parseSupported) {\n                    try {\n                      // FF 4.0 and 4.0.1 allow leading `+` signs and leading\n                      // decimal points. FF 4.0, 4.0.1, and IE 9-10 also allow\n                      // certain octal literals.\n                      parseSupported = parse(\"01\") !== 1;\n                    } catch (exception) {}\n                  }\n\n                  if (parseSupported) {\n                    try {\n                      // FF 4.0, 4.0.1, and Rhino 1.7R3-R4 allow trailing decimal\n                      // points. These environments, along with FF 3.1b1 and 2,\n                      // also allow trailing commas in JSON objects and arrays.\n                      parseSupported = parse(\"1.\") !== 1;\n                    } catch (exception) {}\n                  }\n                }\n              }\n            } catch (exception) {\n              parseSupported = false;\n            }\n          }\n\n          isSupported = parseSupported;\n        }\n      }\n\n      return has[name] = !!isSupported;\n    }\n\n    if (!has(\"json\")) {\n      // Common `[[Class]]` name aliases.\n      var functionClass = \"[object Function]\",\n          dateClass = \"[object Date]\",\n          numberClass = \"[object Number]\",\n          stringClass = \"[object String]\",\n          arrayClass = \"[object Array]\",\n          booleanClass = \"[object Boolean]\"; // Detect incomplete support for accessing string characters by index.\n\n      var charIndexBuggy = has(\"bug-string-char-index\"); // Define additional utility methods if the `Date` methods are buggy.\n\n      if (!isExtended) {\n        var floor = Math.floor; // A mapping between the months of the year and the number of days between\n        // January 1st and the first of the respective month.\n\n        var Months = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334]; // Internal: Calculates the number of days between the Unix epoch and the\n        // first day of the given month.\n\n        var getDay = function getDay(year, month) {\n          return Months[month] + 365 * (year - 1970) + floor((year - 1969 + (month = +(month > 1))) / 4) - floor((year - 1901 + month) / 100) + floor((year - 1601 + month) / 400);\n        };\n      } // Internal: Determines if a property is a direct property of the given\n      // object. Delegates to the native `Object#hasOwnProperty` method.\n\n\n      if (!(_isProperty = objectProto.hasOwnProperty)) {\n        _isProperty = function isProperty(property) {\n          var members = {},\n              constructor;\n\n          if ((members.__proto__ = null, members.__proto__ = {\n            // The *proto* property cannot be set multiple times in recent\n            // versions of Firefox and SeaMonkey.\n            \"toString\": 1\n          }, members).toString != getClass) {\n            // Safari <= 2.0.3 doesn't implement `Object#hasOwnProperty`, but\n            // supports the mutable *proto* property.\n            _isProperty = function isProperty(property) {\n              // Capture and break the object's prototype chain (see section 8.6.2\n              // of the ES 5.1 spec). The parenthesized expression prevents an\n              // unsafe transformation by the Closure Compiler.\n              var original = this.__proto__,\n                  result = (property in (this.__proto__ = null, this)); // Restore the original prototype chain.\n\n              this.__proto__ = original;\n              return result;\n            };\n          } else {\n            // Capture a reference to the top-level `Object` constructor.\n            constructor = members.constructor; // Use the `constructor` property to simulate `Object#hasOwnProperty` in\n            // other environments.\n\n            _isProperty = function isProperty(property) {\n              var parent = (this.constructor || constructor).prototype;\n              return property in this && !(property in parent && this[property] === parent[property]);\n            };\n          }\n\n          members = null;\n          return _isProperty.call(this, property);\n        };\n      } // Internal: Normalizes the `for...in` iteration algorithm across\n      // environments. Each enumerated key is yielded to a `callback` function.\n\n\n      _forEach = function forEach(object, callback) {\n        var size = 0,\n            Properties,\n            members,\n            property; // Tests for bugs in the current environment's `for...in` algorithm. The\n        // `valueOf` property inherits the non-enumerable flag from\n        // `Object.prototype` in older versions of IE, Netscape, and Mozilla.\n\n        (Properties = function Properties() {\n          this.valueOf = 0;\n        }).prototype.valueOf = 0; // Iterate over a new instance of the `Properties` class.\n\n        members = new Properties();\n\n        for (property in members) {\n          // Ignore all properties inherited from `Object.prototype`.\n          if (_isProperty.call(members, property)) {\n            size++;\n          }\n        }\n\n        Properties = members = null; // Normalize the iteration algorithm.\n\n        if (!size) {\n          // A list of non-enumerable properties inherited from `Object.prototype`.\n          members = [\"valueOf\", \"toString\", \"toLocaleString\", \"propertyIsEnumerable\", \"isPrototypeOf\", \"hasOwnProperty\", \"constructor\"]; // IE <= 8, Mozilla 1.0, and Netscape 6.2 ignore shadowed non-enumerable\n          // properties.\n\n          _forEach = function forEach(object, callback) {\n            var isFunction = getClass.call(object) == functionClass,\n                property,\n                length;\n            var hasProperty = !isFunction && typeof object.constructor != \"function\" && objectTypes[typeof object.hasOwnProperty] && object.hasOwnProperty || _isProperty;\n\n            for (property in object) {\n              // Gecko <= 1.0 enumerates the `prototype` property of functions under\n              // certain conditions; IE does not.\n              if (!(isFunction && property == \"prototype\") && hasProperty.call(object, property)) {\n                callback(property);\n              }\n            } // Manually invoke the callback for each non-enumerable property.\n\n\n            for (length = members.length; property = members[--length]; hasProperty.call(object, property) && callback(property)) {\n              ;\n            }\n          };\n        } else if (size == 2) {\n          // Safari <= 2.0.4 enumerates shadowed properties twice.\n          _forEach = function forEach(object, callback) {\n            // Create a set of iterated properties.\n            var members = {},\n                isFunction = getClass.call(object) == functionClass,\n                property;\n\n            for (property in object) {\n              // Store each property name to prevent double enumeration. The\n              // `prototype` property of functions is not enumerated due to cross-\n              // environment inconsistencies.\n              if (!(isFunction && property == \"prototype\") && !_isProperty.call(members, property) && (members[property] = 1) && _isProperty.call(object, property)) {\n                callback(property);\n              }\n            }\n          };\n        } else {\n          // No bugs detected; use the standard `for...in` algorithm.\n          _forEach = function forEach(object, callback) {\n            var isFunction = getClass.call(object) == functionClass,\n                property,\n                isConstructor;\n\n            for (property in object) {\n              if (!(isFunction && property == \"prototype\") && _isProperty.call(object, property) && !(isConstructor = property === \"constructor\")) {\n                callback(property);\n              }\n            } // Manually invoke the callback for the `constructor` property due to\n            // cross-environment inconsistencies.\n\n\n            if (isConstructor || _isProperty.call(object, property = \"constructor\")) {\n              callback(property);\n            }\n          };\n        }\n\n        return _forEach(object, callback);\n      }; // Public: Serializes a JavaScript `value` as a JSON string. The optional\n      // `filter` argument may specify either a function that alters how object and\n      // array members are serialized, or an array of strings and numbers that\n      // indicates which properties should be serialized. The optional `width`\n      // argument may be either a string or number that specifies the indentation\n      // level of the output.\n\n\n      if (!has(\"json-stringify\")) {\n        // Internal: A map of control characters and their escaped equivalents.\n        var Escapes = {\n          92: \"\\\\\\\\\",\n          34: '\\\\\"',\n          8: \"\\\\b\",\n          12: \"\\\\f\",\n          10: \"\\\\n\",\n          13: \"\\\\r\",\n          9: \"\\\\t\"\n        }; // Internal: Converts `value` into a zero-padded string such that its\n        // length is at least equal to `width`. The `width` must be <= 6.\n\n        var leadingZeroes = \"000000\";\n\n        var toPaddedString = function toPaddedString(width, value) {\n          // The `|| 0` expression is necessary to work around a bug in\n          // Opera <= 7.54u2 where `0 == -0`, but `String(-0) !== \"0\"`.\n          return (leadingZeroes + (value || 0)).slice(-width);\n        }; // Internal: Double-quotes a string `value`, replacing all ASCII control\n        // characters (characters with code unit values between 0 and 31) with\n        // their escaped equivalents. This is an implementation of the\n        // `Quote(value)` operation defined in ES 5.1 section 15.12.3.\n\n\n        var unicodePrefix = \"\\\\u00\";\n\n        var quote = function quote(value) {\n          var result = '\"',\n              index = 0,\n              length = value.length,\n              useCharIndex = !charIndexBuggy || length > 10;\n          var symbols = useCharIndex && (charIndexBuggy ? value.split(\"\") : value);\n\n          for (; index < length; index++) {\n            var charCode = value.charCodeAt(index); // If the character is a control character, append its Unicode or\n            // shorthand escape sequence; otherwise, append the character as-is.\n\n            switch (charCode) {\n              case 8:\n              case 9:\n              case 10:\n              case 12:\n              case 13:\n              case 34:\n              case 92:\n                result += Escapes[charCode];\n                break;\n\n              default:\n                if (charCode < 32) {\n                  result += unicodePrefix + toPaddedString(2, charCode.toString(16));\n                  break;\n                }\n\n                result += useCharIndex ? symbols[index] : value.charAt(index);\n            }\n          }\n\n          return result + '\"';\n        }; // Internal: Recursively serializes an object. Implements the\n        // `Str(key, holder)`, `JO(value)`, and `JA(value)` operations.\n\n\n        var serialize = function serialize(property, object, callback, properties, whitespace, indentation, stack) {\n          var value, className, year, month, date, time, hours, minutes, seconds, milliseconds, results, element, index, length, prefix, result;\n\n          try {\n            // Necessary for host object support.\n            value = object[property];\n          } catch (exception) {}\n\n          if (typeof value == \"object\" && value) {\n            className = getClass.call(value);\n\n            if (className == dateClass && !_isProperty.call(value, \"toJSON\")) {\n              if (value > -1 / 0 && value < 1 / 0) {\n                // Dates are serialized according to the `Date#toJSON` method\n                // specified in ES 5.1 section 15.9.5.44. See section 15.9.1.15\n                // for the ISO 8601 date time string format.\n                if (getDay) {\n                  // Manually compute the year, month, date, hours, minutes,\n                  // seconds, and milliseconds if the `getUTC*` methods are\n                  // buggy. Adapted from @Yaffle's `date-shim` project.\n                  date = floor(value / 864e5);\n\n                  for (year = floor(date / 365.2425) + 1970 - 1; getDay(year + 1, 0) <= date; year++) {\n                    ;\n                  }\n\n                  for (month = floor((date - getDay(year, 0)) / 30.42); getDay(year, month + 1) <= date; month++) {\n                    ;\n                  }\n\n                  date = 1 + date - getDay(year, month); // The `time` value specifies the time within the day (see ES\n                  // 5.1 section 15.9.1.2). The formula `(A % B + B) % B` is used\n                  // to compute `A modulo B`, as the `%` operator does not\n                  // correspond to the `modulo` operation for negative numbers.\n\n                  time = (value % 864e5 + 864e5) % 864e5; // The hours, minutes, seconds, and milliseconds are obtained by\n                  // decomposing the time within the day. See section 15.9.1.10.\n\n                  hours = floor(time / 36e5) % 24;\n                  minutes = floor(time / 6e4) % 60;\n                  seconds = floor(time / 1e3) % 60;\n                  milliseconds = time % 1e3;\n                } else {\n                  year = value.getUTCFullYear();\n                  month = value.getUTCMonth();\n                  date = value.getUTCDate();\n                  hours = value.getUTCHours();\n                  minutes = value.getUTCMinutes();\n                  seconds = value.getUTCSeconds();\n                  milliseconds = value.getUTCMilliseconds();\n                } // Serialize extended years correctly.\n\n\n                value = (year <= 0 || year >= 1e4 ? (year < 0 ? \"-\" : \"+\") + toPaddedString(6, year < 0 ? -year : year) : toPaddedString(4, year)) + \"-\" + toPaddedString(2, month + 1) + \"-\" + toPaddedString(2, date) + // Months, dates, hours, minutes, and seconds should have two\n                // digits; milliseconds should have three.\n                \"T\" + toPaddedString(2, hours) + \":\" + toPaddedString(2, minutes) + \":\" + toPaddedString(2, seconds) + // Milliseconds are optional in ES 5.0, but required in 5.1.\n                \".\" + toPaddedString(3, milliseconds) + \"Z\";\n              } else {\n                value = null;\n              }\n            } else if (typeof value.toJSON == \"function\" && (className != numberClass && className != stringClass && className != arrayClass || _isProperty.call(value, \"toJSON\"))) {\n              // Prototype <= 1.6.1 adds non-standard `toJSON` methods to the\n              // `Number`, `String`, `Date`, and `Array` prototypes. JSON 3\n              // ignores all `toJSON` methods on these objects unless they are\n              // defined directly on an instance.\n              value = value.toJSON(property);\n            }\n          }\n\n          if (callback) {\n            // If a replacement function was provided, call it to obtain the value\n            // for serialization.\n            value = callback.call(object, property, value);\n          }\n\n          if (value === null) {\n            return \"null\";\n          }\n\n          className = getClass.call(value);\n\n          if (className == booleanClass) {\n            // Booleans are represented literally.\n            return \"\" + value;\n          } else if (className == numberClass) {\n            // JSON numbers must be finite. `Infinity` and `NaN` are serialized as\n            // `\"null\"`.\n            return value > -1 / 0 && value < 1 / 0 ? \"\" + value : \"null\";\n          } else if (className == stringClass) {\n            // Strings are double-quoted and escaped.\n            return quote(\"\" + value);\n          } // Recursively serialize objects and arrays.\n\n\n          if (typeof value == \"object\") {\n            // Check for cyclic structures. This is a linear search; performance\n            // is inversely proportional to the number of unique nested objects.\n            for (length = stack.length; length--;) {\n              if (stack[length] === value) {\n                // Cyclic structures cannot be serialized by `JSON.stringify`.\n                throw TypeError();\n              }\n            } // Add the object to the stack of traversed objects.\n\n\n            stack.push(value);\n            results = []; // Save the current indentation level and indent one additional level.\n\n            prefix = indentation;\n            indentation += whitespace;\n\n            if (className == arrayClass) {\n              // Recursively serialize array elements.\n              for (index = 0, length = value.length; index < length; index++) {\n                element = serialize(index, value, callback, properties, whitespace, indentation, stack);\n                results.push(element === undef ? \"null\" : element);\n              }\n\n              result = results.length ? whitespace ? \"[\\n\" + indentation + results.join(\",\\n\" + indentation) + \"\\n\" + prefix + \"]\" : \"[\" + results.join(\",\") + \"]\" : \"[]\";\n            } else {\n              // Recursively serialize object members. Members are selected from\n              // either a user-specified list of property names, or the object\n              // itself.\n              _forEach(properties || value, function (property) {\n                var element = serialize(property, value, callback, properties, whitespace, indentation, stack);\n\n                if (element !== undef) {\n                  // According to ES 5.1 section 15.12.3: \"If `gap` {whitespace}\n                  // is not the empty string, let `member` {quote(property) + \":\"}\n                  // be the concatenation of `member` and the `space` character.\"\n                  // The \"`space` character\" refers to the literal space\n                  // character, not the `space` {width} argument provided to\n                  // `JSON.stringify`.\n                  results.push(quote(property) + \":\" + (whitespace ? \" \" : \"\") + element);\n                }\n              });\n\n              result = results.length ? whitespace ? \"{\\n\" + indentation + results.join(\",\\n\" + indentation) + \"\\n\" + prefix + \"}\" : \"{\" + results.join(\",\") + \"}\" : \"{}\";\n            } // Remove the object from the traversed object stack.\n\n\n            stack.pop();\n            return result;\n          }\n        }; // Public: `JSON.stringify`. See ES 5.1 section 15.12.3.\n\n\n        exports.stringify = function (source, filter, width) {\n          var whitespace, callback, properties, className;\n\n          if (objectTypes[typeof filter] && filter) {\n            if ((className = getClass.call(filter)) == functionClass) {\n              callback = filter;\n            } else if (className == arrayClass) {\n              // Convert the property names array into a makeshift set.\n              properties = {};\n\n              for (var index = 0, length = filter.length, value; index < length; value = filter[index++], (className = getClass.call(value), className == stringClass || className == numberClass) && (properties[value] = 1)) {\n                ;\n              }\n            }\n          }\n\n          if (width) {\n            if ((className = getClass.call(width)) == numberClass) {\n              // Convert the `width` to an integer and create a string containing\n              // `width` number of space characters.\n              if ((width -= width % 1) > 0) {\n                for (whitespace = \"\", width > 10 && (width = 10); whitespace.length < width; whitespace += \" \") {\n                  ;\n                }\n              }\n            } else if (className == stringClass) {\n              whitespace = width.length <= 10 ? width : width.slice(0, 10);\n            }\n          } // Opera <= 7.54u2 discards the values associated with empty string keys\n          // (`\"\"`) only if they are used directly within an object member list\n          // (e.g., `!(\"\" in { \"\": 1})`).\n\n\n          return serialize(\"\", (value = {}, value[\"\"] = source, value), callback, properties, whitespace, \"\", []);\n        };\n      } // Public: Parses a JSON source string.\n\n\n      if (!has(\"json-parse\")) {\n        var fromCharCode = String.fromCharCode; // Internal: A map of escaped control characters and their unescaped\n        // equivalents.\n\n        var Unescapes = {\n          92: \"\\\\\",\n          34: '\"',\n          47: \"/\",\n          98: \"\\b\",\n          116: \"\\t\",\n          110: \"\\n\",\n          102: \"\\f\",\n          114: \"\\r\"\n        }; // Internal: Stores the parser state.\n\n        var Index, Source; // Internal: Resets the parser state and throws a `SyntaxError`.\n\n        var abort = function abort() {\n          Index = Source = null;\n          throw SyntaxError();\n        }; // Internal: Returns the next token, or `\"$\"` if the parser has reached\n        // the end of the source string. A token may be a string, number, `null`\n        // literal, or Boolean literal.\n\n\n        var lex = function lex() {\n          var source = Source,\n              length = source.length,\n              value,\n              begin,\n              position,\n              isSigned,\n              charCode;\n\n          while (Index < length) {\n            charCode = source.charCodeAt(Index);\n\n            switch (charCode) {\n              case 9:\n              case 10:\n              case 13:\n              case 32:\n                // Skip whitespace tokens, including tabs, carriage returns, line\n                // feeds, and space characters.\n                Index++;\n                break;\n\n              case 123:\n              case 125:\n              case 91:\n              case 93:\n              case 58:\n              case 44:\n                // Parse a punctuator token (`{`, `}`, `[`, `]`, `:`, or `,`) at\n                // the current position.\n                value = charIndexBuggy ? source.charAt(Index) : source[Index];\n                Index++;\n                return value;\n\n              case 34:\n                // `\"` delimits a JSON string; advance to the next character and\n                // begin parsing the string. String tokens are prefixed with the\n                // sentinel `@` character to distinguish them from punctuators and\n                // end-of-string tokens.\n                for (value = \"@\", Index++; Index < length;) {\n                  charCode = source.charCodeAt(Index);\n\n                  if (charCode < 32) {\n                    // Unescaped ASCII control characters (those with a code unit\n                    // less than the space character) are not permitted.\n                    abort();\n                  } else if (charCode == 92) {\n                    // A reverse solidus (`\\`) marks the beginning of an escaped\n                    // control character (including `\"`, `\\`, and `/`) or Unicode\n                    // escape sequence.\n                    charCode = source.charCodeAt(++Index);\n\n                    switch (charCode) {\n                      case 92:\n                      case 34:\n                      case 47:\n                      case 98:\n                      case 116:\n                      case 110:\n                      case 102:\n                      case 114:\n                        // Revive escaped control characters.\n                        value += Unescapes[charCode];\n                        Index++;\n                        break;\n\n                      case 117:\n                        // `\\u` marks the beginning of a Unicode escape sequence.\n                        // Advance to the first character and validate the\n                        // four-digit code point.\n                        begin = ++Index;\n\n                        for (position = Index + 4; Index < position; Index++) {\n                          charCode = source.charCodeAt(Index); // A valid sequence comprises four hexdigits (case-\n                          // insensitive) that form a single hexadecimal value.\n\n                          if (!(charCode >= 48 && charCode <= 57 || charCode >= 97 && charCode <= 102 || charCode >= 65 && charCode <= 70)) {\n                            // Invalid Unicode escape sequence.\n                            abort();\n                          }\n                        } // Revive the escaped character.\n\n\n                        value += fromCharCode(\"0x\" + source.slice(begin, Index));\n                        break;\n\n                      default:\n                        // Invalid escape sequence.\n                        abort();\n                    }\n                  } else {\n                    if (charCode == 34) {\n                      // An unescaped double-quote character marks the end of the\n                      // string.\n                      break;\n                    }\n\n                    charCode = source.charCodeAt(Index);\n                    begin = Index; // Optimize for the common case where a string is valid.\n\n                    while (charCode >= 32 && charCode != 92 && charCode != 34) {\n                      charCode = source.charCodeAt(++Index);\n                    } // Append the string as-is.\n\n\n                    value += source.slice(begin, Index);\n                  }\n                }\n\n                if (source.charCodeAt(Index) == 34) {\n                  // Advance to the next character and return the revived string.\n                  Index++;\n                  return value;\n                } // Unterminated string.\n\n\n                abort();\n\n              default:\n                // Parse numbers and literals.\n                begin = Index; // Advance past the negative sign, if one is specified.\n\n                if (charCode == 45) {\n                  isSigned = true;\n                  charCode = source.charCodeAt(++Index);\n                } // Parse an integer or floating-point value.\n\n\n                if (charCode >= 48 && charCode <= 57) {\n                  // Leading zeroes are interpreted as octal literals.\n                  if (charCode == 48 && (charCode = source.charCodeAt(Index + 1), charCode >= 48 && charCode <= 57)) {\n                    // Illegal octal literal.\n                    abort();\n                  }\n\n                  isSigned = false; // Parse the integer component.\n\n                  for (; Index < length && (charCode = source.charCodeAt(Index), charCode >= 48 && charCode <= 57); Index++) {\n                    ;\n                  } // Floats cannot contain a leading decimal point; however, this\n                  // case is already accounted for by the parser.\n\n\n                  if (source.charCodeAt(Index) == 46) {\n                    position = ++Index; // Parse the decimal component.\n\n                    for (; position < length && (charCode = source.charCodeAt(position), charCode >= 48 && charCode <= 57); position++) {\n                      ;\n                    }\n\n                    if (position == Index) {\n                      // Illegal trailing decimal.\n                      abort();\n                    }\n\n                    Index = position;\n                  } // Parse exponents. The `e` denoting the exponent is\n                  // case-insensitive.\n\n\n                  charCode = source.charCodeAt(Index);\n\n                  if (charCode == 101 || charCode == 69) {\n                    charCode = source.charCodeAt(++Index); // Skip past the sign following the exponent, if one is\n                    // specified.\n\n                    if (charCode == 43 || charCode == 45) {\n                      Index++;\n                    } // Parse the exponential component.\n\n\n                    for (position = Index; position < length && (charCode = source.charCodeAt(position), charCode >= 48 && charCode <= 57); position++) {\n                      ;\n                    }\n\n                    if (position == Index) {\n                      // Illegal empty exponent.\n                      abort();\n                    }\n\n                    Index = position;\n                  } // Coerce the parsed value to a JavaScript number.\n\n\n                  return +source.slice(begin, Index);\n                } // A negative sign may only precede numbers.\n\n\n                if (isSigned) {\n                  abort();\n                } // `true`, `false`, and `null` literals.\n\n\n                if (source.slice(Index, Index + 4) == \"true\") {\n                  Index += 4;\n                  return true;\n                } else if (source.slice(Index, Index + 5) == \"false\") {\n                  Index += 5;\n                  return false;\n                } else if (source.slice(Index, Index + 4) == \"null\") {\n                  Index += 4;\n                  return null;\n                } // Unrecognized token.\n\n\n                abort();\n            }\n          } // Return the sentinel `$` character if the parser has reached the end\n          // of the source string.\n\n\n          return \"$\";\n        }; // Internal: Parses a JSON `value` token.\n\n\n        var get = function get(value) {\n          var results, hasMembers;\n\n          if (value == \"$\") {\n            // Unexpected end of input.\n            abort();\n          }\n\n          if (typeof value == \"string\") {\n            if ((charIndexBuggy ? value.charAt(0) : value[0]) == \"@\") {\n              // Remove the sentinel `@` character.\n              return value.slice(1);\n            } // Parse object and array literals.\n\n\n            if (value == \"[\") {\n              // Parses a JSON array, returning a new JavaScript array.\n              results = [];\n\n              for (;; hasMembers || (hasMembers = true)) {\n                value = lex(); // A closing square bracket marks the end of the array literal.\n\n                if (value == \"]\") {\n                  break;\n                } // If the array literal contains elements, the current token\n                // should be a comma separating the previous element from the\n                // next.\n\n\n                if (hasMembers) {\n                  if (value == \",\") {\n                    value = lex();\n\n                    if (value == \"]\") {\n                      // Unexpected trailing `,` in array literal.\n                      abort();\n                    }\n                  } else {\n                    // A `,` must separate each array element.\n                    abort();\n                  }\n                } // Elisions and leading commas are not permitted.\n\n\n                if (value == \",\") {\n                  abort();\n                }\n\n                results.push(get(value));\n              }\n\n              return results;\n            } else if (value == \"{\") {\n              // Parses a JSON object, returning a new JavaScript object.\n              results = {};\n\n              for (;; hasMembers || (hasMembers = true)) {\n                value = lex(); // A closing curly brace marks the end of the object literal.\n\n                if (value == \"}\") {\n                  break;\n                } // If the object literal contains members, the current token\n                // should be a comma separator.\n\n\n                if (hasMembers) {\n                  if (value == \",\") {\n                    value = lex();\n\n                    if (value == \"}\") {\n                      // Unexpected trailing `,` in object literal.\n                      abort();\n                    }\n                  } else {\n                    // A `,` must separate each object member.\n                    abort();\n                  }\n                } // Leading commas are not permitted, object property names must be\n                // double-quoted strings, and a `:` must separate each property\n                // name and value.\n\n\n                if (value == \",\" || typeof value != \"string\" || (charIndexBuggy ? value.charAt(0) : value[0]) != \"@\" || lex() != \":\") {\n                  abort();\n                }\n\n                results[value.slice(1)] = get(lex());\n              }\n\n              return results;\n            } // Unexpected token encountered.\n\n\n            abort();\n          }\n\n          return value;\n        }; // Internal: Updates a traversed object member.\n\n\n        var update = function update(source, property, callback) {\n          var element = walk(source, property, callback);\n\n          if (element === undef) {\n            delete source[property];\n          } else {\n            source[property] = element;\n          }\n        }; // Internal: Recursively traverses a parsed JSON object, invoking the\n        // `callback` function for each value. This is an implementation of the\n        // `Walk(holder, name)` operation defined in ES 5.1 section 15.12.2.\n\n\n        var walk = function walk(source, property, callback) {\n          var value = source[property],\n              length;\n\n          if (typeof value == \"object\" && value) {\n            // `forEach` can't be used to traverse an array in Opera <= 8.54\n            // because its `Object#hasOwnProperty` implementation returns `false`\n            // for array indices (e.g., `![1, 2, 3].hasOwnProperty(\"0\")`).\n            if (getClass.call(value) == arrayClass) {\n              for (length = value.length; length--;) {\n                update(value, length, callback);\n              }\n            } else {\n              _forEach(value, function (property) {\n                update(value, property, callback);\n              });\n            }\n          }\n\n          return callback.call(source, property, value);\n        }; // Public: `JSON.parse`. See ES 5.1 section 15.12.2.\n\n\n        exports.parse = function (source, callback) {\n          var result, value;\n          Index = 0;\n          Source = \"\" + source;\n          result = get(lex()); // If a JSON string contains multiple tokens, it is invalid.\n\n          if (lex() != \"$\") {\n            abort();\n          } // Reset the parser state.\n\n\n          Index = Source = null;\n          return callback && getClass.call(callback) == functionClass ? walk((value = {}, value[\"\"] = result, value), \"\", callback) : result;\n        };\n      }\n    }\n\n    exports[\"runInContext\"] = runInContext;\n    return exports;\n  }\n\n  if (freeExports && !isLoader) {\n    // Export for CommonJS environments.\n    runInContext(root, freeExports);\n  } else {\n    // Export for web browsers and JavaScript engines.\n    var nativeJSON = root.JSON,\n        previousJSON = root[\"JSON3\"],\n        isRestored = false;\n    var JSON3 = runInContext(root, root[\"JSON3\"] = {\n      // Public: Restores the original value of the global `JSON` object and\n      // returns a reference to the `JSON3` object.\n      \"noConflict\": function noConflict() {\n        if (!isRestored) {\n          isRestored = true;\n          root.JSON = nativeJSON;\n          root[\"JSON3\"] = previousJSON;\n          nativeJSON = previousJSON = null;\n        }\n\n        return JSON3;\n      }\n    });\n    root.JSON = {\n      \"parse\": JSON3.parse,\n      \"stringify\": JSON3.stringify\n    };\n  } // Export for asynchronous module loaders.\n\n\n  if (isLoader) {\n    define(function () {\n      return JSON3;\n    });\n  }\n}).call(this);","/**\n * Expose `Emitter`.\n */\nmodule.exports = Emitter;\n/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nfunction Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n;\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n\n  return obj;\n}\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\n\nEmitter.prototype.on = Emitter.prototype.addEventListener = function (event, fn) {\n  this._callbacks = this._callbacks || {};\n  (this._callbacks[event] = this._callbacks[event] || []).push(fn);\n  return this;\n};\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\n\nEmitter.prototype.once = function (event, fn) {\n  var self = this;\n  this._callbacks = this._callbacks || {};\n\n  function on() {\n    self.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\n\nEmitter.prototype.off = Emitter.prototype.removeListener = Emitter.prototype.removeAllListeners = Emitter.prototype.removeEventListener = function (event, fn) {\n  this._callbacks = this._callbacks || {}; // all\n\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  } // specific event\n\n\n  var callbacks = this._callbacks[event];\n  if (!callbacks) return this; // remove all handlers\n\n  if (1 == arguments.length) {\n    delete this._callbacks[event];\n    return this;\n  } // remove specific handler\n\n\n  var cb;\n\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  return this;\n};\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\n\nEmitter.prototype.emit = function (event) {\n  this._callbacks = this._callbacks || {};\n  var args = [].slice.call(arguments, 1),\n      callbacks = this._callbacks[event];\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\n\nEmitter.prototype.listeners = function (event) {\n  this._callbacks = this._callbacks || {};\n  return this._callbacks[event] || [];\n};\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\n\nEmitter.prototype.hasListeners = function (event) {\n  return !!this.listeners(event).length;\n};","/*global Blob,File*/\n\n/**\n * Module requirements\n */\nvar isArray = require('isarray');\n\nvar isBuf = require('./is-buffer');\n/**\n * Replaces every Buffer | ArrayBuffer in packet with a numbered placeholder.\n * Anything with blobs or files should be fed through removeBlobs before coming\n * here.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @api public\n */\n\n\nexports.deconstructPacket = function (packet) {\n  var buffers = [];\n  var packetData = packet.data;\n\n  function _deconstructPacket(data) {\n    if (!data) return data;\n\n    if (isBuf(data)) {\n      var placeholder = {\n        _placeholder: true,\n        num: buffers.length\n      };\n      buffers.push(data);\n      return placeholder;\n    } else if (isArray(data)) {\n      var newData = new Array(data.length);\n\n      for (var i = 0; i < data.length; i++) {\n        newData[i] = _deconstructPacket(data[i]);\n      }\n\n      return newData;\n    } else if ('object' == typeof data && !(data instanceof Date)) {\n      var newData = {};\n\n      for (var key in data) {\n        newData[key] = _deconstructPacket(data[key]);\n      }\n\n      return newData;\n    }\n\n    return data;\n  }\n\n  var pack = packet;\n  pack.data = _deconstructPacket(packetData);\n  pack.attachments = buffers.length; // number of binary 'attachments'\n\n  return {\n    packet: pack,\n    buffers: buffers\n  };\n};\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @api public\n */\n\n\nexports.reconstructPacket = function (packet, buffers) {\n  var curPlaceHolder = 0;\n\n  function _reconstructPacket(data) {\n    if (data && data._placeholder) {\n      var buf = buffers[data.num]; // appropriate buffer (should be natural order anyway)\n\n      return buf;\n    } else if (isArray(data)) {\n      for (var i = 0; i < data.length; i++) {\n        data[i] = _reconstructPacket(data[i]);\n      }\n\n      return data;\n    } else if (data && 'object' == typeof data) {\n      for (var key in data) {\n        data[key] = _reconstructPacket(data[key]);\n      }\n\n      return data;\n    }\n\n    return data;\n  }\n\n  packet.data = _reconstructPacket(packet.data);\n  packet.attachments = undefined; // no longer useful\n\n  return packet;\n};\n/**\n * Asynchronously removes Blobs or Files from data via\n * FileReader's readAsArrayBuffer method. Used before encoding\n * data as msgpack. Calls callback with the blobless data.\n *\n * @param {Object} data\n * @param {Function} callback\n * @api private\n */\n\n\nexports.removeBlobs = function (data, callback) {\n  function _removeBlobs(obj, curKey, containingObject) {\n    if (!obj) return obj; // convert any blob\n\n    if (global.Blob && obj instanceof Blob || global.File && obj instanceof File) {\n      pendingBlobs++; // async filereader\n\n      var fileReader = new FileReader();\n\n      fileReader.onload = function () {\n        // this.result == arraybuffer\n        if (containingObject) {\n          containingObject[curKey] = this.result;\n        } else {\n          bloblessData = this.result;\n        } // if nothing pending its callback time\n\n\n        if (! --pendingBlobs) {\n          callback(bloblessData);\n        }\n      };\n\n      fileReader.readAsArrayBuffer(obj); // blob -> arraybuffer\n    } else if (isArray(obj)) {\n      // handle array\n      for (var i = 0; i < obj.length; i++) {\n        _removeBlobs(obj[i], i, obj);\n      }\n    } else if (obj && 'object' == typeof obj && !isBuf(obj)) {\n      // and object\n      for (var key in obj) {\n        _removeBlobs(obj[key], key, obj);\n      }\n    }\n  }\n\n  var pendingBlobs = 0;\n  var bloblessData = data;\n\n  _removeBlobs(bloblessData);\n\n  if (!pendingBlobs) {\n    callback(bloblessData);\n  }\n};","module.exports = Array.isArray || function (arr) {\n  return Object.prototype.toString.call(arr) == '[object Array]';\n};","module.exports = require('./lib/index');","module.exports = require('./socket');\n/**\n * Exports parser\n *\n * @api public\n *\n */\n\nmodule.exports.parser = require('engine.io-parser');","/**\n * Module dependencies.\n */\nvar transports = require('./transports/index');\n\nvar Emitter = require('component-emitter');\n\nvar debug = require('debug')('engine.io-client:socket');\n\nvar index = require('indexof');\n\nvar parser = require('engine.io-parser');\n\nvar parseuri = require('parseuri');\n\nvar parsejson = require('parsejson');\n\nvar parseqs = require('parseqs');\n/**\n * Module exports.\n */\n\n\nmodule.exports = Socket;\n/**\n * Socket constructor.\n *\n * @param {String|Object} uri or options\n * @param {Object} options\n * @api public\n */\n\nfunction Socket(uri, opts) {\n  if (!(this instanceof Socket)) return new Socket(uri, opts);\n  opts = opts || {};\n\n  if (uri && 'object' === typeof uri) {\n    opts = uri;\n    uri = null;\n  }\n\n  if (uri) {\n    uri = parseuri(uri);\n    opts.hostname = uri.host;\n    opts.secure = uri.protocol === 'https' || uri.protocol === 'wss';\n    opts.port = uri.port;\n    if (uri.query) opts.query = uri.query;\n  } else if (opts.host) {\n    opts.hostname = parseuri(opts.host).host;\n  }\n\n  this.secure = null != opts.secure ? opts.secure : global.location && 'https:' === location.protocol;\n\n  if (opts.hostname && !opts.port) {\n    // if no port is specified manually, use the protocol default\n    opts.port = this.secure ? '443' : '80';\n  }\n\n  this.agent = opts.agent || false;\n  this.hostname = opts.hostname || (global.location ? location.hostname : 'localhost');\n  this.port = opts.port || (global.location && location.port ? location.port : this.secure ? 443 : 80);\n  this.query = opts.query || {};\n  if ('string' === typeof this.query) this.query = parseqs.decode(this.query);\n  this.upgrade = false !== opts.upgrade;\n  this.path = (opts.path || '/engine.io').replace(/\\/$/, '') + '/';\n  this.forceJSONP = !!opts.forceJSONP;\n  this.jsonp = false !== opts.jsonp;\n  this.forceBase64 = !!opts.forceBase64;\n  this.enablesXDR = !!opts.enablesXDR;\n  this.timestampParam = opts.timestampParam || 't';\n  this.timestampRequests = opts.timestampRequests;\n  this.transports = opts.transports || ['polling', 'websocket'];\n  this.readyState = '';\n  this.writeBuffer = [];\n  this.prevBufferLen = 0;\n  this.policyPort = opts.policyPort || 843;\n  this.rememberUpgrade = opts.rememberUpgrade || false;\n  this.binaryType = null;\n  this.onlyBinaryUpgrades = opts.onlyBinaryUpgrades;\n  this.perMessageDeflate = false !== opts.perMessageDeflate ? opts.perMessageDeflate || {} : false;\n  if (true === this.perMessageDeflate) this.perMessageDeflate = {};\n\n  if (this.perMessageDeflate && null == this.perMessageDeflate.threshold) {\n    this.perMessageDeflate.threshold = 1024;\n  } // SSL options for Node.js client\n\n\n  this.pfx = opts.pfx || null;\n  this.key = opts.key || null;\n  this.passphrase = opts.passphrase || null;\n  this.cert = opts.cert || null;\n  this.ca = opts.ca || null;\n  this.ciphers = opts.ciphers || null;\n  this.rejectUnauthorized = opts.rejectUnauthorized === undefined ? null : opts.rejectUnauthorized;\n  this.forceNode = !!opts.forceNode; // other options for Node.js client\n\n  var freeGlobal = typeof global === 'object' && global;\n\n  if (freeGlobal.global === freeGlobal) {\n    if (opts.extraHeaders && Object.keys(opts.extraHeaders).length > 0) {\n      this.extraHeaders = opts.extraHeaders;\n    }\n\n    if (opts.localAddress) {\n      this.localAddress = opts.localAddress;\n    }\n  } // set on handshake\n\n\n  this.id = null;\n  this.upgrades = null;\n  this.pingInterval = null;\n  this.pingTimeout = null; // set on heartbeat\n\n  this.pingIntervalTimer = null;\n  this.pingTimeoutTimer = null;\n  this.open();\n}\n\nSocket.priorWebsocketSuccess = false;\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Socket.prototype);\n/**\n * Protocol version.\n *\n * @api public\n */\n\nSocket.protocol = parser.protocol; // this is an int\n\n/**\n * Expose deps for legacy compatibility\n * and standalone browser access.\n */\n\nSocket.Socket = Socket;\nSocket.Transport = require('./transport');\nSocket.transports = require('./transports/index');\nSocket.parser = require('engine.io-parser');\n/**\n * Creates transport of the given type.\n *\n * @param {String} transport name\n * @return {Transport}\n * @api private\n */\n\nSocket.prototype.createTransport = function (name) {\n  debug('creating transport \"%s\"', name);\n  var query = clone(this.query); // append engine.io protocol identifier\n\n  query.EIO = parser.protocol; // transport name\n\n  query.transport = name; // session id if we already have one\n\n  if (this.id) query.sid = this.id;\n  var transport = new transports[name]({\n    agent: this.agent,\n    hostname: this.hostname,\n    port: this.port,\n    secure: this.secure,\n    path: this.path,\n    query: query,\n    forceJSONP: this.forceJSONP,\n    jsonp: this.jsonp,\n    forceBase64: this.forceBase64,\n    enablesXDR: this.enablesXDR,\n    timestampRequests: this.timestampRequests,\n    timestampParam: this.timestampParam,\n    policyPort: this.policyPort,\n    socket: this,\n    pfx: this.pfx,\n    key: this.key,\n    passphrase: this.passphrase,\n    cert: this.cert,\n    ca: this.ca,\n    ciphers: this.ciphers,\n    rejectUnauthorized: this.rejectUnauthorized,\n    perMessageDeflate: this.perMessageDeflate,\n    extraHeaders: this.extraHeaders,\n    forceNode: this.forceNode,\n    localAddress: this.localAddress\n  });\n  return transport;\n};\n\nfunction clone(obj) {\n  var o = {};\n\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) {\n      o[i] = obj[i];\n    }\n  }\n\n  return o;\n}\n/**\n * Initializes transport to use and starts probe.\n *\n * @api private\n */\n\n\nSocket.prototype.open = function () {\n  var transport;\n\n  if (this.rememberUpgrade && Socket.priorWebsocketSuccess && this.transports.indexOf('websocket') !== -1) {\n    transport = 'websocket';\n  } else if (0 === this.transports.length) {\n    // Emit error on next tick so it can be listened to\n    var self = this;\n    setTimeout(function () {\n      self.emit('error', 'No transports available');\n    }, 0);\n    return;\n  } else {\n    transport = this.transports[0];\n  }\n\n  this.readyState = 'opening'; // Retry with the next transport if the transport is disabled (jsonp: false)\n\n  try {\n    transport = this.createTransport(transport);\n  } catch (e) {\n    this.transports.shift();\n    this.open();\n    return;\n  }\n\n  transport.open();\n  this.setTransport(transport);\n};\n/**\n * Sets the current transport. Disables the existing one (if any).\n *\n * @api private\n */\n\n\nSocket.prototype.setTransport = function (transport) {\n  debug('setting transport %s', transport.name);\n  var self = this;\n\n  if (this.transport) {\n    debug('clearing existing transport %s', this.transport.name);\n    this.transport.removeAllListeners();\n  } // set up transport\n\n\n  this.transport = transport; // set up transport listeners\n\n  transport.on('drain', function () {\n    self.onDrain();\n  }).on('packet', function (packet) {\n    self.onPacket(packet);\n  }).on('error', function (e) {\n    self.onError(e);\n  }).on('close', function () {\n    self.onClose('transport close');\n  });\n};\n/**\n * Probes a transport.\n *\n * @param {String} transport name\n * @api private\n */\n\n\nSocket.prototype.probe = function (name) {\n  debug('probing transport \"%s\"', name);\n  var transport = this.createTransport(name, {\n    probe: 1\n  });\n  var failed = false;\n  var self = this;\n  Socket.priorWebsocketSuccess = false;\n\n  function onTransportOpen() {\n    if (self.onlyBinaryUpgrades) {\n      var upgradeLosesBinary = !this.supportsBinary && self.transport.supportsBinary;\n      failed = failed || upgradeLosesBinary;\n    }\n\n    if (failed) return;\n    debug('probe transport \"%s\" opened', name);\n    transport.send([{\n      type: 'ping',\n      data: 'probe'\n    }]);\n    transport.once('packet', function (msg) {\n      if (failed) return;\n\n      if ('pong' === msg.type && 'probe' === msg.data) {\n        debug('probe transport \"%s\" pong', name);\n        self.upgrading = true;\n        self.emit('upgrading', transport);\n        if (!transport) return;\n        Socket.priorWebsocketSuccess = 'websocket' === transport.name;\n        debug('pausing current transport \"%s\"', self.transport.name);\n        self.transport.pause(function () {\n          if (failed) return;\n          if ('closed' === self.readyState) return;\n          debug('changing transport and sending upgrade packet');\n          cleanup();\n          self.setTransport(transport);\n          transport.send([{\n            type: 'upgrade'\n          }]);\n          self.emit('upgrade', transport);\n          transport = null;\n          self.upgrading = false;\n          self.flush();\n        });\n      } else {\n        debug('probe transport \"%s\" failed', name);\n        var err = new Error('probe error');\n        err.transport = transport.name;\n        self.emit('upgradeError', err);\n      }\n    });\n  }\n\n  function freezeTransport() {\n    if (failed) return; // Any callback called by transport should be ignored since now\n\n    failed = true;\n    cleanup();\n    transport.close();\n    transport = null;\n  } // Handle any error that happens while probing\n\n\n  function onerror(err) {\n    var error = new Error('probe error: ' + err);\n    error.transport = transport.name;\n    freezeTransport();\n    debug('probe transport \"%s\" failed because of error: %s', name, err);\n    self.emit('upgradeError', error);\n  }\n\n  function onTransportClose() {\n    onerror('transport closed');\n  } // When the socket is closed while we're probing\n\n\n  function onclose() {\n    onerror('socket closed');\n  } // When the socket is upgraded while we're probing\n\n\n  function onupgrade(to) {\n    if (transport && to.name !== transport.name) {\n      debug('\"%s\" works - aborting \"%s\"', to.name, transport.name);\n      freezeTransport();\n    }\n  } // Remove all listeners on the transport and on self\n\n\n  function cleanup() {\n    transport.removeListener('open', onTransportOpen);\n    transport.removeListener('error', onerror);\n    transport.removeListener('close', onTransportClose);\n    self.removeListener('close', onclose);\n    self.removeListener('upgrading', onupgrade);\n  }\n\n  transport.once('open', onTransportOpen);\n  transport.once('error', onerror);\n  transport.once('close', onTransportClose);\n  this.once('close', onclose);\n  this.once('upgrading', onupgrade);\n  transport.open();\n};\n/**\n * Called when connection is deemed open.\n *\n * @api public\n */\n\n\nSocket.prototype.onOpen = function () {\n  debug('socket open');\n  this.readyState = 'open';\n  Socket.priorWebsocketSuccess = 'websocket' === this.transport.name;\n  this.emit('open');\n  this.flush(); // we check for `readyState` in case an `open`\n  // listener already closed the socket\n\n  if ('open' === this.readyState && this.upgrade && this.transport.pause) {\n    debug('starting upgrade probes');\n\n    for (var i = 0, l = this.upgrades.length; i < l; i++) {\n      this.probe(this.upgrades[i]);\n    }\n  }\n};\n/**\n * Handles a packet.\n *\n * @api private\n */\n\n\nSocket.prototype.onPacket = function (packet) {\n  if ('opening' === this.readyState || 'open' === this.readyState || 'closing' === this.readyState) {\n    debug('socket receive: type \"%s\", data \"%s\"', packet.type, packet.data);\n    this.emit('packet', packet); // Socket is live - any packet counts\n\n    this.emit('heartbeat');\n\n    switch (packet.type) {\n      case 'open':\n        this.onHandshake(parsejson(packet.data));\n        break;\n\n      case 'pong':\n        this.setPing();\n        this.emit('pong');\n        break;\n\n      case 'error':\n        var err = new Error('server error');\n        err.code = packet.data;\n        this.onError(err);\n        break;\n\n      case 'message':\n        this.emit('data', packet.data);\n        this.emit('message', packet.data);\n        break;\n    }\n  } else {\n    debug('packet received with socket readyState \"%s\"', this.readyState);\n  }\n};\n/**\n * Called upon handshake completion.\n *\n * @param {Object} handshake obj\n * @api private\n */\n\n\nSocket.prototype.onHandshake = function (data) {\n  this.emit('handshake', data);\n  this.id = data.sid;\n  this.transport.query.sid = data.sid;\n  this.upgrades = this.filterUpgrades(data.upgrades);\n  this.pingInterval = data.pingInterval;\n  this.pingTimeout = data.pingTimeout;\n  this.onOpen(); // In case open handler closes socket\n\n  if ('closed' === this.readyState) return;\n  this.setPing(); // Prolong liveness of socket on heartbeat\n\n  this.removeListener('heartbeat', this.onHeartbeat);\n  this.on('heartbeat', this.onHeartbeat);\n};\n/**\n * Resets ping timeout.\n *\n * @api private\n */\n\n\nSocket.prototype.onHeartbeat = function (timeout) {\n  clearTimeout(this.pingTimeoutTimer);\n  var self = this;\n  self.pingTimeoutTimer = setTimeout(function () {\n    if ('closed' === self.readyState) return;\n    self.onClose('ping timeout');\n  }, timeout || self.pingInterval + self.pingTimeout);\n};\n/**\n * Pings server every `this.pingInterval` and expects response\n * within `this.pingTimeout` or closes connection.\n *\n * @api private\n */\n\n\nSocket.prototype.setPing = function () {\n  var self = this;\n  clearTimeout(self.pingIntervalTimer);\n  self.pingIntervalTimer = setTimeout(function () {\n    debug('writing ping packet - expecting pong within %sms', self.pingTimeout);\n    self.ping();\n    self.onHeartbeat(self.pingTimeout);\n  }, self.pingInterval);\n};\n/**\n* Sends a ping packet.\n*\n* @api private\n*/\n\n\nSocket.prototype.ping = function () {\n  var self = this;\n  this.sendPacket('ping', function () {\n    self.emit('ping');\n  });\n};\n/**\n * Called on `drain` event\n *\n * @api private\n */\n\n\nSocket.prototype.onDrain = function () {\n  this.writeBuffer.splice(0, this.prevBufferLen); // setting prevBufferLen = 0 is very important\n  // for example, when upgrading, upgrade packet is sent over,\n  // and a nonzero prevBufferLen could cause problems on `drain`\n\n  this.prevBufferLen = 0;\n\n  if (0 === this.writeBuffer.length) {\n    this.emit('drain');\n  } else {\n    this.flush();\n  }\n};\n/**\n * Flush write buffers.\n *\n * @api private\n */\n\n\nSocket.prototype.flush = function () {\n  if ('closed' !== this.readyState && this.transport.writable && !this.upgrading && this.writeBuffer.length) {\n    debug('flushing %d packets in socket', this.writeBuffer.length);\n    this.transport.send(this.writeBuffer); // keep track of current length of writeBuffer\n    // splice writeBuffer and callbackBuffer on `drain`\n\n    this.prevBufferLen = this.writeBuffer.length;\n    this.emit('flush');\n  }\n};\n/**\n * Sends a message.\n *\n * @param {String} message.\n * @param {Function} callback function.\n * @param {Object} options.\n * @return {Socket} for chaining.\n * @api public\n */\n\n\nSocket.prototype.write = Socket.prototype.send = function (msg, options, fn) {\n  this.sendPacket('message', msg, options, fn);\n  return this;\n};\n/**\n * Sends a packet.\n *\n * @param {String} packet type.\n * @param {String} data.\n * @param {Object} options.\n * @param {Function} callback function.\n * @api private\n */\n\n\nSocket.prototype.sendPacket = function (type, data, options, fn) {\n  if ('function' === typeof data) {\n    fn = data;\n    data = undefined;\n  }\n\n  if ('function' === typeof options) {\n    fn = options;\n    options = null;\n  }\n\n  if ('closing' === this.readyState || 'closed' === this.readyState) {\n    return;\n  }\n\n  options = options || {};\n  options.compress = false !== options.compress;\n  var packet = {\n    type: type,\n    data: data,\n    options: options\n  };\n  this.emit('packetCreate', packet);\n  this.writeBuffer.push(packet);\n  if (fn) this.once('flush', fn);\n  this.flush();\n};\n/**\n * Closes the connection.\n *\n * @api private\n */\n\n\nSocket.prototype.close = function () {\n  if ('opening' === this.readyState || 'open' === this.readyState) {\n    this.readyState = 'closing';\n    var self = this;\n\n    if (this.writeBuffer.length) {\n      this.once('drain', function () {\n        if (this.upgrading) {\n          waitForUpgrade();\n        } else {\n          close();\n        }\n      });\n    } else if (this.upgrading) {\n      waitForUpgrade();\n    } else {\n      close();\n    }\n  }\n\n  function close() {\n    self.onClose('forced close');\n    debug('socket closing - telling transport to close');\n    self.transport.close();\n  }\n\n  function cleanupAndClose() {\n    self.removeListener('upgrade', cleanupAndClose);\n    self.removeListener('upgradeError', cleanupAndClose);\n    close();\n  }\n\n  function waitForUpgrade() {\n    // wait for upgrade to finish since we can't send packets while pausing a transport\n    self.once('upgrade', cleanupAndClose);\n    self.once('upgradeError', cleanupAndClose);\n  }\n\n  return this;\n};\n/**\n * Called upon transport error\n *\n * @api private\n */\n\n\nSocket.prototype.onError = function (err) {\n  debug('socket error %j', err);\n  Socket.priorWebsocketSuccess = false;\n  this.emit('error', err);\n  this.onClose('transport error', err);\n};\n/**\n * Called upon transport close.\n *\n * @api private\n */\n\n\nSocket.prototype.onClose = function (reason, desc) {\n  if ('opening' === this.readyState || 'open' === this.readyState || 'closing' === this.readyState) {\n    debug('socket close with reason: \"%s\"', reason);\n    var self = this; // clear timers\n\n    clearTimeout(this.pingIntervalTimer);\n    clearTimeout(this.pingTimeoutTimer); // stop event from firing again for transport\n\n    this.transport.removeAllListeners('close'); // ensure transport won't stay open\n\n    this.transport.close(); // ignore further transport communication\n\n    this.transport.removeAllListeners(); // set ready state\n\n    this.readyState = 'closed'; // clear session id\n\n    this.id = null; // emit close event\n\n    this.emit('close', reason, desc); // clean buffers after, so users can still\n    // grab the buffers on `close` event\n\n    self.writeBuffer = [];\n    self.prevBufferLen = 0;\n  }\n};\n/**\n * Filters upgrades, returning only those matching client transports.\n *\n * @param {Array} server upgrades\n * @api private\n *\n */\n\n\nSocket.prototype.filterUpgrades = function (upgrades) {\n  var filteredUpgrades = [];\n\n  for (var i = 0, j = upgrades.length; i < j; i++) {\n    if (~index(this.transports, upgrades[i])) filteredUpgrades.push(upgrades[i]);\n  }\n\n  return filteredUpgrades;\n};","/**\n * Module exports.\n *\n * Logic borrowed from Modernizr:\n *\n *   - https://github.com/Modernizr/Modernizr/blob/master/feature-detects/cors.js\n */\ntry {\n  module.exports = typeof XMLHttpRequest !== 'undefined' && 'withCredentials' in new XMLHttpRequest();\n} catch (err) {\n  // if XMLHttp support is disabled in IE then it will throw\n  // when trying to create\n  module.exports = false;\n}","/**\n * Module requirements.\n */\nvar XMLHttpRequest = require('xmlhttprequest-ssl');\n\nvar Polling = require('./polling');\n\nvar Emitter = require('component-emitter');\n\nvar inherit = require('component-inherit');\n\nvar debug = require('debug')('engine.io-client:polling-xhr');\n/**\n * Module exports.\n */\n\n\nmodule.exports = XHR;\nmodule.exports.Request = Request;\n/**\n * Empty function\n */\n\nfunction empty() {}\n/**\n * XHR Polling constructor.\n *\n * @param {Object} opts\n * @api public\n */\n\n\nfunction XHR(opts) {\n  Polling.call(this, opts);\n  this.requestTimeout = opts.requestTimeout;\n\n  if (global.location) {\n    var isSSL = 'https:' === location.protocol;\n    var port = location.port; // some user agents have empty `location.port`\n\n    if (!port) {\n      port = isSSL ? 443 : 80;\n    }\n\n    this.xd = opts.hostname !== global.location.hostname || port !== opts.port;\n    this.xs = opts.secure !== isSSL;\n  } else {\n    this.extraHeaders = opts.extraHeaders;\n  }\n}\n/**\n * Inherits from Polling.\n */\n\n\ninherit(XHR, Polling);\n/**\n * XHR supports binary\n */\n\nXHR.prototype.supportsBinary = true;\n/**\n * Creates a request.\n *\n * @param {String} method\n * @api private\n */\n\nXHR.prototype.request = function (opts) {\n  opts = opts || {};\n  opts.uri = this.uri();\n  opts.xd = this.xd;\n  opts.xs = this.xs;\n  opts.agent = this.agent || false;\n  opts.supportsBinary = this.supportsBinary;\n  opts.enablesXDR = this.enablesXDR; // SSL options for Node.js client\n\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n  opts.requestTimeout = this.requestTimeout; // other options for Node.js client\n\n  opts.extraHeaders = this.extraHeaders;\n  return new Request(opts);\n};\n/**\n * Sends data.\n *\n * @param {String} data to send.\n * @param {Function} called upon flush.\n * @api private\n */\n\n\nXHR.prototype.doWrite = function (data, fn) {\n  var isBinary = typeof data !== 'string' && data !== undefined;\n  var req = this.request({\n    method: 'POST',\n    data: data,\n    isBinary: isBinary\n  });\n  var self = this;\n  req.on('success', fn);\n  req.on('error', function (err) {\n    self.onError('xhr post error', err);\n  });\n  this.sendXhr = req;\n};\n/**\n * Starts a poll cycle.\n *\n * @api private\n */\n\n\nXHR.prototype.doPoll = function () {\n  debug('xhr poll');\n  var req = this.request();\n  var self = this;\n  req.on('data', function (data) {\n    self.onData(data);\n  });\n  req.on('error', function (err) {\n    self.onError('xhr poll error', err);\n  });\n  this.pollXhr = req;\n};\n/**\n * Request constructor\n *\n * @param {Object} options\n * @api public\n */\n\n\nfunction Request(opts) {\n  this.method = opts.method || 'GET';\n  this.uri = opts.uri;\n  this.xd = !!opts.xd;\n  this.xs = !!opts.xs;\n  this.async = false !== opts.async;\n  this.data = undefined !== opts.data ? opts.data : null;\n  this.agent = opts.agent;\n  this.isBinary = opts.isBinary;\n  this.supportsBinary = opts.supportsBinary;\n  this.enablesXDR = opts.enablesXDR;\n  this.requestTimeout = opts.requestTimeout; // SSL options for Node.js client\n\n  this.pfx = opts.pfx;\n  this.key = opts.key;\n  this.passphrase = opts.passphrase;\n  this.cert = opts.cert;\n  this.ca = opts.ca;\n  this.ciphers = opts.ciphers;\n  this.rejectUnauthorized = opts.rejectUnauthorized; // other options for Node.js client\n\n  this.extraHeaders = opts.extraHeaders;\n  this.create();\n}\n/**\n * Mix in `Emitter`.\n */\n\n\nEmitter(Request.prototype);\n/**\n * Creates the XHR object and sends the request.\n *\n * @api private\n */\n\nRequest.prototype.create = function () {\n  var opts = {\n    agent: this.agent,\n    xdomain: this.xd,\n    xscheme: this.xs,\n    enablesXDR: this.enablesXDR\n  }; // SSL options for Node.js client\n\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n  var xhr = this.xhr = new XMLHttpRequest(opts);\n  var self = this;\n\n  try {\n    debug('xhr open %s: %s', this.method, this.uri);\n    xhr.open(this.method, this.uri, this.async);\n\n    try {\n      if (this.extraHeaders) {\n        xhr.setDisableHeaderCheck(true);\n\n        for (var i in this.extraHeaders) {\n          if (this.extraHeaders.hasOwnProperty(i)) {\n            xhr.setRequestHeader(i, this.extraHeaders[i]);\n          }\n        }\n      }\n    } catch (e) {}\n\n    if (this.supportsBinary) {\n      // This has to be done after open because Firefox is stupid\n      // http://stackoverflow.com/questions/13216903/get-binary-data-with-xmlhttprequest-in-a-firefox-extension\n      xhr.responseType = 'arraybuffer';\n    }\n\n    if ('POST' === this.method) {\n      try {\n        if (this.isBinary) {\n          xhr.setRequestHeader('Content-type', 'application/octet-stream');\n        } else {\n          xhr.setRequestHeader('Content-type', 'text/plain;charset=UTF-8');\n        }\n      } catch (e) {}\n    }\n\n    try {\n      xhr.setRequestHeader('Accept', '*/*');\n    } catch (e) {} // ie6 check\n\n\n    if ('withCredentials' in xhr) {\n      xhr.withCredentials = true;\n    }\n\n    if (this.requestTimeout) {\n      xhr.timeout = this.requestTimeout;\n    }\n\n    if (this.hasXDR()) {\n      xhr.onload = function () {\n        self.onLoad();\n      };\n\n      xhr.onerror = function () {\n        self.onError(xhr.responseText);\n      };\n    } else {\n      xhr.onreadystatechange = function () {\n        if (4 !== xhr.readyState) return;\n\n        if (200 === xhr.status || 1223 === xhr.status) {\n          self.onLoad();\n        } else {\n          // make sure the `error` event handler that's user-set\n          // does not throw in the same tick and gets caught here\n          setTimeout(function () {\n            self.onError(xhr.status);\n          }, 0);\n        }\n      };\n    }\n\n    debug('xhr data %s', this.data);\n    xhr.send(this.data);\n  } catch (e) {\n    // Need to defer since .create() is called directly fhrom the constructor\n    // and thus the 'error' event can only be only bound *after* this exception\n    // occurs.  Therefore, also, we cannot throw here at all.\n    setTimeout(function () {\n      self.onError(e);\n    }, 0);\n    return;\n  }\n\n  if (global.document) {\n    this.index = Request.requestsCount++;\n    Request.requests[this.index] = this;\n  }\n};\n/**\n * Called upon successful response.\n *\n * @api private\n */\n\n\nRequest.prototype.onSuccess = function () {\n  this.emit('success');\n  this.cleanup();\n};\n/**\n * Called if we have data.\n *\n * @api private\n */\n\n\nRequest.prototype.onData = function (data) {\n  this.emit('data', data);\n  this.onSuccess();\n};\n/**\n * Called upon error.\n *\n * @api private\n */\n\n\nRequest.prototype.onError = function (err) {\n  this.emit('error', err);\n  this.cleanup(true);\n};\n/**\n * Cleans up house.\n *\n * @api private\n */\n\n\nRequest.prototype.cleanup = function (fromError) {\n  if ('undefined' === typeof this.xhr || null === this.xhr) {\n    return;\n  } // xmlhttprequest\n\n\n  if (this.hasXDR()) {\n    this.xhr.onload = this.xhr.onerror = empty;\n  } else {\n    this.xhr.onreadystatechange = empty;\n  }\n\n  if (fromError) {\n    try {\n      this.xhr.abort();\n    } catch (e) {}\n  }\n\n  if (global.document) {\n    delete Request.requests[this.index];\n  }\n\n  this.xhr = null;\n};\n/**\n * Called upon load.\n *\n * @api private\n */\n\n\nRequest.prototype.onLoad = function () {\n  var data;\n\n  try {\n    var contentType;\n\n    try {\n      contentType = this.xhr.getResponseHeader('Content-Type').split(';')[0];\n    } catch (e) {}\n\n    if (contentType === 'application/octet-stream') {\n      data = this.xhr.response || this.xhr.responseText;\n    } else {\n      if (!this.supportsBinary) {\n        data = this.xhr.responseText;\n      } else {\n        try {\n          data = String.fromCharCode.apply(null, new Uint8Array(this.xhr.response));\n        } catch (e) {\n          var ui8Arr = new Uint8Array(this.xhr.response);\n          var dataArray = [];\n\n          for (var idx = 0, length = ui8Arr.length; idx < length; idx++) {\n            dataArray.push(ui8Arr[idx]);\n          }\n\n          data = String.fromCharCode.apply(null, dataArray);\n        }\n      }\n    }\n  } catch (e) {\n    this.onError(e);\n  }\n\n  if (null != data) {\n    this.onData(data);\n  }\n};\n/**\n * Check if it has XDomainRequest.\n *\n * @api private\n */\n\n\nRequest.prototype.hasXDR = function () {\n  return 'undefined' !== typeof global.XDomainRequest && !this.xs && this.enablesXDR;\n};\n/**\n * Aborts the request.\n *\n * @api public\n */\n\n\nRequest.prototype.abort = function () {\n  this.cleanup();\n};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\n\n\nRequest.requestsCount = 0;\nRequest.requests = {};\n\nif (global.document) {\n  if (global.attachEvent) {\n    global.attachEvent('onunload', unloadHandler);\n  } else if (global.addEventListener) {\n    global.addEventListener('beforeunload', unloadHandler, false);\n  }\n}\n\nfunction unloadHandler() {\n  for (var i in Request.requests) {\n    if (Request.requests.hasOwnProperty(i)) {\n      Request.requests[i].abort();\n    }\n  }\n}","/**\n * Gets the keys for an object.\n *\n * @return {Array} keys\n * @api private\n */\nmodule.exports = Object.keys || function keys(obj) {\n  var arr = [];\n  var has = Object.prototype.hasOwnProperty;\n\n  for (var i in obj) {\n    if (has.call(obj, i)) {\n      arr.push(i);\n    }\n  }\n\n  return arr;\n};","module.exports = Array.isArray || function (arr) {\n  return Object.prototype.toString.call(arr) == '[object Array]';\n};","/**\n * An abstraction for slicing an arraybuffer even when\n * ArrayBuffer.prototype.slice is not supported\n *\n * @api public\n */\nmodule.exports = function (arraybuffer, start, end) {\n  var bytes = arraybuffer.byteLength;\n  start = start || 0;\n  end = end || bytes;\n\n  if (arraybuffer.slice) {\n    return arraybuffer.slice(start, end);\n  }\n\n  if (start < 0) {\n    start += bytes;\n  }\n\n  if (end < 0) {\n    end += bytes;\n  }\n\n  if (end > bytes) {\n    end = bytes;\n  }\n\n  if (start >= bytes || start >= end || bytes === 0) {\n    return new ArrayBuffer(0);\n  }\n\n  var abv = new Uint8Array(arraybuffer);\n  var result = new Uint8Array(end - start);\n\n  for (var i = start, ii = 0; i < end; i++, ii++) {\n    result[ii] = abv[i];\n  }\n\n  return result.buffer;\n};","module.exports = after;\n\nfunction after(count, callback, err_cb) {\n  var bail = false;\n  err_cb = err_cb || noop;\n  proxy.count = count;\n  return count === 0 ? callback() : proxy;\n\n  function proxy(err, result) {\n    if (proxy.count <= 0) {\n      throw new Error('after called too many times');\n    }\n\n    --proxy.count; // after first error, rest are passed to err_cb\n\n    if (err) {\n      bail = true;\n      callback(err); // future error callbacks will go to error handler\n\n      callback = err_cb;\n    } else if (proxy.count === 0 && !bail) {\n      callback(null, result);\n    }\n  }\n}\n\nfunction noop() {}","/*! https://mths.be/wtf8 v1.0.0 by @mathias */\n;\n\n(function (root) {\n  // Detect free variables `exports`\n  var freeExports = typeof exports == 'object' && exports; // Detect free variable `module`\n\n  var freeModule = typeof module == 'object' && module && module.exports == freeExports && module; // Detect free variable `global`, from Node.js or Browserified code,\n  // and use it as `root`\n\n  var freeGlobal = typeof global == 'object' && global;\n\n  if (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {\n    root = freeGlobal;\n  }\n  /*--------------------------------------------------------------------------*/\n\n\n  var stringFromCharCode = String.fromCharCode; // Taken from https://mths.be/punycode\n\n  function ucs2decode(string) {\n    var output = [];\n    var counter = 0;\n    var length = string.length;\n    var value;\n    var extra;\n\n    while (counter < length) {\n      value = string.charCodeAt(counter++);\n\n      if (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n        // high surrogate, and there is a next character\n        extra = string.charCodeAt(counter++);\n\n        if ((extra & 0xFC00) == 0xDC00) {\n          // low surrogate\n          output.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n        } else {\n          // unmatched surrogate; only append this code unit, in case the next\n          // code unit is the high surrogate of a surrogate pair\n          output.push(value);\n          counter--;\n        }\n      } else {\n        output.push(value);\n      }\n    }\n\n    return output;\n  } // Taken from https://mths.be/punycode\n\n\n  function ucs2encode(array) {\n    var length = array.length;\n    var index = -1;\n    var value;\n    var output = '';\n\n    while (++index < length) {\n      value = array[index];\n\n      if (value > 0xFFFF) {\n        value -= 0x10000;\n        output += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n        value = 0xDC00 | value & 0x3FF;\n      }\n\n      output += stringFromCharCode(value);\n    }\n\n    return output;\n  }\n  /*--------------------------------------------------------------------------*/\n\n\n  function createByte(codePoint, shift) {\n    return stringFromCharCode(codePoint >> shift & 0x3F | 0x80);\n  }\n\n  function encodeCodePoint(codePoint) {\n    if ((codePoint & 0xFFFFFF80) == 0) {\n      // 1-byte sequence\n      return stringFromCharCode(codePoint);\n    }\n\n    var symbol = '';\n\n    if ((codePoint & 0xFFFFF800) == 0) {\n      // 2-byte sequence\n      symbol = stringFromCharCode(codePoint >> 6 & 0x1F | 0xC0);\n    } else if ((codePoint & 0xFFFF0000) == 0) {\n      // 3-byte sequence\n      symbol = stringFromCharCode(codePoint >> 12 & 0x0F | 0xE0);\n      symbol += createByte(codePoint, 6);\n    } else if ((codePoint & 0xFFE00000) == 0) {\n      // 4-byte sequence\n      symbol = stringFromCharCode(codePoint >> 18 & 0x07 | 0xF0);\n      symbol += createByte(codePoint, 12);\n      symbol += createByte(codePoint, 6);\n    }\n\n    symbol += stringFromCharCode(codePoint & 0x3F | 0x80);\n    return symbol;\n  }\n\n  function wtf8encode(string) {\n    var codePoints = ucs2decode(string);\n    var length = codePoints.length;\n    var index = -1;\n    var codePoint;\n    var byteString = '';\n\n    while (++index < length) {\n      codePoint = codePoints[index];\n      byteString += encodeCodePoint(codePoint);\n    }\n\n    return byteString;\n  }\n  /*--------------------------------------------------------------------------*/\n\n\n  function readContinuationByte() {\n    if (byteIndex >= byteCount) {\n      throw Error('Invalid byte index');\n    }\n\n    var continuationByte = byteArray[byteIndex] & 0xFF;\n    byteIndex++;\n\n    if ((continuationByte & 0xC0) == 0x80) {\n      return continuationByte & 0x3F;\n    } // If we end up here, it’s not a continuation byte.\n\n\n    throw Error('Invalid continuation byte');\n  }\n\n  function decodeSymbol() {\n    var byte1;\n    var byte2;\n    var byte3;\n    var byte4;\n    var codePoint;\n\n    if (byteIndex > byteCount) {\n      throw Error('Invalid byte index');\n    }\n\n    if (byteIndex == byteCount) {\n      return false;\n    } // Read the first byte.\n\n\n    byte1 = byteArray[byteIndex] & 0xFF;\n    byteIndex++; // 1-byte sequence (no continuation bytes)\n\n    if ((byte1 & 0x80) == 0) {\n      return byte1;\n    } // 2-byte sequence\n\n\n    if ((byte1 & 0xE0) == 0xC0) {\n      var byte2 = readContinuationByte();\n      codePoint = (byte1 & 0x1F) << 6 | byte2;\n\n      if (codePoint >= 0x80) {\n        return codePoint;\n      } else {\n        throw Error('Invalid continuation byte');\n      }\n    } // 3-byte sequence (may include unpaired surrogates)\n\n\n    if ((byte1 & 0xF0) == 0xE0) {\n      byte2 = readContinuationByte();\n      byte3 = readContinuationByte();\n      codePoint = (byte1 & 0x0F) << 12 | byte2 << 6 | byte3;\n\n      if (codePoint >= 0x0800) {\n        return codePoint;\n      } else {\n        throw Error('Invalid continuation byte');\n      }\n    } // 4-byte sequence\n\n\n    if ((byte1 & 0xF8) == 0xF0) {\n      byte2 = readContinuationByte();\n      byte3 = readContinuationByte();\n      byte4 = readContinuationByte();\n      codePoint = (byte1 & 0x0F) << 0x12 | byte2 << 0x0C | byte3 << 0x06 | byte4;\n\n      if (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {\n        return codePoint;\n      }\n    }\n\n    throw Error('Invalid WTF-8 detected');\n  }\n\n  var byteArray;\n  var byteCount;\n  var byteIndex;\n\n  function wtf8decode(byteString) {\n    byteArray = ucs2decode(byteString);\n    byteCount = byteArray.length;\n    byteIndex = 0;\n    var codePoints = [];\n    var tmp;\n\n    while ((tmp = decodeSymbol()) !== false) {\n      codePoints.push(tmp);\n    }\n\n    return ucs2encode(codePoints);\n  }\n  /*--------------------------------------------------------------------------*/\n\n\n  var wtf8 = {\n    'version': '1.0.0',\n    'encode': wtf8encode,\n    'decode': wtf8decode\n  }; // Some AMD build optimizers, like r.js, check for specific condition patterns\n  // like the following:\n\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    define(function () {\n      return wtf8;\n    });\n  } else if (freeExports && !freeExports.nodeType) {\n    if (freeModule) {\n      // in Node.js or RingoJS v0.8.0+\n      freeModule.exports = wtf8;\n    } else {\n      // in Narwhal or RingoJS v0.7.0-\n      var object = {};\n      var hasOwnProperty = object.hasOwnProperty;\n\n      for (var key in wtf8) {\n        hasOwnProperty.call(wtf8, key) && (freeExports[key] = wtf8[key]);\n      }\n    }\n  } else {\n    // in Rhino or a web browser\n    root.wtf8 = wtf8;\n  }\n})(this);","/*\n * base64-arraybuffer\n * https://github.com/niklasvh/base64-arraybuffer\n *\n * Copyright (c) 2012 Niklas von Hertzen\n * Licensed under the MIT license.\n */\n(function () {\n  \"use strict\";\n\n  var chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\"; // Use a lookup table to find the index.\n\n  var lookup = new Uint8Array(256);\n\n  for (var i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n  }\n\n  exports.encode = function (arraybuffer) {\n    var bytes = new Uint8Array(arraybuffer),\n        i,\n        len = bytes.length,\n        base64 = \"\";\n\n    for (i = 0; i < len; i += 3) {\n      base64 += chars[bytes[i] >> 2];\n      base64 += chars[(bytes[i] & 3) << 4 | bytes[i + 1] >> 4];\n      base64 += chars[(bytes[i + 1] & 15) << 2 | bytes[i + 2] >> 6];\n      base64 += chars[bytes[i + 2] & 63];\n    }\n\n    if (len % 3 === 2) {\n      base64 = base64.substring(0, base64.length - 1) + \"=\";\n    } else if (len % 3 === 1) {\n      base64 = base64.substring(0, base64.length - 2) + \"==\";\n    }\n\n    return base64;\n  };\n\n  exports.decode = function (base64) {\n    var bufferLength = base64.length * 0.75,\n        len = base64.length,\n        i,\n        p = 0,\n        encoded1,\n        encoded2,\n        encoded3,\n        encoded4;\n\n    if (base64[base64.length - 1] === \"=\") {\n      bufferLength--;\n\n      if (base64[base64.length - 2] === \"=\") {\n        bufferLength--;\n      }\n    }\n\n    var arraybuffer = new ArrayBuffer(bufferLength),\n        bytes = new Uint8Array(arraybuffer);\n\n    for (i = 0; i < len; i += 4) {\n      encoded1 = lookup[base64.charCodeAt(i)];\n      encoded2 = lookup[base64.charCodeAt(i + 1)];\n      encoded3 = lookup[base64.charCodeAt(i + 2)];\n      encoded4 = lookup[base64.charCodeAt(i + 3)];\n      bytes[p++] = encoded1 << 2 | encoded2 >> 4;\n      bytes[p++] = (encoded2 & 15) << 4 | encoded3 >> 2;\n      bytes[p++] = (encoded3 & 3) << 6 | encoded4 & 63;\n    }\n\n    return arraybuffer;\n  };\n})();","/**\n * Create a blob builder even when vendor prefixes exist\n */\nvar BlobBuilder = global.BlobBuilder || global.WebKitBlobBuilder || global.MSBlobBuilder || global.MozBlobBuilder;\n/**\n * Check if Blob constructor is supported\n */\n\nvar blobSupported = function () {\n  try {\n    var a = new Blob(['hi']);\n    return a.size === 2;\n  } catch (e) {\n    return false;\n  }\n}();\n/**\n * Check if Blob constructor supports ArrayBufferViews\n * Fails in Safari 6, so we need to map to ArrayBuffers there.\n */\n\n\nvar blobSupportsArrayBufferView = blobSupported && function () {\n  try {\n    var b = new Blob([new Uint8Array([1, 2])]);\n    return b.size === 2;\n  } catch (e) {\n    return false;\n  }\n}();\n/**\n * Check if BlobBuilder is supported\n */\n\n\nvar blobBuilderSupported = BlobBuilder && BlobBuilder.prototype.append && BlobBuilder.prototype.getBlob;\n/**\n * Helper function that maps ArrayBufferViews to ArrayBuffers\n * Used by BlobBuilder constructor and old browsers that didn't\n * support it in the Blob constructor.\n */\n\nfunction mapArrayBufferViews(ary) {\n  for (var i = 0; i < ary.length; i++) {\n    var chunk = ary[i];\n\n    if (chunk.buffer instanceof ArrayBuffer) {\n      var buf = chunk.buffer; // if this is a subarray, make a copy so we only\n      // include the subarray region from the underlying buffer\n\n      if (chunk.byteLength !== buf.byteLength) {\n        var copy = new Uint8Array(chunk.byteLength);\n        copy.set(new Uint8Array(buf, chunk.byteOffset, chunk.byteLength));\n        buf = copy.buffer;\n      }\n\n      ary[i] = buf;\n    }\n  }\n}\n\nfunction BlobBuilderConstructor(ary, options) {\n  options = options || {};\n  var bb = new BlobBuilder();\n  mapArrayBufferViews(ary);\n\n  for (var i = 0; i < ary.length; i++) {\n    bb.append(ary[i]);\n  }\n\n  return options.type ? bb.getBlob(options.type) : bb.getBlob();\n}\n\n;\n\nfunction BlobConstructor(ary, options) {\n  mapArrayBufferViews(ary);\n  return new Blob(ary, options || {});\n}\n\n;\n\nmodule.exports = function () {\n  if (blobSupported) {\n    return blobSupportsArrayBufferView ? global.Blob : BlobConstructor;\n  } else if (blobBuilderSupported) {\n    return BlobBuilderConstructor;\n  } else {\n    return undefined;\n  }\n}();","/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\nexports = module.exports = debug.debug = debug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = require('ms');\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lowercased letter, i.e. \"n\".\n */\n\nexports.formatters = {};\n/**\n * Previously assigned color.\n */\n\nvar prevColor = 0;\n/**\n * Previous log timestamp.\n */\n\nvar prevTime;\n/**\n * Select a color.\n *\n * @return {Number}\n * @api private\n */\n\nfunction selectColor() {\n  return exports.colors[prevColor++ % exports.colors.length];\n}\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\n\nfunction debug(namespace) {\n  // define the `disabled` version\n  function disabled() {}\n\n  disabled.enabled = false; // define the `enabled` version\n\n  function enabled() {\n    var self = enabled; // set `diff` timestamp\n\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr; // add the `color` if not set\n\n    if (null == self.useColors) self.useColors = exports.useColors();\n    if (null == self.color && self.useColors) self.color = selectColor();\n    var args = new Array(arguments.length);\n\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %o\n      args = ['%o'].concat(args);\n    } // apply any `formatters` transformations\n\n\n    var index = 0;\n    args[0] = args[0].replace(/%([a-z%])/g, function (match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val); // now we need to remove `args[index]` since it's inlined in the `format`\n\n        args.splice(index, 1);\n        index--;\n      }\n\n      return match;\n    }); // apply env-specific formatting\n\n    args = exports.formatArgs.apply(self, args);\n    var logFn = enabled.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n\n  enabled.enabled = true;\n  var fn = exports.enabled(namespace) ? enabled : disabled;\n  fn.namespace = namespace;\n  return fn;\n}\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n  var split = (namespaces || '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (var i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n\n    namespaces = split[i].replace(/[\\\\^$+?.()|[\\]{}]/g, '\\\\$&').replace(/\\*/g, '.*?');\n\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n}\n/**\n * Disable debug output.\n *\n * @api public\n */\n\n\nfunction disable() {\n  exports.enable('');\n}\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\n\nfunction enabled(name) {\n  var i, len;\n\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}","/**\n * Helpers.\n */\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} options\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function (val, options) {\n  options = options || {};\n  var type = typeof val;\n\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isNaN(val) === false) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n\n  throw new Error('val is not a non-empty string or a valid number. val=' + JSON.stringify(val));\n};\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\n\nfunction parse(str) {\n  str = String(str);\n\n  if (str.length > 10000) {\n    return;\n  }\n\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(str);\n\n  if (!match) {\n    return;\n  }\n\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n\n    default:\n      return undefined;\n  }\n}\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\n\nfunction fmtShort(ms) {\n  if (ms >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n\n  if (ms >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n\n  if (ms >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n\n  if (ms >= s) {\n    return Math.round(ms / s) + 's';\n  }\n\n  return ms + 'ms';\n}\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\n\nfunction fmtLong(ms) {\n  return plural(ms, d, 'day') || plural(ms, h, 'hour') || plural(ms, m, 'minute') || plural(ms, s, 'second') || ms + ' ms';\n}\n/**\n * Pluralization helper.\n */\n\n\nfunction plural(ms, n, name) {\n  if (ms < n) {\n    return;\n  }\n\n  if (ms < n * 1.5) {\n    return Math.floor(ms / n) + ' ' + name;\n  }\n\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}","/**\n * Module requirements.\n */\nvar Polling = require('./polling');\n\nvar inherit = require('component-inherit');\n/**\n * Module exports.\n */\n\n\nmodule.exports = JSONPPolling;\n/**\n * Cached regular expressions.\n */\n\nvar rNewline = /\\n/g;\nvar rEscapedNewline = /\\\\n/g;\n/**\n * Global JSONP callbacks.\n */\n\nvar callbacks;\n/**\n * Noop.\n */\n\nfunction empty() {}\n/**\n * JSONP Polling constructor.\n *\n * @param {Object} opts.\n * @api public\n */\n\n\nfunction JSONPPolling(opts) {\n  Polling.call(this, opts);\n  this.query = this.query || {}; // define global callbacks array if not present\n  // we do this here (lazily) to avoid unneeded global pollution\n\n  if (!callbacks) {\n    // we need to consider multiple engines in the same page\n    if (!global.___eio) global.___eio = [];\n    callbacks = global.___eio;\n  } // callback identifier\n\n\n  this.index = callbacks.length; // add callback to jsonp global\n\n  var self = this;\n  callbacks.push(function (msg) {\n    self.onData(msg);\n  }); // append to query string\n\n  this.query.j = this.index; // prevent spurious errors from being emitted when the window is unloaded\n\n  if (global.document && global.addEventListener) {\n    global.addEventListener('beforeunload', function () {\n      if (self.script) self.script.onerror = empty;\n    }, false);\n  }\n}\n/**\n * Inherits from Polling.\n */\n\n\ninherit(JSONPPolling, Polling);\n/*\n * JSONP only supports binary as base64 encoded strings\n */\n\nJSONPPolling.prototype.supportsBinary = false;\n/**\n * Closes the socket.\n *\n * @api private\n */\n\nJSONPPolling.prototype.doClose = function () {\n  if (this.script) {\n    this.script.parentNode.removeChild(this.script);\n    this.script = null;\n  }\n\n  if (this.form) {\n    this.form.parentNode.removeChild(this.form);\n    this.form = null;\n    this.iframe = null;\n  }\n\n  Polling.prototype.doClose.call(this);\n};\n/**\n * Starts a poll cycle.\n *\n * @api private\n */\n\n\nJSONPPolling.prototype.doPoll = function () {\n  var self = this;\n  var script = document.createElement('script');\n\n  if (this.script) {\n    this.script.parentNode.removeChild(this.script);\n    this.script = null;\n  }\n\n  script.async = true;\n  script.src = this.uri();\n\n  script.onerror = function (e) {\n    self.onError('jsonp poll error', e);\n  };\n\n  var insertAt = document.getElementsByTagName('script')[0];\n\n  if (insertAt) {\n    insertAt.parentNode.insertBefore(script, insertAt);\n  } else {\n    (document.head || document.body).appendChild(script);\n  }\n\n  this.script = script;\n  var isUAgecko = 'undefined' !== typeof navigator && /gecko/i.test(navigator.userAgent);\n\n  if (isUAgecko) {\n    setTimeout(function () {\n      var iframe = document.createElement('iframe');\n      document.body.appendChild(iframe);\n      document.body.removeChild(iframe);\n    }, 100);\n  }\n};\n/**\n * Writes with a hidden iframe.\n *\n * @param {String} data to send\n * @param {Function} called upon flush.\n * @api private\n */\n\n\nJSONPPolling.prototype.doWrite = function (data, fn) {\n  var self = this;\n\n  if (!this.form) {\n    var form = document.createElement('form');\n    var area = document.createElement('textarea');\n    var id = this.iframeId = 'eio_iframe_' + this.index;\n    var iframe;\n    form.className = 'socketio';\n    form.style.position = 'absolute';\n    form.style.top = '-1000px';\n    form.style.left = '-1000px';\n    form.target = id;\n    form.method = 'POST';\n    form.setAttribute('accept-charset', 'utf-8');\n    area.name = 'd';\n    form.appendChild(area);\n    document.body.appendChild(form);\n    this.form = form;\n    this.area = area;\n  }\n\n  this.form.action = this.uri();\n\n  function complete() {\n    initIframe();\n    fn();\n  }\n\n  function initIframe() {\n    if (self.iframe) {\n      try {\n        self.form.removeChild(self.iframe);\n      } catch (e) {\n        self.onError('jsonp polling iframe removal error', e);\n      }\n    }\n\n    try {\n      // ie6 dynamic iframes with target=\"\" support (thanks Chris Lambacher)\n      var html = '<iframe src=\"javascript:0\" name=\"' + self.iframeId + '\">';\n      iframe = document.createElement(html);\n    } catch (e) {\n      iframe = document.createElement('iframe');\n      iframe.name = self.iframeId;\n      iframe.src = 'javascript:0';\n    }\n\n    iframe.id = self.iframeId;\n    self.form.appendChild(iframe);\n    self.iframe = iframe;\n  }\n\n  initIframe(); // escape \\n to prevent it from being converted into \\r\\n by some UAs\n  // double escaping is required for escaped new lines because unescaping of new lines can be done safely on server-side\n\n  data = data.replace(rEscapedNewline, '\\\\\\n');\n  this.area.value = data.replace(rNewline, '\\\\n');\n\n  try {\n    this.form.submit();\n  } catch (e) {}\n\n  if (this.iframe.attachEvent) {\n    this.iframe.onreadystatechange = function () {\n      if (self.iframe.readyState === 'complete') {\n        complete();\n      }\n    };\n  } else {\n    this.iframe.onload = complete;\n  }\n};","/**\n * Module dependencies.\n */\nvar Transport = require('../transport');\n\nvar parser = require('engine.io-parser');\n\nvar parseqs = require('parseqs');\n\nvar inherit = require('component-inherit');\n\nvar yeast = require('yeast');\n\nvar debug = require('debug')('engine.io-client:websocket');\n\nvar BrowserWebSocket = global.WebSocket || global.MozWebSocket;\nvar NodeWebSocket;\n\nif (typeof window === 'undefined') {\n  try {\n    NodeWebSocket = require('ws');\n  } catch (e) {}\n}\n/**\n * Get either the `WebSocket` or `MozWebSocket` globals\n * in the browser or try to resolve WebSocket-compatible\n * interface exposed by `ws` for Node-like environment.\n */\n\n\nvar WebSocket = BrowserWebSocket;\n\nif (!WebSocket && typeof window === 'undefined') {\n  WebSocket = NodeWebSocket;\n}\n/**\n * Module exports.\n */\n\n\nmodule.exports = WS;\n/**\n * WebSocket transport constructor.\n *\n * @api {Object} connection options\n * @api public\n */\n\nfunction WS(opts) {\n  var forceBase64 = opts && opts.forceBase64;\n\n  if (forceBase64) {\n    this.supportsBinary = false;\n  }\n\n  this.perMessageDeflate = opts.perMessageDeflate;\n  this.usingBrowserWebSocket = BrowserWebSocket && !opts.forceNode;\n\n  if (!this.usingBrowserWebSocket) {\n    WebSocket = NodeWebSocket;\n  }\n\n  Transport.call(this, opts);\n}\n/**\n * Inherits from Transport.\n */\n\n\ninherit(WS, Transport);\n/**\n * Transport name.\n *\n * @api public\n */\n\nWS.prototype.name = 'websocket';\n/*\n * WebSockets support binary\n */\n\nWS.prototype.supportsBinary = true;\n/**\n * Opens socket.\n *\n * @api private\n */\n\nWS.prototype.doOpen = function () {\n  if (!this.check()) {\n    // let probe timeout\n    return;\n  }\n\n  var uri = this.uri();\n  var protocols = void 0;\n  var opts = {\n    agent: this.agent,\n    perMessageDeflate: this.perMessageDeflate\n  }; // SSL options for Node.js client\n\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n\n  if (this.extraHeaders) {\n    opts.headers = this.extraHeaders;\n  }\n\n  if (this.localAddress) {\n    opts.localAddress = this.localAddress;\n  }\n\n  try {\n    this.ws = this.usingBrowserWebSocket ? new WebSocket(uri) : new WebSocket(uri, protocols, opts);\n  } catch (err) {\n    return this.emit('error', err);\n  }\n\n  if (this.ws.binaryType === undefined) {\n    this.supportsBinary = false;\n  }\n\n  if (this.ws.supports && this.ws.supports.binary) {\n    this.supportsBinary = true;\n    this.ws.binaryType = 'nodebuffer';\n  } else {\n    this.ws.binaryType = 'arraybuffer';\n  }\n\n  this.addEventListeners();\n};\n/**\n * Adds event listeners to the socket\n *\n * @api private\n */\n\n\nWS.prototype.addEventListeners = function () {\n  var self = this;\n\n  this.ws.onopen = function () {\n    self.onOpen();\n  };\n\n  this.ws.onclose = function () {\n    self.onClose();\n  };\n\n  this.ws.onmessage = function (ev) {\n    self.onData(ev.data);\n  };\n\n  this.ws.onerror = function (e) {\n    self.onError('websocket error', e);\n  };\n};\n/**\n * Writes data to socket.\n *\n * @param {Array} array of packets.\n * @api private\n */\n\n\nWS.prototype.write = function (packets) {\n  var self = this;\n  this.writable = false; // encodePacket efficient as it uses WS framing\n  // no need for encodePayload\n\n  var total = packets.length;\n\n  for (var i = 0, l = total; i < l; i++) {\n    (function (packet) {\n      parser.encodePacket(packet, self.supportsBinary, function (data) {\n        if (!self.usingBrowserWebSocket) {\n          // always create a new object (GH-437)\n          var opts = {};\n\n          if (packet.options) {\n            opts.compress = packet.options.compress;\n          }\n\n          if (self.perMessageDeflate) {\n            var len = 'string' === typeof data ? global.Buffer.byteLength(data) : data.length;\n\n            if (len < self.perMessageDeflate.threshold) {\n              opts.compress = false;\n            }\n          }\n        } // Sometimes the websocket has already been closed but the browser didn't\n        // have a chance of informing us about it yet, in that case send will\n        // throw an error\n\n\n        try {\n          if (self.usingBrowserWebSocket) {\n            // TypeError is thrown when passing the second argument on Safari\n            self.ws.send(data);\n          } else {\n            self.ws.send(data, opts);\n          }\n        } catch (e) {\n          debug('websocket closed before onclose event');\n        }\n\n        --total || done();\n      });\n    })(packets[i]);\n  }\n\n  function done() {\n    self.emit('flush'); // fake drain\n    // defer to next tick to allow Socket to clear writeBuffer\n\n    setTimeout(function () {\n      self.writable = true;\n      self.emit('drain');\n    }, 0);\n  }\n};\n/**\n * Called upon close\n *\n * @api private\n */\n\n\nWS.prototype.onClose = function () {\n  Transport.prototype.onClose.call(this);\n};\n/**\n * Closes socket.\n *\n * @api private\n */\n\n\nWS.prototype.doClose = function () {\n  if (typeof this.ws !== 'undefined') {\n    this.ws.close();\n  }\n};\n/**\n * Generates uri for connection.\n *\n * @api private\n */\n\n\nWS.prototype.uri = function () {\n  var query = this.query || {};\n  var schema = this.secure ? 'wss' : 'ws';\n  var port = ''; // avoid port if default for schema\n\n  if (this.port && ('wss' === schema && Number(this.port) !== 443 || 'ws' === schema && Number(this.port) !== 80)) {\n    port = ':' + this.port;\n  } // append timestamp to URI\n\n\n  if (this.timestampRequests) {\n    query[this.timestampParam] = yeast();\n  } // communicate binary support capabilities\n\n\n  if (!this.supportsBinary) {\n    query.b64 = 1;\n  }\n\n  query = parseqs.encode(query); // prepend ? to query\n\n  if (query.length) {\n    query = '?' + query;\n  }\n\n  var ipv6 = this.hostname.indexOf(':') !== -1;\n  return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;\n};\n/**\n * Feature detection for WebSocket.\n *\n * @return {Boolean} whether this transport is available.\n * @api public\n */\n\n\nWS.prototype.check = function () {\n  return !!WebSocket && !('__initialize' in WebSocket && this.name === WS.prototype.name);\n};","/**\r\n * JSON parse.\r\n *\r\n * @see Based on jQuery#parseJSON (MIT) and JSON2\r\n * @api private\r\n */\nvar rvalidchars = /^[\\],:{}\\s]*$/;\nvar rvalidescape = /\\\\(?:[\"\\\\\\/bfnrt]|u[0-9a-fA-F]{4})/g;\nvar rvalidtokens = /\"[^\"\\\\\\n\\r]*\"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?/g;\nvar rvalidbraces = /(?:^|:|,)(?:\\s*\\[)+/g;\nvar rtrimLeft = /^\\s+/;\nvar rtrimRight = /\\s+$/;\n\nmodule.exports = function parsejson(data) {\n  if ('string' != typeof data || !data) {\n    return null;\n  }\n\n  data = data.replace(rtrimLeft, '').replace(rtrimRight, ''); // Attempt to parse using the native JSON parser first\n\n  if (global.JSON && JSON.parse) {\n    return JSON.parse(data);\n  }\n\n  if (rvalidchars.test(data.replace(rvalidescape, '@').replace(rvalidtokens, ']').replace(rvalidbraces, ''))) {\n    return new Function('return ' + data)();\n  }\n};","module.exports = toArray;\n\nfunction toArray(list, index) {\n  var array = [];\n  index = index || 0;\n\n  for (var i = index || 0; i < list.length; i++) {\n    array[i - index] = list[i];\n  }\n\n  return array;\n}","/**\n * Expose `Backoff`.\n */\nmodule.exports = Backoff;\n/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\n\nfunction Backoff(opts) {\n  opts = opts || {};\n  this.ms = opts.min || 100;\n  this.max = opts.max || 10000;\n  this.factor = opts.factor || 2;\n  this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n  this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\n\n\nBackoff.prototype.duration = function () {\n  var ms = this.ms * Math.pow(this.factor, this.attempts++);\n\n  if (this.jitter) {\n    var rand = Math.random();\n    var deviation = Math.floor(rand * this.jitter * ms);\n    ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n  }\n\n  return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\n\n\nBackoff.prototype.reset = function () {\n  this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\n\n\nBackoff.prototype.setMin = function (min) {\n  this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\n\n\nBackoff.prototype.setMax = function (max) {\n  this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\n\n\nBackoff.prototype.setJitter = function (jitter) {\n  this.jitter = jitter;\n};"],"sourceRoot":""}