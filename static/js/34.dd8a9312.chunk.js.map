{"version":3,"sources":["Component/PredictionModule/PredictionParticipants.jsx"],"names":["PredictionParticipants","props","_this","Object","_Users_mukesh_sites_projects_dup_fantasysports_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","this","_Users_mukesh_sites_projects_dup_fantasysports_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_Users_mukesh_sites_projects_dup_fantasysports_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","renderShimmer","idx","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","key","className","react_loading_skeleton__WEBPACK_IMPORTED_MODULE_12___default","height","width","renderItem","item","isown","user_id","id","state","isLeader","user_rank","user_name","src","Images","IC_COIN","alt","bet_coins","win_coins","estimated_winning","PLIST","OWNDATA","PNO","PSIZE","HMORE","ISLOAD","PMID","HOS","back","title","_this2","match","params","matchParam","pmid","atob","prediction_master_id","setState","location","getDetail","_this3","_this$state","param","page_no","page_size","getPredictionParticipants","then","responseJson","response_code","WSC","ownData","data","own","listOther","other_list","concat","_Users_mukesh_sites_projects_dup_fantasysports_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","length","_this4","_this$state2","_views_Dashboard__WEBPACK_IMPORTED_MODULE_7__","Consumer","context","react_helmet__WEBPACK_IMPORTED_MODULE_13___default","titleTemplate","MetaData","template","PRDPLIST","name","content","description","keywords","_components_CustomHeader__WEBPACK_IMPORTED_MODULE_15__","assign","HeaderOption","AL","react_infinite_scroll_component__WEBPACK_IMPORTED_MODULE_11__","dataLength","hasMore","next","map","_CustomComponent__WEBPACK_IMPORTED_MODULE_8__","BG_IMAGE","no_data_bg_image","CENTER_IMAGE","BRAND_LOGO_FULL","MESSAGE_1","_times","Component"],"mappings":"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","file":"static/js/34.dd8a9312.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { MyContext } from '../../views/Dashboard';\nimport { NoDataView } from '../CustomComponent';\nimport { getPredictionParticipants } from '../../WSHelper/WSCallings';\nimport { _times } from '../../Utilities/Utilities';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport Skeleton from 'react-loading-skeleton';\nimport Helmet from 'react-helmet';\nimport MetaData from '../../helper/MetaData';\nimport CustomHeader from '../../components/CustomHeader';\nimport Images from '../../components/images';\nimport * as WSC from \"../../WSHelper/WSConstants\";\nimport * as AL from \"../../helper/AppLabels\";\n\nclass PredictionParticipants extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            PLIST: [],\n            OWNDATA: '',\n            PNO: 1,\n            PSIZE: 20,\n            HMORE: false,\n            ISLOAD: false,\n            PMID: '',\n            isLeader: false,\n            HOS: {\n                back: true,\n                title: 'Participants',\n            }\n        }\n    }\n\n    UNSAFE_componentWillMount() {\n        if (this.props.match && this.props.match.params) {\n            const matchParam = this.props.match.params;\n            let pmid = atob(matchParam.prediction_master_id)\n            this.setState({\n                PMID: pmid,\n                isLeader: (this.props.location && this.props.location.state) ? this.props.location.state.isLeader : false\n            }, () => {\n                this.getDetail();\n            });\n        }\n    }\n\n    getDetail() {\n        const { PNO, PSIZE, PLIST, PMID, OWNDATA, isLeader } = this.state;\n        let param = {\n            \"prediction_master_id\": PMID,\n            \"page_no\": PNO,\n            \"page_size\": PSIZE,\n            \"isLeader\": isLeader\n        }\n        this.setState({ ISLOAD: true });\n        getPredictionParticipants(param).then((responseJson) => {\n            this.setState({ ISLOAD: false });\n            if (responseJson.response_code === WSC.successCode) {\n                let ownData = responseJson.data.own || '';\n                let listOther = responseJson.data.other_list || [];\n                this.setState({\n                    PLIST: [...PLIST, ...listOther],\n                    OWNDATA: PNO === 1 ? ownData : OWNDATA,\n                    HMORE: listOther.length >= (PSIZE - (ownData || OWNDATA ? 1 : 0)),\n                    PNO: PNO + 1\n                })\n            }\n        })\n    }\n\n    renderShimmer = (idx) => {\n        return (\n            <div key={idx} className=\"list-item\">\n                <span className=\"shimmer\">\n                    <Skeleton height={6} width={'90%'} />\n                    <Skeleton height={4} width={'50%'} />\n                </span>\n                <span className=\"amount\">\n                    <Skeleton height={6} width={'30%'} />\n                </span>\n                <span className=\"amount\">\n                    <Skeleton height={6} width={'40%'} />\n                </span>\n            </div>\n        )\n    }\n\n    renderItem = (item, isown, idx) => {\n        return (\n            <div key={item.user_id + idx} id={item.user_id + idx} className={\"list-item\" + (isown ? ' own-v' : '')}>\n                {this.state.isLeader && <span className=\"u-rank\">{item.user_rank}</span>}\n                <span>{item.user_name}</span>\n                <span className=\"amount\"><img src={Images.IC_COIN} alt=\"\" /><div className=\"val\">{item.bet_coins}</div></span>\n                <span className=\"amount\"><img src={Images.IC_COIN} alt=\"\" /><div className=\"val\">{(this.state.isLeader ? item.win_coins : item.estimated_winning) || 0}</div></span>\n            </div>\n        )\n    }\n\n    render() {\n        const { PLIST, HOS, ISLOAD, OWNDATA, HMORE, isLeader } = this.state;\n        return (\n            <MyContext.Consumer>\n                {(context) => (\n                    <div className={\"web-container prediction-part-v\" + (isLeader ? ' is-leaderboard' : '')}>\n                        <Helmet titleTemplate={`${MetaData.template} | %s`}>\n                            <title>{MetaData.PRDPLIST.title}</title>\n                            <meta name=\"description\" content={MetaData.PRDPLIST.description} />\n                            <meta name=\"keywords\" content={MetaData.PRDPLIST.keywords}></meta>\n                        </Helmet>\n                        <CustomHeader {...this.props} HeaderOption={HOS} />\n                        <div className=\"header-v\">\n                            {isLeader && <span className=\"u-rank\">{AL.RANK}</span>}\n                            <span>{AL.USER_NAME}</span>\n                            <span className=\"amount\">{AL.BID}</span>\n                            <span className=\"amount\">{isLeader ? AL.WINNINGS : AL.EST_WIN}</span>\n                        </div>\n                        {\n                            OWNDATA && this.renderItem(OWNDATA, true, -1)\n                        }\n                        {\n                            PLIST.length > 0 && <InfiniteScroll\n                                dataLength={PLIST.length}\n                                hasMore={!ISLOAD && HMORE}\n                                next={() => this.getDetail()}\n                            >\n                                <div className=\"list-view\">\n                                    {\n                                        PLIST.map((item, idx) => {\n                                            return this.renderItem(item, false, idx);\n                                        })\n                                    }\n                                </div>\n                            </InfiniteScroll>\n                        }\n                        {\n                            PLIST.length === 0 && !OWNDATA && !ISLOAD &&\n                            <NoDataView\n                                BG_IMAGE={Images.no_data_bg_image}\n                                CENTER_IMAGE={Images.BRAND_LOGO_FULL}\n                                MESSAGE_1={AL.NO_DATA_FOUND}\n                            />\n                        }\n                        {\n                            PLIST.length === 0 && ISLOAD &&\n                            _times(16, (idx) => {\n                                return this.renderShimmer(idx)\n                            })\n                        }\n                    </div>\n                )}\n            </MyContext.Consumer>\n        )\n    }\n}\nexport default PredictionParticipants;"],"sourceRoot":""}