{"version":3,"sources":["Component/SportsHub/SportsHub.jsx"],"names":["ReactSlickSlider","lazy","Promise","all","__webpack_require__","e","then","bind","Filter","resolve","appLang","WSManager","getAppLang","SportsHub","props","_this","Object","_Users_mukesh_sites_projects_dup_fantasysports_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_Users_mukesh_sites_projects_dup_fantasysports_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_mukesh_sites_projects_dup_fantasysports_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","updateDeviceToken","param","device_type","WSC","device_id","getDeviceId","loggedIn","responseJson","setData","sports_id","Utilities","getUrlSports","fantasy_list","getMasterData","sh_list","sports_hub","setState","SLIST","GLIST","filterArray","FHGLIST","_filter","obj","is_featured","FGLIST","HGLIST","FilterHGLIST","FilterGLIST","setValue","setAppSelectedSport","ACSPORTTAB","AppSelectedSport","checkSportID","checkOldUrl","interval","setInterval","clearInterval","onTabClick","item","ls","set","history","replace","window","location","pathname","getSelectedSportsForUrl","selectGameType","handleAppBackManage","sport","get","allowedSport","allowed_sports","length","includes","scrollToTop","SELECTED_GAMET","setTimeout","CustomHeader","showSHSCM","setPickedGameType","game_key","push","FSport","showFilter","showHubFitlers","hideFilter","filterBySport","filterBy","SelectedSport","refreshList","spID","state","itm","renderBigcard","idx","renderImg","image","getSettingURL","Images","DFS_BIG","avaSports","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","key","onClick","src","alt","AL","Fragment","_Map","sportsId","Sports","url","selectModuleSport","mode","stopPropagation","goToScreen","getReferralValue","isCoinAllowed","a_coin","coinsAmt","parseInt","referalData","coins","realAmt","real_amount","bonusAmt","bonus_amount","currency_code","renderBannerCard","a_hub_banner","bannerImg","hub_banner","amountRef","PICKEM_SHAPE_IMG","MEN_IMG_REFER","href","renderCard","sportImg","GameType","MultiGame","MULTI_GAME_IMG","Free2Play","FTP_IMG","Pred","PRED_IMG","Pickem","PICKEM_TOUR_IMG","OpenPred","OPEN_PRED_PP","OpenPredLead","OPEN_PRED_LEAD","DFS_SIDE_IMG","HOS","title","hideShadow","isPrimary","filter","handelNativeGoogleLogin","_isEmpty","ReferralData","getReferralData","referral_data","enableDisableBack","flag","_this2","data","action","type","targetFunc","sendMessageToApp","ReactNativeWebView","postMessage","JSON","stringify","_this3","addEventListener","undefined","locale","setAppLang","UserProfile","setProfile","LoginSessionKey","setToken","isMobileApp","setIsMobileApp","token","setDeviceId","notif","group_id","canRedirect","pathName","trim","notification_type","toLowerCase","contest_unique_id","Constants","dateformaturl","parseURLDate","season_scheduled_date","collection_master_id","home","away","btoa","custom_notification_type","can","blockMultiRedirection","_this4","response_code","setReferralData","replaceState","_this5","_this$state","FitlerOptions","filtered_league_id","_views_Dashboard__WEBPACK_IMPORTED_MODULE_6__","Provider","react_helmet__WEBPACK_IMPORTED_MODULE_9___default","titleTemplate","concat","MetaData","template","SHS","name","content","description","keywords","_components_CustomHeader__WEBPACK_IMPORTED_MODULE_11__","assign","HeaderOption","showLobbyFitlers","react__WEBPACK_IMPORTED_MODULE_5__","fallback","selectedFSport","sportsList","settings","touchThreshold","infinite","slidesToScroll","slidesToShow","variableWidth","initialSlide","dots","centerMode","centerPadding","responsive","breakpoint","_times","EARN_COINS","PureComponent"],"mappings":"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","file":"static/js/36.79941aa9.chunk.js","sourcesContent":["import React, { PureComponent,lazy, Suspense } from 'react';\nimport { MyContext } from '../../views/Dashboard';\nimport { Utilities, _Map, _times, _filter, _isEmpty,parseURLDate } from '../../Utilities/Utilities';\nimport { setValue, AppSelectedSport, SELECTED_GAMET, GameType, ReferralData } from '../../helper/Constants';\nimport Helmet from 'react-helmet';\nimport MetaData from '../../helper/MetaData';\nimport CustomHeader from '../../components/CustomHeader';\nimport WSManager from '../../WSHelper/WSManager';\nimport ls from 'local-storage';\nimport * as AL from \"../../helper/AppLabels\";\nimport Images from '../../components/images';\nimport { Sports } from \"../../JsonFiles\";\nimport { getReferralData,updateDeviceToken } from '../../WSHelper/WSCallings';\nimport * as WSC from \"../../WSHelper/WSConstants\";\nimport * as Constants from \"../../helper/Constants\";\nconst ReactSlickSlider = lazy(()=>import('../CustomComponent/ReactSlickSlider'));\nconst Filter = lazy(()=>import('../../components/filter'));\n\nconst appLang = WSManager.getAppLang();\nclass SportsHub extends PureComponent {\n    constructor(props) {\n        super(props)\n        this.state = {\n            SLIST: [],\n            GLIST: [],\n            HGLIST: [],\n            FilterGLIST: [],\n            FilterHGLIST: [],\n            ACSPORTTAB: 0,\n            filterArray: [],\n            SelectedSport: '',\n            showHubFitlers: false,\n            referalData:'',\n            HOS: {\n                title: '',\n                hideShadow: true,\n                isPrimary: true,\n                filter: true\n            }\n        }\n    }\n\n    componentDidMount() {\n        Utilities.handleAppBackManage('sports-hub')\n        this.handelNativeGoogleLogin()\n        this.setData()\n        if (!_isEmpty(ReferralData)) {\n            this.setState({\n                referalData: ReferralData.referral_data || \"\",\n            })\n        } else {\n            if(Utilities.getMasterData().a_hub_banner == 1){\n                this.getReferralData()\n            }\n        }\n    }\n    componentWillUnmount() {\n        this.enableDisableBack(false);\n     }\n \n     enableDisableBack(flag){\n         let data = {\n             action: 'back',\n             type: flag,\n             targetFunc:'back'\n         }\n         this.sendMessageToApp(data);\n         setTimeout(() => {\n             let push_data = {\n                 action: 'push',\n                 targetFunc: 'push',\n                 type: 'receive',\n             }\n             this.sendMessageToApp(push_data)\n         }, 300);\n     }\n \n     sendMessageToApp(action) {\n         if (window.ReactNativeWebView) {\n             window.ReactNativeWebView.postMessage(JSON.stringify(action));\n         }\n     }\n     handelNativeGoogleLogin() {\n        window.addEventListener('message', (e) => {\n\n            if(e.data.locale != undefined){\n                WSManager.setAppLang(e.data.locale);\n\n            }\n            if (e.data.UserProfile != undefined) {\n                WSManager.setProfile(e.data.UserProfile);\n            } \n            if (e.data.LoginSessionKey != '' && e.data.LoginSessionKey != undefined) {\n                WSManager.setToken(e.data.LoginSessionKey);\n            }   \n            if (e.data.isMobileApp != '' && e.data.isMobileApp != undefined) {\n                WSManager.setIsMobileApp(e.data.isMobileApp);\n            }  \n            if (e.data.action == 'push' && e.data.type == 'deviceid') {\n                if(e.data.token && e.data.token != WSC.DeviceToken.getDeviceId()){\n                    WSC.DeviceToken.setDeviceId(e.data.token);\n                    this.updateDeviceToken();\n                }\n            }\n            if (e.data.action == 'push' && e.data.type == 'receive') {\n                if(e.data.notif.group_id && e.data.notif.group_id!=null && e.data.notif.group_id!=''){\n                    if(this.state.canRedirect){\n                        this.setState({canRedirect:false})\n                        let pathName = 'group-chat/'+e.data.notif.group_id;\n                       // alert('HUb pathName>>'+JSON.stringify(pathName));\n                        if(pathName && pathName.trim()!=''){\n                            this.props.history.push({ pathname: pathName });\n                        }\n                    }\n                }\n                let pathName = '';\n                if (e.data.notif.notification_type == '120') {//deposit promotion\n                    pathName = 'add-funds';\n                }\n                else if (e.data.notif.notification_type == '121') {// promotion for contes\n                    pathName = Utilities.getSelectedSportsForUrl().toLowerCase() + '/contest/' + e.data.notif.contest_unique_id\n                }\n                else if (e.data.notif.notification_type == '123') {// admin refer a friend\n                    pathName = 'refer-friend';\n                }\n                else if (e.data.notif.notification_type == '124' ||\n                    e.data.notif.notification_type == '131' ||\n                    e.data.notif.notification_type == '132' ||\n                    e.data.notif.notification_type == '300') {//124-promotion for fixture 131-match delay  132-lineup announced\n                    ls.set('selectedSports', e.data.notif.sports_id);\n                    Constants.setValue.setAppSelectedSport(e.data.notif.sports_id);\n                    let dateformaturl = parseURLDate(e.data.notif.season_scheduled_date);\n                    pathName = Utilities.getSelectedSportsForUrl().toLowerCase() + '/contest-listing/' + e.data.notif.collection_master_id + '/' + e.data.notif.home + \"-vs-\" + e.data.notif.away + \"-\" + dateformaturl + \"?sgmty=\" + btoa(Constants.SELECTED_GAMET);\n                }\n                else if (e.data.notif.notification_type == '135') {// custom notification\n                    if (e.data.notif.custom_notification_type == 1) {\n                        pathName = 'lobby';\n                    }\n                    else if (e.data.notif.custom_notification_type == 2) {\n                        pathName = 'my-wallet';\n                    }\n                    else if (e.data.notif.custom_notification_type == 3) {\n                        pathName = 'my-profile';\n                    }\n                    else if (e.data.notif.custom_notification_type == 4) {\n                        pathName = 'my-contests?contest=upcoming';\n                    }\n                    else if (e.data.notif.custom_notification_type == 5) {\n                        pathName = 'refer-friend';\n                    }\n                    else if (e.data.notif.custom_notification_type == 7) {\n                        pathName = 'add-funds';\n                    }\n                    else {\n                        pathName = 'lobby';\n                    }\n                }\n                if (pathName && pathName.trim() != '') {\n                    this.props.history.push({ pathname: pathName });\n                } \n            }\n            else if (e.data.action == 'app_dep_linking' && e.data.type == 'android') {\n                let can = ls.get('canRedirect');\n                if (can == null || can) {\n                    this.blockMultiRedirection()\n                    let pathName = e.data.pathName;\n                    if (pathName) {\n                        this.props.history.push(pathName);\n                    }\n                }\n            }\n            else if (e.data.action == 'app_dep_linking' && e.data.type == 'reset') {\n                ls.set('canRedirect', true)\n            }\n        });\n    }\n    blockMultiRedirection() {\n        ls.set('canRedirect', false)\n        setTimeout(() => {\n\n            ls.set('canRedirect', true)\n        }, 1000 * 5);\n    }\n\n    getReferralData() {\n        getReferralData().then((responseJson) => {\n            if (responseJson.response_code == WSC.successCode) {\n                if (responseJson.data) {\n                    setValue.setReferralData(responseJson.data)\n                    this.setState({\n                        referalData: responseJson.data.referral_data || \"\",\n                    })\n                }\n            }\n        })\n    }\n\n    updateDeviceToken = () => {\n        let param = {\n            \"device_type\": WSC.deviceTypeAndroid,\n            \"device_id\": WSC.DeviceToken.getDeviceId(),\n        }\n        if(WSManager.loggedIn()){\n            updateDeviceToken(param).then((responseJson) => {\n            })\n        }\n    }\n\n    setData = () => {\n        const sports_id = Utilities.getUrlSports();\n        const fantasy_list = Utilities.getMasterData().fantasy_list;\n        const sh_list = Utilities.getMasterData().sports_hub;\n        this.setState({\n            SLIST: fantasy_list || [],\n            GLIST: sh_list || [],\n            filterArray: fantasy_list || []\n        }, () => {\n            const FHGLIST = _filter(sh_list, (obj) => {\n                return obj.is_featured == 1;\n            })\n            const FGLIST = _filter(sh_list, (obj) => {\n                return obj.is_featured == 0;\n            })\n            this.setState({\n                HGLIST: FHGLIST,\n                GLIST: FGLIST,\n                FilterHGLIST: FHGLIST,\n                FilterGLIST: FGLIST\n            })\n            setValue.setAppSelectedSport(sports_id);\n            this.setState({ ACSPORTTAB: sports_id })\n            if (AppSelectedSport == null) {\n                this.checkSportID();\n            }\n            this.checkOldUrl()\n        })\n    }\n\n    checkSportID = () => {\n        let interval = setInterval(() => {\n            if (AppSelectedSport != null) {\n                clearInterval(interval)\n                this.setState({ ACSPORTTAB: AppSelectedSport })\n            }\n        }, 100)\n    }\n\n    checkOldUrl() {\n        let url = window.location.href;\n        if (!url.includes(Utilities.getSelectedSportsForUrl())) {\n            window.history.replaceState(\"\", \"\", window.location.pathname + \"#\" + Utilities.getSelectedSportsForUrl());\n        }\n    }\n\n    onTabClick = (item) => {\n        ls.set('selectedSports', item.sports_id);\n        setValue.setAppSelectedSport(item.sports_id);\n        this.setState({ ACSPORTTAB: item.sports_id });\n        this.props.history.replace(window.location.pathname + \"#\" + Utilities.getSelectedSportsForUrl())\n    }\n\n    selectGameType = (item) => {\n        Utilities.handleAppBackManage('game-type')\n        let sport = ls.get('selectedSports');\n        let allowedSport = item.allowed_sports || '';\n        if ((allowedSport == '') || (allowedSport.length > 0 && allowedSport.includes(sport))) {\n            Utilities.scrollToTop()\n            if (!SELECTED_GAMET) {\n                setTimeout(() => {\n                    CustomHeader.showSHSCM();\n                }, 100);\n            }\n            WSManager.setPickedGameType(item.game_key);\n            this.props.history.push(\"/lobby#\" + Utilities.getSelectedSportsForUrl())\n        }\n        else {\n            let FSport = allowedSport[0];\n            ls.set('selectedSports', FSport);\n            setValue.setAppSelectedSport(FSport);\n            this.setState({ ACSPORTTAB: FSport });\n            Utilities.scrollToTop()\n            if (!SELECTED_GAMET) {\n                setTimeout(() => {\n                    CustomHeader.showSHSCM();\n                }, 100);\n            }\n\n            WSManager.setPickedGameType(item.game_key);\n            this.props.history.push(\"/lobby#\" + Utilities.getSelectedSportsForUrl())\n        }\n    }\n\n    /** \n   @description show lobby filters \n   */\n    showFilter = () => {\n        this.setState({ showHubFitlers: true })\n    }\n    /** \n   @description hide lobby filters \n   */\n    hideFilter = () => {\n        this.setState({ showHubFitlers: false })\n    }\n\n    filterBySport = (filterBy) => {\n        this.setState({\n            showHubFitlers: false,\n            SelectedSport: filterBy,\n            refreshList: false\n        }, () => {\n            this.setState({\n                refreshList: true\n            })\n            if (filterBy != '') {\n                let spID = filterBy.sports_id\n                let HGLIST = _filter(this.state.HGLIST, (obj) => {\n                    return obj.allowed_sports && obj.allowed_sports.includes(spID);\n                })\n                let GLIST = _filter(this.state.GLIST, (itm) => {\n                    return itm.allowed_sports && itm.allowed_sports.includes(spID);\n                })\n                this.setState({\n                    FilterHGLIST: HGLIST,\n                    FilterGLIST: GLIST\n                })\n                ls.set('selectedSports', spID);\n                setValue.setAppSelectedSport(spID);\n                this.setState({ ACSPORTTAB: spID });\n                this.props.history.replace(window.location.pathname + \"#\" + Utilities.getSelectedSportsForUrl())\n            }\n            else {\n                this.setData()\n            }\n        })\n    }\n\n    renderBigcard = (item, idx) => {\n        let renderImg = item.image ? Utilities.getSettingURL(item.image) : Images.DFS_BIG;\n        let avaSports = this.state.SelectedSport == '' ? item.allowed_sports : '';\n        return (\n            <li className={\"card-v big-card\" + (this.state.HGLIST && this.state.HGLIST.length == 1 ? ' big-card-single' : '')} key={idx + item.game_key} onClick={() => this.selectGameType(item)} >\n                <img src={renderImg} alt=\"\" />\n                <div className=\"game-v\">\n                    <p className=\"game-v-title\">{item[appLang + '_t']}</p>\n                    <p className=\"game-v-detail\">{item[appLang + '_d']}</p>\n                    <span className=\"p-now\">{AL.PLAY}</span>\n                    <div className=\"ava-sport-sec\">\n                        {\n                            avaSports && avaSports.length > 0 &&\n                            <>\n                                {\n                                    _Map(avaSports, (obj, idx) => {\n                                        var sportsId = '';\n                                        if (obj in Sports.url) {\n                                            sportsId = Sports.url[obj + (appLang || '')];\n                                        }\n                                        if (idx < 3) {\n                                            return (\n                                                sportsId != '' &&\n                                                <span className=\"sport-text\" onClick={(e) => this.selectModuleSport(e, item, obj)} key={idx + sportsId}>{sportsId}</span>\n                                            )\n                                        } else {\n                                            return (\n                                                <>\n                                                {\n                                                    idx==3 &&\n                                                    <span key={idx + sportsId} className=\"sport-text\">+{avaSports.length - 3}</span>\n                                                }\n                                                </>\n\n                                            )\n                                        }\n                                    })\n                                }\n                            </>\n                        }\n                    </div>\n                </div>\n            </li>\n        )\n    }\n\n    selectModuleSport = (e, mode, sport) => {\n        e.stopPropagation()\n        if (sport != '') {\n            ls.set('selectedSports', sport);\n            setValue.setAppSelectedSport(sport);\n            this.setState({ ACSPORTTAB: sport });\n            this.props.history.replace(window.location.pathname + \"#\" + Utilities.getSelectedSportsForUrl())\n            Utilities.scrollToTop()\n            if (!SELECTED_GAMET) {\n                setTimeout(() => {\n                    CustomHeader.showSHSCM();\n                }, 100);\n            }\n            WSManager.setPickedGameType(mode.game_key);\n            this.props.history.push(\"/lobby#\" + Utilities.getSelectedSportsForUrl())\n        }\n    }\n\n    goToScreen = (pathname) => {\n        this.props.history.push(pathname);\n    }\n\n    getReferralValue = () => {\n        var isCoinAllowed = Utilities.getMasterData().a_coin == \"1\";\n        var coinsAmt = parseInt(this.state.referalData.coins || '0');\n        var realAmt = parseInt(this.state.referalData.real_amount || '0');\n        var bonusAmt = parseInt(this.state.referalData.bonus_amount || '0');\n\n        let text = realAmt > 0 ?\n            (Utilities.getMasterData().currency_code + ' ' + realAmt + ' ' + AL.REAL_CASH) :\n            bonusAmt > 0 ?\n                Utilities.getMasterData().currency_code + ' ' + bonusAmt + ' ' + AL.BONUS_CASH :\n                (isCoinAllowed && coinsAmt > 0) ?\n                    coinsAmt + ' ' + AL.COINS : ''\n        return text\n    }\n\n    renderBannerCard = () => {\n        if (Utilities.getMasterData().a_hub_banner != 1) {\n            return ''\n        }\n        let bannerImg = Utilities.getMasterData().hub_banner;\n        let amountRef = this.getReferralValue()\n        return (\n            bannerImg ?\n                <li onClick={() => this.goToScreen('/refer-friend')} className=\"pickem-prediction-outer-card is-card banner-card card-v\">\n                    <img className=\"img-dfs\" src={Utilities.getSettingURL(bannerImg)} alt='' />\n                </li>\n                : amountRef ?\n                    <li onClick={() => this.goToScreen('/refer-friend')} className=\"pickem-prediction-outer-card is-card banner-card card-v\">\n                        <div className=\"dfs-card\" >\n                            <img className=\"img-dfs-shape\" src={Images.PICKEM_SHAPE_IMG} alt='' />\n                            <div className=\"dfs-c\">\n                                <img className=\"img-dfs\" src={Images.MEN_IMG_REFER} alt='' />\n                                <p>\n                                    {AL.REFER_A_FRIEND_AND_GET}\n                                    {amountRef} {AL.on_your_friends_signup}\n                                    <a href className=\"button\">{AL.REFER_NOW}!</a>\n                                </p>\n                            </div>\n                        </div>\n                    </li>\n                    :\n                    '')\n    }\n\n    renderCard = (item, idx) => {\n        var sportImg = item.game_key === GameType.MultiGame ? Images.MULTI_GAME_IMG : item.game_key === GameType.Free2Play ? Images.FTP_IMG : item.game_key === GameType.Pred ? Images.PRED_IMG : item.game_key === GameType.Pickem ? Images.PICKEM_TOUR_IMG : item.game_key === GameType.OpenPred ? Images.OPEN_PRED_PP : item.game_key === GameType.OpenPredLead ? Images.OPEN_PRED_LEAD : Images.DFS_SIDE_IMG;\n        let avaSports = this.state.SelectedSport == '' ? item.allowed_sports : '';\n        sportImg = item.image ? Utilities.getSettingURL(item.image) : sportImg;\n        return (\n            <li className=\"card-v\" key={item.game_key} onClick={() => this.selectGameType(item)} >\n                <div className=\"game-v\">\n                    <img src={sportImg} alt=\"\" className=\"sport-img\" />\n                    <p className=\"game-v-title\">{item[appLang + '_t']}</p>\n                    <p className=\"game-v-detail\">{item[appLang + '_d']}</p>\n                    <span className=\"p-now\">{(item.game_key === GameType.Pred || item.game_key === GameType.OpenPred || item.game_key === GameType.OpenPredLead) ? AL.PREDICT : item.game_key === GameType.Pickem ? AL.PICK : (AL.PLAY + '!')}</span>\n                </div>\n                {\n                    avaSports && avaSports.length > 0 &&\n                    <div className=\"ava-sport\">\n                        {\n                            _Map(avaSports, (obj, idx) => {\n                                var sportsId = '';\n                                if (obj in Sports.url) {\n                                    sportsId = Sports.url[obj + (appLang || '')];\n                                }\n                                return (\n                                    idx < 3 ?\n                                        sportsId != '' &&\n                                        <span className=\"sport-text\" onClick={(e) => this.selectModuleSport(e, item, obj)} key={idx + sportsId}>{sportsId}</span>\n                                        :\n                                        <span key={idx + sportsId} className=\"sport-text\" onClick={(e) => this.selectModuleSport(e, '', '')}>+{avaSports.length - 3}</span>\n                                )\n                            })\n                        }\n                    </div>\n                }\n            </li>\n        )\n    }\n    updateDeviceToken = () => {\n        let param = {\n            \"device_type\": WSC.deviceTypeAndroid,\n            \"device_id\": WSC.DeviceToken.getDeviceId(),\n        }\n        if(WSManager.loggedIn()){\n            updateDeviceToken(param).then((responseJson) => {\n            })\n        }\n    }\n   \n    render() {\n        const { SLIST, HOS, showHubFitlers, filterArray, SelectedSport, FilterHGLIST, FilterGLIST } = this.state\n        var settings = {\n            touchThreshold: 10,\n            infinite: false,\n            slidesToScroll: 1,\n            slidesToShow: 1,\n            variableWidth: false,\n            initialSlide: 0,\n            dots: false,\n            centerMode: true,\n            className: \"center\",\n            centerPadding: \"20px\",\n            responsive: [\n                {\n                    breakpoint: 500,\n                    settings: {\n                        className: \"center\",\n                        centerPadding: \"20px\",\n                    }\n\n                },\n            ]\n        };\n\n        let FitlerOptions = {\n            showHubFitlers: showHubFitlers,\n            filtered_league_id: SelectedSport\n        }\n        return (\n            <MyContext.Provider >\n                <div className={\"web-container sports-hub-c new-sport-hub \" + (SLIST.length > 1 ? 'web-container-fixed' : 'web-container-no-fixed') + ' sport-hub-scroll'}>\n                    <Helmet titleTemplate={`${MetaData.template} | %s`}>\n                        <title>{MetaData.SHS.title}</title>\n                        <meta name=\"description\" content={MetaData.SHS.description} />\n                        <meta name=\"keywords\" content={MetaData.SHS.keywords}></meta>\n                    </Helmet>\n                    <CustomHeader {...this.props} HeaderOption={HOS} showLobbyFitlers={this.showFilter} />\n                    {showHubFitlers && <Suspense fallback={<div />} ><Filter\n                        {...this.props}\n                        selectedFSport={SelectedSport}\n                        sportsList={filterArray}\n                        FitlerOptions={FitlerOptions}\n                        hideFilter={this.hideFilter}\n                        filterBySport={this.filterBySport}\n                    /></Suspense>}\n                    <div className=\"dashboard-container\">\n                        <div className=\"blue-bg-section\">\n                        </div>\n\n                        <ul className=\"card-container\">\n                            {\n                                FilterHGLIST && FilterHGLIST.length > 1 &&\n                                <Suspense fallback={<div />} ><ReactSlickSlider settings = {settings}>\n                                    {\n                                        _Map(FilterHGLIST, (item, idx) => {\n                                            return this.renderBigcard(item, idx)\n                                        })\n                                    }\n                                </ReactSlickSlider></Suspense>\n                            }\n                            {\n                                FilterHGLIST && FilterHGLIST.length == 1 &&\n                                this.renderBigcard(FilterHGLIST[0], 1)\n                            }\n                            {\n                                _Map(FilterGLIST, (item, idx) => {\n                                    return <React.Fragment key={item.game_key + \"f\"} >\n                                        {this.renderCard(item, idx)}\n                                        {\n                                            idx == 2 &&\n                                            this.renderBannerCard()\n                                        }\n                                    </React.Fragment>\n                                })\n                            }\n                            {\n                                (FilterGLIST.length == 1 || FilterGLIST.length == 2) &&\n                                this.renderBannerCard()\n                            }\n                        </ul>\n                    </div>\n                    {\n                        Utilities.getMasterData().a_coin == \"1\" && WSManager.loggedIn() && <div className=\"sports-hub-footer-tabs\">\n                            <div className=\"dot-list left\">{\n                                _times(6, (itm) => {\n                                    return (\n                                        <span key={itm} />\n                                    )\n                                })\n                            }\n                            </div>\n                            <div onClick={() => this.props.history.push('/earn-coins')} className=\"isCoin coin-shine cursor-pointer\">\n                                <div className=\"shadow-v\" />\n                                <span className={\"coins-tab-label\" + (AL.EARN_COINS.length > 12 ? ' marque' : '')}>{AL.EARN_COINS}</span>\n                                <span className=\"fcoin\">\n                                    <img src={Images.EARN_COINS} alt=\"\" />\n                                    <>\n                                        <div className=\"spark1\">✦</div>\n                                        <div className=\"spark2\">✦</div>\n                                        <div className=\"spark3\">✦</div>\n                                    </>\n                                </span>\n                            </div>\n                            <div className=\"dot-list right\">{\n                                _times(6, (itm) => {\n                                    return (\n                                        <span key={itm} />\n                                    )\n                                })\n                            }\n                            </div>\n                        </div>\n                    }\n                </div>\n            </MyContext.Provider>\n        )\n    }\n}\n\nexport default SportsHub;"],"sourceRoot":""}