{"version":3,"sources":["Modals/NewPlayerCard.jsx"],"names":["BreakDownPlayerCard","lazy","__webpack_require__","e","then","bind","NewPlayerCard","props","context","_this","Object","_Users_mukesh_sites_projects_dup_fantasysports_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","this","_Users_mukesh_sites_projects_dup_fantasysports_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","_Users_mukesh_sites_projects_dup_fantasysports_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","call","componentDidMount","getPlayerCardDetails","state","playerParams","_ref","_Users_mukesh_sites_projects_dup_fantasysports_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_mukesh_sites_projects_dup_fantasysports_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","param","api_response_data","wrap","_context","prev","next","league_id","player_team_id","setState","isLoading","getPlayerCard","sent","playerCard","stop","_x","apply","arguments","PlayerCardHide","showPlayeBreakDown","playerDetails","selectedGame","player","_step","isExist","_iterator","_createForOfIteratorHelper","lineupArr","s","n","done","value","player_uid","err","f","_this2","_this$props","IsPlayerCardShow","IsPlayerCardHide","addPlayerToLineup","SelectedPositionName","_this$state","SelectedPlayerPosition","react__WEBPACK_IMPORTED_MODULE_7___default","createElement","react_bootstrap__WEBPACK_IMPORTED_MODULE_8__","show","bsSize","dialogClassName","className","Body","sports_id","SportsIDs","kabaddi","playing_announce","is_playing","AppLabels","lmp","href","onClick","src","jersey","Utilities","playerJersyURL","Images","DEFAULT_USER","alt","full_name","first_name","last_name","team_abbr","isFromGuru","checkPlayerExistInLineup","salary","position","match_history","length","Fragment","_Map","item","key","season_game_uid","toLowerCase","home","away","_Component_CustomComponent__WEBPACK_IMPORTED_MODULE_12__","data","date","scheduled_date","format","score","no_data","react__WEBPACK_IMPORTED_MODULE_7__","fallback","React","Component"],"mappings":"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","file":"static/js/39.737a3d65.chunk.js","sourcesContent":["\nimport React, { Suspense, lazy } from 'react';\nimport { Modal } from 'react-bootstrap';\nimport { SportsIDs } from \"../JsonFiles\";\nimport { _Map, Utilities } from \"../Utilities/Utilities\";\nimport { getPlayerCard } from '../WSHelper/WSCallings';\nimport { MomentDateComponent } from '../Component/CustomComponent';\nimport * as AppLabels from \"../helper/AppLabels\";\nimport Images from '../components/images';\nconst BreakDownPlayerCard = lazy(() => import('./BreakDownPlayerCard'));\n\nclass NewPlayerCard extends React.Component {\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n            playerParams: props.playerDetails,\n            playerCard: props.playerDetails || {},\n            isLoading: false,\n            showPlayeBreakDown: false,\n            selectedGame: ''\n        };\n    }\n\n    componentDidMount = () => {\n        this.getPlayerCardDetails(this.state.playerParams);\n    }\n\n    getPlayerCardDetails = async (playerParams) => {\n        let param = {\n            \"league_id\": playerParams.league_id,\n            \"player_team_id\": playerParams.player_team_id,\n        }\n        this.setState({\n            isLoading: true\n        })\n        var api_response_data = await getPlayerCard(param);\n        this.setState({\n            isLoading: false\n        })\n        if (api_response_data) {\n            api_response_data['league_id'] = playerParams.league_id;\n            this.setState({\n                playerCard: api_response_data\n            })\n        }\n    }\n\n    checkPlayerExistInLineup(player) {\n        var isExist = false\n        for (var selectedPlayer of this.props.lineupArr) {\n            if (selectedPlayer.player_uid == player.player_uid) {\n                isExist = true\n                break\n            }\n        }\n        return isExist\n    }\n\n    PlayerCardHide = () => {\n        this.setState({\n            showPlayeBreakDown: false,\n            playerDetails: {}\n        });\n    }\n\n    render() {\n        const { IsPlayerCardShow, IsPlayerCardHide, addPlayerToLineup, SelectedPositionName } = this.props;\n        const { playerCard, playerParams, SelectedPlayerPosition, isLoading, showPlayeBreakDown, selectedGame } = this.state;\n        return (\n            <Modal\n                show={IsPlayerCardShow}\n                bsSize=\"large\"\n                dialogClassName=\"modal-full-screen\"\n                className=\"modal-pre-lm new-player-card\">\n                <Modal.Body>\n                    <div className=\"close-header\">\n                        <div>\n                            {\n                                playerParams.sports_id != SportsIDs.kabaddi && playerParams.playing_announce == 1 && playerParams.is_playing == 1 &&\n                                <span className=\"text-success\"><span className=\"playing_indicator\"></span> {AppLabels.PLAYING}</span>\n                            }\n                            {\n                                playerParams.sports_id == SportsIDs.kabaddi && playerParams.playing_announce == 1 && playerParams.is_playing == 1 &&\n                                <span className=\"text-success\"><span className=\"playing_indicator\"></span> {AppLabels.ANNOUNCED}</span>\n                            }\n                            {\n                                playerParams.lmp && playerParams.lmp == 1 && playerParams.playing_announce == 0 &&\n                                <span className=\"played-last-match-text\"><span className=\"playing_indicator\"></span> {AppLabels.PLAYED_LAST_MATCH}</span>\n                            }\n                        </div>\n                        <a href onClick={IsPlayerCardHide}>\n                            <i className=\"icon-arrow-down\"></i>\n                        </a>\n                    </div>\n                    <div className=\"playercard-header\">\n                        <div className=\"player-img\">\n                            <img src={playerCard.jersey ? Utilities.playerJersyURL(playerCard.jersey) : Images.DEFAULT_USER} alt=\"\" />\n                        </div>\n                        <div className=\"player-self-detail\">\n                            {\n                                playerCard.full_name\n                                    ?\n                                    <span className=\"l-name\">{playerCard.full_name}</span>\n                                    :\n                                    <span className=\"l-name\">{playerCard.first_name} {playerCard.last_name}</span>\n                            }\n                            <span className=\"player-postion\">{playerCard.team_abbr}</span>\n                        </div>\n                        {\n                            !this.props.isFromGuru &&\n                            <a href className={\"btn-roster-action \" + (this.checkPlayerExistInLineup(playerParams) || (SelectedPlayerPosition == 'ALL' && playerParams.player_uid) ? 'added' : '')} onClick={() => addPlayerToLineup(playerParams)}>\n                            <i className={this.checkPlayerExistInLineup(playerParams) || (SelectedPlayerPosition == 'ALL' && playerParams.player_uid) ? \"icon-tick\" : \"icon-plus\"}></i>\n                        </a>\n                        }\n                       \n\n                        <ul className=\"list-player-detail\">\n                            <li><h4>{playerCard.salary || 0}</h4><span>{AppLabels.CREDITS}</span></li>\n                            <li><h4>{SelectedPositionName || playerCard.position}</h4><span>{AppLabels.ROLE}</span></li>\n                        </ul>\n                    </div>\n                    {\n                        !isLoading && <div className=\"match-list-v\">\n                            {\n                                playerCard.match_history && playerCard.match_history.length > 0\n                                    ?\n                                    <>\n                                        <div className=\"match-wise-fantasy\">{AppLabels.MATCH_WISE}</div>\n                                        <div className=\"click-on\">{AppLabels.CLICK_ON_CARD}</div>\n                                        {\n                                            _Map(playerCard.match_history, (item) => {\n                                                return (\n                                                    <div onClick={() => this.setState({ showPlayeBreakDown: true, selectedGame: item })} className=\"match-item\" key={item.season_game_uid}>\n                                                        <div className=\"item-sec\"><div className=\"name-h4\"><div className={\"team_name \" + ((playerCard.team_abbr || '').toLowerCase() == item.home.toLowerCase() ? 'active' : '')}>{item.home}</div> <div className=\"team_name\">{AppLabels.VERSES}</div> <div className={\"team_name \" + ((playerCard.team_abbr || '').toLowerCase() == item.away.toLowerCase() ? 'active' : '')}>{item.away}</div></div><span><MomentDateComponent data={{ date: item.scheduled_date, format: \"MMMM DD, YYYY\" }} /></span></div>\n                                                        <div className=\"item-sec small\"><div className=\"name-h4\">{item.salary || 0}</div><span>{AppLabels.CREDITS}</span></div>\n                                                        <div className=\"item-sec small\"><div className=\"name-h4\">{item.score || 0}</div><span>{AppLabels.POINTS}</span></div>\n                                                    </div>\n                                                )\n                                            })\n                                        }\n                                    </>\n                                    :\n                                    <div className=\"no-data-container\">\n                                        <img alt=\"\" src={Images.no_data} />\n                                        <h3>{AppLabels.NO_DATA_FOUND}</h3>\n                                    </div>\n                            }\n                        </div>\n                    }\n                    {\n                        showPlayeBreakDown &&\n                        <Suspense fallback={<div />} >\n                            <BreakDownPlayerCard IsPlayerCardShow={showPlayeBreakDown} playerDetails={playerCard} team_abbr ={playerCard.team_abbr || ''} IsPlayerCardHide={this.PlayerCardHide} selectedGame={selectedGame} />\n                        </Suspense>\n                    }\n                </Modal.Body>\n            </Modal>\n        );\n    }\n}\n\nexport default NewPlayerCard"],"sourceRoot":""}