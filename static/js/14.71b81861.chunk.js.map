{"version":3,"sources":["Modals/BreakDownPlayerCard.jsx"],"names":["BreakDownPlayerCard","props","context","_this","Object","_Users_mukesh_sites_projects_dup_fantasysports_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","this","_Users_mukesh_sites_projects_dup_fantasysports_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","_Users_mukesh_sites_projects_dup_fantasysports_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","call","componentDidMount","getPlayerDetails","console","log","state","playerDetails","_Users_mukesh_sites_projects_dup_fantasysports_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_mukesh_sites_projects_dup_fantasysports_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","param","api_response_data","wrap","_context","prev","next","league_id","player_team_id","selectedGame","setState","isLoading","IsNetworkGameContest","getPlayerBreakdownNF","t0","sent","getPlayerBreakdown","stop","team_abbr","nextProps","_this2","_this$props","IsPlayerCardShow","IsPlayerCardHide","_this$state","react__WEBPACK_IMPORTED_MODULE_7___default","createElement","react_bootstrap__WEBPACK_IMPORTED_MODULE_8__","show","bsSize","dialogClassName","className","Body","href","onClick","full_name","home","toLowerCase","AppLabels","away","AppSelectedSport","format","MATCH_TYPE","league_name","_Component_CustomComponent__WEBPACK_IMPORTED_MODULE_11__","data","date","scheduled_date","position","salary","player_value","Fragment","_Map","keys","break_down","key","keyName","replace","item","name","points","score","isMobileSafari","React","Component"],"mappings":"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","file":"static/js/14.71b81861.chunk.js","sourcesContent":["\nimport React from 'react';\nimport { Modal } from 'react-bootstrap';\nimport { _Map } from \"../Utilities/Utilities\";\nimport { getPlayerBreakdown,getPlayerBreakdownNF } from '../WSHelper/WSCallings';\nimport { MomentDateComponent } from '../Component/CustomComponent';\nimport * as AppLabels from \"../helper/AppLabels\";\nimport { MATCH_TYPE, AppSelectedSport } from '../helper/Constants';\nimport { isMobileSafari } from 'react-device-detect';\n\nclass BreakDownPlayerCard extends React.Component {\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n            playerDetails: props.playerDetails || {},\n            team_abbr: props.team_abbr || {},\n            selectedGame: props.selectedGame || {},\n            isLoading: false\n        };\n    }\n\n    componentDidMount = () => {\n        this.getPlayerDetails();\n        console.log(\"playerDetails\",this.state.playerDetails)\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps && nextProps.selectedGame != this.props.selectedGame) {\n            this.setState({\n                playerDetails: nextProps.playerDetails || {},\n                team_abbr: nextProps.team_abbr || {},\n                selectedGame: nextProps.selectedGame || {},\n                isLoading: false\n            }, () => {\n                this.getPlayerDetails();\n            })\n        }\n    }\n\n    getPlayerDetails = async () => {\n        let param = {\n            \"league_id\": this.state.playerDetails.league_id,\n            \"player_team_id\": this.state.selectedGame.player_team_id,\n        }\n        this.setState({\n            isLoading: true\n        })\n        var api_response_data = this.props.IsNetworkGameContest ?  await getPlayerBreakdownNF(param)  : await getPlayerBreakdown(param);\n        this.setState({\n            isLoading: false\n        })\n        if (api_response_data) {\n            this.setState({\n                playerDetails: api_response_data\n            })\n        }\n    }\n\n    render() {\n        const { IsPlayerCardShow, IsPlayerCardHide } = this.props;\n        const { playerDetails, isLoading, team_abbr } = this.state;\n        return (\n            <Modal\n                show={IsPlayerCardShow}\n                bsSize=\"large\"\n                dialogClassName=\"modal-full-screen\"\n                className=\"modal-pre-lm new-player-card player-break-down\">\n                <Modal.Body>\n                    <div className=\"close-header\">\n                        <a href onClick={IsPlayerCardHide}>\n                            <i className=\"icon-close\"></i>\n                        </a>\n                    </div>\n                    <div className=\"playercard-header\">\n                        <div className=\"player-self-detail\">\n                            <span className=\"l-name\">{playerDetails.full_name}</span>\n                            {playerDetails.home && <span className=\"fixture-name\"><span className={(team_abbr.toLowerCase() == (playerDetails.home || '').toLowerCase() ? 'active' : '')}>{playerDetails.home}</span> {AppLabels.VERSES} <span className={(team_abbr.toLowerCase() == (playerDetails.away || '').toLowerCase() ? 'active' : '')}>{playerDetails.away}</span> {AppSelectedSport == '7' && playerDetails.format ? \"(\" + MATCH_TYPE[playerDetails.format] + \")\" : ''}</span>}\n                            <span className=\"league-name\">{playerDetails.league_name ? (playerDetails.league_name + \", \") : ''}<span><MomentDateComponent data={{ date: playerDetails.scheduled_date, format: \"DD MMM - YYYY\" }} /></span></span>\n                        </div>\n                        <ul className=\"list-player-detail\">\n                            <li><h4>{playerDetails.position}</h4><span>{AppLabels.ROLE}</span></li>\n                            <li><h4>{playerDetails.salary || 0}</h4><span>{AppLabels.CREDITS}</span></li>\n                            <li><h4>{playerDetails.player_value || 0}</h4><span>{AppLabels.PLAYER} {AppLabels.VALUE}</span></li>\n                        </ul>\n                    </div>\n                    <div className=\"break-down-l\">\n                        <div className=\"break-down-h\">\n                            <div className=\"item-n max\">{AppLabels.EVENT}</div>\n                            <div className=\"item-n\">{AppLabels.ACTUAL}</div>\n                            <div className=\"item-n\">{AppLabels.POINTS}</div>\n                        </div>\n                    </div>\n                    {\n                        !isLoading &&\n                        <>\n                            {\n                                _Map(Object.keys(playerDetails.break_down || {}), (key) => {\n                                    let keyName = key.replace(\"_\", \" \")\n                                    return (\n                                        <div key={key} className=\"break-down-l\">\n                                            <div className=\"strip-v\">{keyName}</div>\n                                            {\n                                                _Map(playerDetails.break_down[key], (item) => {\n                                                    return (\n                                                        <div key={item.name} className=\"break-down-h sub\">\n                                                            <div className=\"item-n max\">{item.name}</div>\n                                                            <div className=\"item-n\">{item.points}</div>\n                                                            <div className=\"item-n\">{item.score}</div>\n                                                        </div>\n                                                    )\n                                                })\n                                            }\n                                        </div>\n                                    )\n                                })\n                            }\n                            <div className=\"total-footer\">\n                                <span>{AppLabels.TOTAL}</span>\n                                <span className=\"max\">{playerDetails.score}</span>\n                            </div>\n                            {isMobileSafari && <div className=\"mob-browser-support\" />}\n                        </>\n                    }\n                </Modal.Body>\n            </Modal>\n        );\n    }\n}\n\nexport default BreakDownPlayerCard"],"sourceRoot":""}